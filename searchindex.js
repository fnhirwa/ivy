Search.setIndex({"docnames": ["_version", "assertions", "assertions/check_all", "assertions/check_all_or_any_fn", "assertions/check_any", "assertions/check_elem_in_list", "assertions/check_equal", "assertions/check_exists", "assertions/check_false", "assertions/check_fill_value_and_dtype_are_compatible", "assertions/check_gather_input_valid", "assertions/check_gather_nd_input_valid", "assertions/check_greater", "assertions/check_isinstance", "assertions/check_less", "assertions/check_shape", "assertions/check_true", "backend_handler", "backend_handler/choose_random_backend", "backend_handler/clear_backend_stack", "backend_handler/current_backend", "backend_handler/fn_name_from_version_specific_fn_name", "backend_handler/get_backend", "backend_handler/set_backend", "backend_handler/set_backend_to_specific_version", "backend_handler/unset_backend", "background", "background/ml_explosion", "background/standardization", "background/why_unify", "contributing", "contributing/applied_libraries", "contributing/building_the_docs", "contributing/helpful_resources", "contributing/open_tasks", "contributing/setting_up", "contributing/the_basics", "data_classes", "data_classes/array", "data_classes/array/activations", "data_classes/array/activations/ArrayWithActivations", "data_classes/array/array", "data_classes/array/array/Array", "data_classes/array/conversions", "data_classes/array/conversions/args_to_ivy", "data_classes/array/conversions/args_to_native", "data_classes/array/conversions/to_ivy", "data_classes/array/conversions/to_native", "data_classes/array/creation", "data_classes/array/creation/ArrayWithCreation", "data_classes/array/data_type", "data_classes/array/data_type/ArrayWithDataTypes", "data_classes/array/device", "data_classes/array/device/ArrayWithDevice", "data_classes/array/elementwise", "data_classes/array/elementwise/ArrayWithElementwise", "data_classes/array/extensions", "data_classes/array/extensions/ArrayWithExtensions", "data_classes/array/general", "data_classes/array/general/ArrayWithGeneral", "data_classes/array/gradients", "data_classes/array/gradients/ArrayWithGradients", "data_classes/array/image", "data_classes/array/image/ArrayWithImage", "data_classes/array/layers", "data_classes/array/layers/ArrayWithLayers", "data_classes/array/linear_algebra", "data_classes/array/linear_algebra/ArrayWithLinearAlgebra", "data_classes/array/losses", "data_classes/array/losses/ArrayWithLosses", "data_classes/array/manipulation", "data_classes/array/manipulation/ArrayWithManipulation", "data_classes/array/norms", "data_classes/array/norms/ArrayWithNorms", "data_classes/array/random", "data_classes/array/random/ArrayWithRandom", "data_classes/array/searching", "data_classes/array/searching/ArrayWithSearching", "data_classes/array/set", "data_classes/array/set/ArrayWithSet", "data_classes/array/sorting", "data_classes/array/sorting/ArrayWithSorting", "data_classes/array/statistical", "data_classes/array/statistical/ArrayWithStatistical", "data_classes/array/utility", "data_classes/array/utility/ArrayWithUtility", "data_classes/array/wrapping", "data_classes/array/wrapping/add_ivy_array_instance_methods", "data_classes/container", "data_classes/container/activations", "data_classes/container/activations/ContainerWithActivations", "data_classes/container/base", "data_classes/container/base/ContainerBase", "data_classes/container/container", "data_classes/container/container/Container", "data_classes/container/conversions", "data_classes/container/conversions/ContainerWithConversions", "data_classes/container/creation", "data_classes/container/creation/ContainerWithCreation", "data_classes/container/data_type", "data_classes/container/data_type/ContainerWithDataTypes", "data_classes/container/device", "data_classes/container/device/ContainerWithDevice", "data_classes/container/elementwise", "data_classes/container/elementwise/ContainerWithElementwise", "data_classes/container/extensions", "data_classes/container/extensions/ContainerWithExtensions", "data_classes/container/general", "data_classes/container/general/ContainerWithGeneral", "data_classes/container/gradients", "data_classes/container/gradients/ContainerWithGradients", "data_classes/container/image", "data_classes/container/image/ContainerWithImage", "data_classes/container/layers", "data_classes/container/layers/ContainerWithLayers", "data_classes/container/linear_algebra", "data_classes/container/linear_algebra/ContainerWithLinearAlgebra", "data_classes/container/losses", "data_classes/container/losses/ContainerWithLosses", "data_classes/container/manipulation", "data_classes/container/manipulation/ContainerWithManipulation", "data_classes/container/norms", "data_classes/container/norms/ContainerWithNorms", "data_classes/container/random", "data_classes/container/random/ContainerWithRandom", "data_classes/container/searching", "data_classes/container/searching/ContainerWithSearching", "data_classes/container/set", "data_classes/container/set/ContainerWithSet", "data_classes/container/sorting", "data_classes/container/sorting/ContainerWithSorting", "data_classes/container/statistical", "data_classes/container/statistical/ContainerWithStatistical", "data_classes/container/utility", "data_classes/container/utility/ContainerWithUtility", "data_classes/container/wrapping", "data_classes/container/wrapping/add_ivy_container_instance_methods", "deep_dive", "deep_dive/array_api_tests", "deep_dive/arrays", "deep_dive/backend_setting", "deep_dive/containers", "deep_dive/continuous_integration", "deep_dive/data_types", "deep_dive/devices", "deep_dive/docstring_examples", "deep_dive/docstrings", "deep_dive/exception_handling", "deep_dive/formatting", "deep_dive/function_arguments", "deep_dive/function_types", "deep_dive/function_wrapping", "deep_dive/inplace_updates", "deep_dive/ivy_frontends", "deep_dive/ivy_frontends_tests", "deep_dive/ivy_tests", "deep_dive/navigating_the_code", "deep_dive/superset_behaviour", "design", "design/building_blocks", "design/ivy_as_a_framework", "design/ivy_as_a_framework/ivy_array", "design/ivy_as_a_framework/ivy_container", "design/ivy_as_a_framework/ivy_stateful_api", "design/ivy_as_a_transpiler", "docs/ivy", "docs/ivy_builder", "docs/ivy_ecosystem", "docs/ivy_gym", "docs/ivy_mech", "docs/ivy_memory", "docs/ivy_models", "docs/ivy_robot", "docs/ivy_vision", "extensions", "extensions/applied_libraries", "faq", "func_wrapper", "func_wrapper/from_zero_dim_arrays_to_float", "func_wrapper/handle_nestable", "func_wrapper/handle_out_argument", "func_wrapper/infer_device", "func_wrapper/infer_dtype", "func_wrapper/inputs_to_ivy_arrays", "func_wrapper/inputs_to_native_arrays", "func_wrapper/integer_arrays_to_float", "func_wrapper/outputs_to_ivy_arrays", "func_wrapper/to_native_arrays_and_back", "functional/ivy", "functional/ivy/activations", "functional/ivy/activations/gelu", "functional/ivy/activations/gelu/gelu_array", "functional/ivy/activations/gelu/gelu_container", "functional/ivy/activations/gelu/gelu_functional", "functional/ivy/activations/gelu/static_gelu_container", "functional/ivy/activations/leaky_relu", "functional/ivy/activations/leaky_relu/leaky_relu_array", "functional/ivy/activations/leaky_relu/leaky_relu_container", "functional/ivy/activations/leaky_relu/leaky_relu_functional", "functional/ivy/activations/leaky_relu/static_leaky_relu_container", "functional/ivy/activations/log_softmax", "functional/ivy/activations/log_softmax/log_softmax_array", "functional/ivy/activations/log_softmax/log_softmax_container", "functional/ivy/activations/log_softmax/log_softmax_functional", "functional/ivy/activations/log_softmax/static_log_softmax_container", "functional/ivy/activations/relu", "functional/ivy/activations/relu/relu_array", "functional/ivy/activations/relu/relu_container", "functional/ivy/activations/relu/relu_functional", "functional/ivy/activations/relu/static_relu_container", "functional/ivy/activations/sigmoid", "functional/ivy/activations/sigmoid/sigmoid_array", "functional/ivy/activations/sigmoid/sigmoid_container", "functional/ivy/activations/sigmoid/sigmoid_functional", "functional/ivy/activations/sigmoid/static_sigmoid_container", "functional/ivy/activations/softmax", "functional/ivy/activations/softmax/softmax_array", "functional/ivy/activations/softmax/softmax_container", "functional/ivy/activations/softmax/softmax_functional", "functional/ivy/activations/softmax/static_softmax_container", "functional/ivy/activations/softplus", "functional/ivy/activations/softplus/softplus_array", "functional/ivy/activations/softplus/softplus_container", "functional/ivy/activations/softplus/softplus_functional", "functional/ivy/activations/softplus/static_softplus_container", "functional/ivy/compilation", "functional/ivy/compilation/compile", "functional/ivy/constants", "functional/ivy/creation", "functional/ivy/creation/NestedSequence", "functional/ivy/creation/arange", "functional/ivy/creation/arange/arange_functional", "functional/ivy/creation/arange/static_arange_container", "functional/ivy/creation/asarray", "functional/ivy/creation/asarray/asarray_array", "functional/ivy/creation/asarray/asarray_functional", "functional/ivy/creation/asarray/static_asarray_container", "functional/ivy/creation/asarray_handle_nestable", "functional/ivy/creation/asarray_infer_device", "functional/ivy/creation/asarray_to_native_arrays_and_back", "functional/ivy/creation/copy_array", "functional/ivy/creation/copy_array/copy_array_array", "functional/ivy/creation/copy_array/copy_array_functional", "functional/ivy/creation/empty", "functional/ivy/creation/empty_like", "functional/ivy/creation/empty_like/empty_like_array", "functional/ivy/creation/empty_like/empty_like_container", "functional/ivy/creation/empty_like/empty_like_functional", "functional/ivy/creation/empty_like/static_empty_like_container", "functional/ivy/creation/eye", "functional/ivy/creation/eye/eye_functional", "functional/ivy/creation/eye/static_eye_container", "functional/ivy/creation/from_dlpack", "functional/ivy/creation/from_dlpack/from_dlpack_array", "functional/ivy/creation/from_dlpack/from_dlpack_container", "functional/ivy/creation/from_dlpack/from_dlpack_functional", "functional/ivy/creation/from_dlpack/static_from_dlpack_container", "functional/ivy/creation/full", "functional/ivy/creation/full_like", "functional/ivy/creation/full_like/full_like_array", "functional/ivy/creation/full_like/full_like_container", "functional/ivy/creation/full_like/full_like_functional", "functional/ivy/creation/full_like/static_full_like_container", "functional/ivy/creation/linspace", "functional/ivy/creation/linspace/linspace_functional", "functional/ivy/creation/linspace/static_linspace_container", "functional/ivy/creation/logspace", "functional/ivy/creation/logspace/logspace_functional", "functional/ivy/creation/logspace/static_logspace_container", "functional/ivy/creation/meshgrid", "functional/ivy/creation/meshgrid/meshgrid_array", "functional/ivy/creation/meshgrid/meshgrid_container", "functional/ivy/creation/meshgrid/meshgrid_functional", "functional/ivy/creation/meshgrid/static_meshgrid_container", "functional/ivy/creation/native_array", "functional/ivy/creation/native_array/native_array_array", "functional/ivy/creation/native_array/native_array_container", "functional/ivy/creation/native_array/native_array_functional", "functional/ivy/creation/native_array/static_native_array_container", "functional/ivy/creation/one_hot", "functional/ivy/creation/one_hot/one_hot_array", "functional/ivy/creation/one_hot/one_hot_container", "functional/ivy/creation/one_hot/one_hot_functional", "functional/ivy/creation/one_hot/static_one_hot_container", "functional/ivy/creation/ones", "functional/ivy/creation/ones/ones_functional", "functional/ivy/creation/ones/static_ones_container", "functional/ivy/creation/ones_like", "functional/ivy/creation/ones_like/ones_like_array", "functional/ivy/creation/ones_like/ones_like_container", "functional/ivy/creation/ones_like/ones_like_functional", "functional/ivy/creation/ones_like/static_ones_like_container", "functional/ivy/creation/tril", "functional/ivy/creation/tril/static_tril_container", "functional/ivy/creation/tril/tril_array", "functional/ivy/creation/tril/tril_container", "functional/ivy/creation/tril/tril_functional", "functional/ivy/creation/triu", "functional/ivy/creation/triu/static_triu_container", "functional/ivy/creation/triu/triu_array", "functional/ivy/creation/triu/triu_container", "functional/ivy/creation/triu/triu_functional", "functional/ivy/creation/zeros", "functional/ivy/creation/zeros/static_zeros_container", "functional/ivy/creation/zeros/zeros_functional", "functional/ivy/creation/zeros_like", "functional/ivy/creation/zeros_like/static_zeros_like_container", "functional/ivy/creation/zeros_like/zeros_like_array", "functional/ivy/creation/zeros_like/zeros_like_container", "functional/ivy/creation/zeros_like/zeros_like_functional", "functional/ivy/data_type", "functional/ivy/data_type/as_ivy_dtype", "functional/ivy/data_type/as_native_dtype", "functional/ivy/data_type/astype", "functional/ivy/data_type/astype/astype_array", "functional/ivy/data_type/astype/astype_container", "functional/ivy/data_type/astype/astype_functional", "functional/ivy/data_type/astype/static_astype_container", "functional/ivy/data_type/broadcast_arrays", "functional/ivy/data_type/broadcast_arrays/broadcast_arrays_array", "functional/ivy/data_type/broadcast_arrays/broadcast_arrays_container", "functional/ivy/data_type/broadcast_arrays/broadcast_arrays_functional", "functional/ivy/data_type/broadcast_arrays/static_broadcast_arrays_container", "functional/ivy/data_type/broadcast_to", "functional/ivy/data_type/broadcast_to/broadcast_to_array", "functional/ivy/data_type/broadcast_to/broadcast_to_container", "functional/ivy/data_type/broadcast_to/broadcast_to_functional", "functional/ivy/data_type/broadcast_to/static_broadcast_to_container", "functional/ivy/data_type/can_cast", "functional/ivy/data_type/can_cast/can_cast_array", "functional/ivy/data_type/can_cast/can_cast_container", "functional/ivy/data_type/can_cast/can_cast_functional", "functional/ivy/data_type/can_cast/static_can_cast_container", "functional/ivy/data_type/check_float", "functional/ivy/data_type/closest_valid_dtype", "functional/ivy/data_type/default_dtype", "functional/ivy/data_type/default_float_dtype", "functional/ivy/data_type/default_float_dtype/default_float_dtype_functional", "functional/ivy/data_type/default_float_dtype/static_default_float_dtype_container", "functional/ivy/data_type/default_int_dtype", "functional/ivy/data_type/default_uint_dtype", "functional/ivy/data_type/dtype", "functional/ivy/data_type/dtype/dtype_container", "functional/ivy/data_type/dtype/dtype_functional", "functional/ivy/data_type/dtype/static_dtype_container", "functional/ivy/data_type/dtype_bits", "functional/ivy/data_type/finfo", "functional/ivy/data_type/finfo/finfo_array", "functional/ivy/data_type/finfo/finfo_container", "functional/ivy/data_type/finfo/finfo_functional", "functional/ivy/data_type/finfo/static_finfo_container", "functional/ivy/data_type/function_supported_dtypes", "functional/ivy/data_type/function_supported_dtypes/function_supported_dtypes_functional", "functional/ivy/data_type/function_supported_dtypes/static_function_supported_dtypes_container", "functional/ivy/data_type/function_unsupported_dtypes", "functional/ivy/data_type/function_unsupported_dtypes/function_unsupported_dtypes_functional", "functional/ivy/data_type/function_unsupported_dtypes/static_function_unsupported_dtypes_container", "functional/ivy/data_type/iinfo", "functional/ivy/data_type/iinfo/iinfo_array", "functional/ivy/data_type/iinfo/iinfo_container", "functional/ivy/data_type/iinfo/iinfo_functional", "functional/ivy/data_type/iinfo/static_iinfo_container", "functional/ivy/data_type/infer_default_dtype", "functional/ivy/data_type/invalid_dtype", "functional/ivy/data_type/is_bool_dtype", "functional/ivy/data_type/is_bool_dtype/is_bool_dtype_array", "functional/ivy/data_type/is_bool_dtype/is_bool_dtype_container", "functional/ivy/data_type/is_bool_dtype/is_bool_dtype_functional", "functional/ivy/data_type/is_bool_dtype/static_is_bool_dtype_container", "functional/ivy/data_type/is_float_dtype", "functional/ivy/data_type/is_float_dtype/is_float_dtype_array", "functional/ivy/data_type/is_float_dtype/is_float_dtype_container", "functional/ivy/data_type/is_float_dtype/is_float_dtype_functional", "functional/ivy/data_type/is_float_dtype/static_is_float_dtype_container", "functional/ivy/data_type/is_int_dtype", "functional/ivy/data_type/is_int_dtype/is_int_dtype_array", "functional/ivy/data_type/is_int_dtype/is_int_dtype_container", "functional/ivy/data_type/is_int_dtype/is_int_dtype_functional", "functional/ivy/data_type/is_int_dtype/static_is_int_dtype_container", "functional/ivy/data_type/is_uint_dtype", "functional/ivy/data_type/is_uint_dtype/is_uint_dtype_array", "functional/ivy/data_type/is_uint_dtype/is_uint_dtype_container", "functional/ivy/data_type/is_uint_dtype/is_uint_dtype_functional", "functional/ivy/data_type/is_uint_dtype/static_is_uint_dtype_container", "functional/ivy/data_type/promote_types", "functional/ivy/data_type/promote_types_of_inputs", "functional/ivy/data_type/result_type", "functional/ivy/data_type/result_type/result_type_array", "functional/ivy/data_type/result_type/result_type_container", "functional/ivy/data_type/result_type/result_type_functional", "functional/ivy/data_type/result_type/static_result_type_container", "functional/ivy/data_type/set_default_dtype", "functional/ivy/data_type/set_default_float_dtype", "functional/ivy/data_type/set_default_int_dtype", "functional/ivy/data_type/set_default_uint_dtype", "functional/ivy/data_type/type_promote_arrays", "functional/ivy/data_type/unset_default_dtype", "functional/ivy/data_type/unset_default_float_dtype", "functional/ivy/data_type/unset_default_int_dtype", "functional/ivy/data_type/unset_default_uint_dtype", "functional/ivy/data_type/valid_dtype", "functional/ivy/device", "functional/ivy/device/Profiler", "functional/ivy/device/as_ivy_dev", "functional/ivy/device/as_native_dev", "functional/ivy/device/clear_mem_on_dev", "functional/ivy/device/default_device", "functional/ivy/device/dev", "functional/ivy/device/dev/dev_array", "functional/ivy/device/dev/dev_container", "functional/ivy/device/dev/dev_functional", "functional/ivy/device/dev/static_dev_container", "functional/ivy/device/dev_util", "functional/ivy/device/function_supported_devices", "functional/ivy/device/function_unsupported_devices", "functional/ivy/device/get_all_ivy_arrays_on_dev", "functional/ivy/device/gpu_is_available", "functional/ivy/device/num_cpu_cores", "functional/ivy/device/num_gpus", "functional/ivy/device/num_ivy_arrays_on_dev", "functional/ivy/device/percent_used_mem_on_dev", "functional/ivy/device/print_all_ivy_arrays_on_dev", "functional/ivy/device/set_default_device", "functional/ivy/device/set_split_factor", "functional/ivy/device/split_factor", "functional/ivy/device/split_func_call", "functional/ivy/device/to_device", "functional/ivy/device/to_device/static_to_device_container", "functional/ivy/device/to_device/to_device_array", "functional/ivy/device/to_device/to_device_container", "functional/ivy/device/to_device/to_device_functional", "functional/ivy/device/total_mem_on_dev", "functional/ivy/device/tpu_is_available", "functional/ivy/device/unset_default_device", "functional/ivy/device/used_mem_on_dev", "functional/ivy/elementwise", "functional/ivy/elementwise/abs", "functional/ivy/elementwise/abs/abs_array", "functional/ivy/elementwise/abs/abs_container", "functional/ivy/elementwise/abs/abs_functional", "functional/ivy/elementwise/abs/static_abs_container", "functional/ivy/elementwise/acos", "functional/ivy/elementwise/acos/acos_array", "functional/ivy/elementwise/acos/acos_container", "functional/ivy/elementwise/acos/acos_functional", "functional/ivy/elementwise/acos/static_acos_container", "functional/ivy/elementwise/acosh", "functional/ivy/elementwise/acosh/acosh_array", "functional/ivy/elementwise/acosh/acosh_container", "functional/ivy/elementwise/acosh/acosh_functional", "functional/ivy/elementwise/acosh/static_acosh_container", "functional/ivy/elementwise/add", "functional/ivy/elementwise/add/add_array", "functional/ivy/elementwise/add/add_container", "functional/ivy/elementwise/add/add_functional", "functional/ivy/elementwise/add/static_add_container", "functional/ivy/elementwise/asin", "functional/ivy/elementwise/asin/asin_array", "functional/ivy/elementwise/asin/asin_container", "functional/ivy/elementwise/asin/asin_functional", "functional/ivy/elementwise/asin/static_asin_container", "functional/ivy/elementwise/asinh", "functional/ivy/elementwise/asinh/asinh_array", "functional/ivy/elementwise/asinh/asinh_container", "functional/ivy/elementwise/asinh/asinh_functional", "functional/ivy/elementwise/asinh/static_asinh_container", "functional/ivy/elementwise/atan", "functional/ivy/elementwise/atan/atan_array", "functional/ivy/elementwise/atan/atan_container", "functional/ivy/elementwise/atan/atan_functional", "functional/ivy/elementwise/atan/static_atan_container", "functional/ivy/elementwise/atan2", "functional/ivy/elementwise/atan2/atan2_array", "functional/ivy/elementwise/atan2/atan2_container", "functional/ivy/elementwise/atan2/atan2_functional", "functional/ivy/elementwise/atan2/static_atan2_container", "functional/ivy/elementwise/atanh", "functional/ivy/elementwise/atanh/atanh_array", "functional/ivy/elementwise/atanh/atanh_container", "functional/ivy/elementwise/atanh/atanh_functional", "functional/ivy/elementwise/atanh/static_atanh_container", "functional/ivy/elementwise/bitwise_and", "functional/ivy/elementwise/bitwise_and/bitwise_and_array", "functional/ivy/elementwise/bitwise_and/bitwise_and_container", "functional/ivy/elementwise/bitwise_and/bitwise_and_functional", "functional/ivy/elementwise/bitwise_and/static_bitwise_and_container", "functional/ivy/elementwise/bitwise_invert", "functional/ivy/elementwise/bitwise_invert/bitwise_invert_array", "functional/ivy/elementwise/bitwise_invert/bitwise_invert_container", "functional/ivy/elementwise/bitwise_invert/bitwise_invert_functional", "functional/ivy/elementwise/bitwise_invert/static_bitwise_invert_container", "functional/ivy/elementwise/bitwise_left_shift", "functional/ivy/elementwise/bitwise_left_shift/bitwise_left_shift_array", "functional/ivy/elementwise/bitwise_left_shift/bitwise_left_shift_container", "functional/ivy/elementwise/bitwise_left_shift/bitwise_left_shift_functional", "functional/ivy/elementwise/bitwise_left_shift/static_bitwise_left_shift_container", "functional/ivy/elementwise/bitwise_or", "functional/ivy/elementwise/bitwise_or/bitwise_or_array", "functional/ivy/elementwise/bitwise_or/bitwise_or_container", "functional/ivy/elementwise/bitwise_or/bitwise_or_functional", "functional/ivy/elementwise/bitwise_or/static_bitwise_or_container", "functional/ivy/elementwise/bitwise_right_shift", "functional/ivy/elementwise/bitwise_right_shift/bitwise_right_shift_array", "functional/ivy/elementwise/bitwise_right_shift/bitwise_right_shift_container", "functional/ivy/elementwise/bitwise_right_shift/bitwise_right_shift_functional", "functional/ivy/elementwise/bitwise_right_shift/static_bitwise_right_shift_container", "functional/ivy/elementwise/bitwise_xor", "functional/ivy/elementwise/bitwise_xor/bitwise_xor_array", "functional/ivy/elementwise/bitwise_xor/bitwise_xor_container", "functional/ivy/elementwise/bitwise_xor/bitwise_xor_functional", "functional/ivy/elementwise/bitwise_xor/static_bitwise_xor_container", "functional/ivy/elementwise/ceil", "functional/ivy/elementwise/ceil/ceil_array", "functional/ivy/elementwise/ceil/ceil_container", "functional/ivy/elementwise/ceil/ceil_functional", "functional/ivy/elementwise/ceil/static_ceil_container", "functional/ivy/elementwise/cos", "functional/ivy/elementwise/cos/cos_array", "functional/ivy/elementwise/cos/cos_container", "functional/ivy/elementwise/cos/cos_functional", "functional/ivy/elementwise/cos/static_cos_container", "functional/ivy/elementwise/cosh", "functional/ivy/elementwise/cosh/cosh_array", "functional/ivy/elementwise/cosh/cosh_container", "functional/ivy/elementwise/cosh/cosh_functional", "functional/ivy/elementwise/cosh/static_cosh_container", "functional/ivy/elementwise/deg2rad", "functional/ivy/elementwise/deg2rad/deg2rad_array", "functional/ivy/elementwise/deg2rad/deg2rad_container", "functional/ivy/elementwise/deg2rad/deg2rad_functional", "functional/ivy/elementwise/deg2rad/static_deg2rad_container", "functional/ivy/elementwise/divide", "functional/ivy/elementwise/divide/divide_array", "functional/ivy/elementwise/divide/divide_container", "functional/ivy/elementwise/divide/divide_functional", "functional/ivy/elementwise/divide/static_divide_container", "functional/ivy/elementwise/equal", "functional/ivy/elementwise/equal/equal_array", "functional/ivy/elementwise/equal/equal_container", "functional/ivy/elementwise/equal/equal_functional", "functional/ivy/elementwise/equal/static_equal_container", "functional/ivy/elementwise/erf", "functional/ivy/elementwise/erf/erf_array", "functional/ivy/elementwise/erf/erf_container", "functional/ivy/elementwise/erf/erf_functional", "functional/ivy/elementwise/erf/static_erf_container", "functional/ivy/elementwise/exp", "functional/ivy/elementwise/exp/exp_array", "functional/ivy/elementwise/exp/exp_container", "functional/ivy/elementwise/exp/exp_functional", "functional/ivy/elementwise/exp/static_exp_container", "functional/ivy/elementwise/expm1", "functional/ivy/elementwise/expm1/expm1_array", "functional/ivy/elementwise/expm1/expm1_container", "functional/ivy/elementwise/expm1/expm1_functional", "functional/ivy/elementwise/expm1/static_expm1_container", "functional/ivy/elementwise/floor", "functional/ivy/elementwise/floor/floor_array", "functional/ivy/elementwise/floor/floor_container", "functional/ivy/elementwise/floor/floor_functional", "functional/ivy/elementwise/floor/static_floor_container", "functional/ivy/elementwise/floor_divide", "functional/ivy/elementwise/floor_divide/floor_divide_array", "functional/ivy/elementwise/floor_divide/floor_divide_container", "functional/ivy/elementwise/floor_divide/floor_divide_functional", "functional/ivy/elementwise/floor_divide/static_floor_divide_container", "functional/ivy/elementwise/greater", "functional/ivy/elementwise/greater/greater_array", "functional/ivy/elementwise/greater/greater_container", "functional/ivy/elementwise/greater/greater_functional", "functional/ivy/elementwise/greater/static_greater_container", "functional/ivy/elementwise/greater_equal", "functional/ivy/elementwise/greater_equal/greater_equal_array", "functional/ivy/elementwise/greater_equal/greater_equal_container", "functional/ivy/elementwise/greater_equal/greater_equal_functional", "functional/ivy/elementwise/greater_equal/static_greater_equal_container", "functional/ivy/elementwise/isfinite", "functional/ivy/elementwise/isfinite/isfinite_array", "functional/ivy/elementwise/isfinite/isfinite_container", "functional/ivy/elementwise/isfinite/isfinite_functional", "functional/ivy/elementwise/isfinite/static_isfinite_container", "functional/ivy/elementwise/isinf", "functional/ivy/elementwise/isinf/isinf_array", "functional/ivy/elementwise/isinf/isinf_container", "functional/ivy/elementwise/isinf/isinf_functional", "functional/ivy/elementwise/isinf/static_isinf_container", "functional/ivy/elementwise/isnan", "functional/ivy/elementwise/isnan/isnan_array", "functional/ivy/elementwise/isnan/isnan_container", "functional/ivy/elementwise/isnan/isnan_functional", "functional/ivy/elementwise/isnan/static_isnan_container", "functional/ivy/elementwise/isreal", "functional/ivy/elementwise/isreal/isreal_array", "functional/ivy/elementwise/isreal/isreal_container", "functional/ivy/elementwise/isreal/isreal_functional", "functional/ivy/elementwise/isreal/static_isreal_container", "functional/ivy/elementwise/less", "functional/ivy/elementwise/less/less_array", "functional/ivy/elementwise/less/less_container", "functional/ivy/elementwise/less/less_functional", "functional/ivy/elementwise/less/static_less_container", "functional/ivy/elementwise/less_equal", "functional/ivy/elementwise/less_equal/less_equal_array", "functional/ivy/elementwise/less_equal/less_equal_container", "functional/ivy/elementwise/less_equal/less_equal_functional", "functional/ivy/elementwise/less_equal/static_less_equal_container", "functional/ivy/elementwise/log", "functional/ivy/elementwise/log/log_array", "functional/ivy/elementwise/log/log_container", "functional/ivy/elementwise/log/log_functional", "functional/ivy/elementwise/log/static_log_container", "functional/ivy/elementwise/log10", "functional/ivy/elementwise/log10/log10_array", "functional/ivy/elementwise/log10/log10_container", "functional/ivy/elementwise/log10/log10_functional", "functional/ivy/elementwise/log10/static_log10_container", "functional/ivy/elementwise/log1p", "functional/ivy/elementwise/log1p/log1p_array", "functional/ivy/elementwise/log1p/log1p_container", "functional/ivy/elementwise/log1p/log1p_functional", "functional/ivy/elementwise/log1p/static_log1p_container", "functional/ivy/elementwise/log2", "functional/ivy/elementwise/log2/log2_array", "functional/ivy/elementwise/log2/log2_container", "functional/ivy/elementwise/log2/log2_functional", "functional/ivy/elementwise/log2/static_log2_container", "functional/ivy/elementwise/logaddexp", "functional/ivy/elementwise/logaddexp/logaddexp_array", "functional/ivy/elementwise/logaddexp/logaddexp_container", "functional/ivy/elementwise/logaddexp/logaddexp_functional", "functional/ivy/elementwise/logaddexp/static_logaddexp_container", "functional/ivy/elementwise/logical_and", "functional/ivy/elementwise/logical_and/logical_and_array", "functional/ivy/elementwise/logical_and/logical_and_container", "functional/ivy/elementwise/logical_and/logical_and_functional", "functional/ivy/elementwise/logical_and/static_logical_and_container", "functional/ivy/elementwise/logical_not", "functional/ivy/elementwise/logical_not/logical_not_array", "functional/ivy/elementwise/logical_not/logical_not_container", "functional/ivy/elementwise/logical_not/logical_not_functional", "functional/ivy/elementwise/logical_not/static_logical_not_container", "functional/ivy/elementwise/logical_or", "functional/ivy/elementwise/logical_or/logical_or_array", "functional/ivy/elementwise/logical_or/logical_or_container", "functional/ivy/elementwise/logical_or/logical_or_functional", "functional/ivy/elementwise/logical_or/static_logical_or_container", "functional/ivy/elementwise/logical_xor", "functional/ivy/elementwise/logical_xor/logical_xor_array", "functional/ivy/elementwise/logical_xor/logical_xor_container", "functional/ivy/elementwise/logical_xor/logical_xor_functional", "functional/ivy/elementwise/logical_xor/static_logical_xor_container", "functional/ivy/elementwise/maximum", "functional/ivy/elementwise/maximum/maximum_array", "functional/ivy/elementwise/maximum/maximum_container", "functional/ivy/elementwise/maximum/maximum_functional", "functional/ivy/elementwise/maximum/static_maximum_container", "functional/ivy/elementwise/minimum", "functional/ivy/elementwise/minimum/minimum_array", "functional/ivy/elementwise/minimum/minimum_container", "functional/ivy/elementwise/minimum/minimum_functional", "functional/ivy/elementwise/minimum/static_minimum_container", "functional/ivy/elementwise/multiply", "functional/ivy/elementwise/multiply/multiply_array", "functional/ivy/elementwise/multiply/multiply_container", "functional/ivy/elementwise/multiply/multiply_functional", "functional/ivy/elementwise/multiply/static_multiply_container", "functional/ivy/elementwise/negative", "functional/ivy/elementwise/negative/negative_array", "functional/ivy/elementwise/negative/negative_container", "functional/ivy/elementwise/negative/negative_functional", "functional/ivy/elementwise/negative/static_negative_container", "functional/ivy/elementwise/not_equal", "functional/ivy/elementwise/not_equal/not_equal_array", "functional/ivy/elementwise/not_equal/not_equal_container", "functional/ivy/elementwise/not_equal/not_equal_functional", "functional/ivy/elementwise/not_equal/static_not_equal_container", "functional/ivy/elementwise/positive", "functional/ivy/elementwise/positive/positive_array", "functional/ivy/elementwise/positive/positive_container", "functional/ivy/elementwise/positive/positive_functional", "functional/ivy/elementwise/positive/static_positive_container", "functional/ivy/elementwise/pow", "functional/ivy/elementwise/pow/pow_array", "functional/ivy/elementwise/pow/pow_container", "functional/ivy/elementwise/pow/pow_functional", "functional/ivy/elementwise/pow/static_pow_container", "functional/ivy/elementwise/rad2deg", "functional/ivy/elementwise/rad2deg/rad2deg_array", "functional/ivy/elementwise/rad2deg/rad2deg_container", "functional/ivy/elementwise/rad2deg/rad2deg_functional", "functional/ivy/elementwise/rad2deg/static_rad2deg_container", "functional/ivy/elementwise/reciprocal", "functional/ivy/elementwise/reciprocal/reciprocal_array", "functional/ivy/elementwise/reciprocal/reciprocal_container", "functional/ivy/elementwise/reciprocal/reciprocal_functional", "functional/ivy/elementwise/reciprocal/static_reciprocal_container", "functional/ivy/elementwise/remainder", "functional/ivy/elementwise/remainder/remainder_array", "functional/ivy/elementwise/remainder/remainder_container", "functional/ivy/elementwise/remainder/remainder_functional", "functional/ivy/elementwise/remainder/static_remainder_container", "functional/ivy/elementwise/round", "functional/ivy/elementwise/round/round_array", "functional/ivy/elementwise/round/round_container", "functional/ivy/elementwise/round/round_functional", "functional/ivy/elementwise/round/static_round_container", "functional/ivy/elementwise/sign", "functional/ivy/elementwise/sign/sign_array", "functional/ivy/elementwise/sign/sign_container", "functional/ivy/elementwise/sign/sign_functional", "functional/ivy/elementwise/sign/static_sign_container", "functional/ivy/elementwise/sin", "functional/ivy/elementwise/sin/sin_array", "functional/ivy/elementwise/sin/sin_container", "functional/ivy/elementwise/sin/sin_functional", "functional/ivy/elementwise/sin/static_sin_container", "functional/ivy/elementwise/sinh", "functional/ivy/elementwise/sinh/sinh_array", "functional/ivy/elementwise/sinh/sinh_container", "functional/ivy/elementwise/sinh/sinh_functional", "functional/ivy/elementwise/sinh/static_sinh_container", "functional/ivy/elementwise/sqrt", "functional/ivy/elementwise/sqrt/sqrt_array", "functional/ivy/elementwise/sqrt/sqrt_container", "functional/ivy/elementwise/sqrt/sqrt_functional", "functional/ivy/elementwise/sqrt/static_sqrt_container", "functional/ivy/elementwise/square", "functional/ivy/elementwise/square/square_array", "functional/ivy/elementwise/square/square_container", "functional/ivy/elementwise/square/square_functional", "functional/ivy/elementwise/square/static_square_container", "functional/ivy/elementwise/subtract", "functional/ivy/elementwise/subtract/static_subtract_container", "functional/ivy/elementwise/subtract/subtract_array", "functional/ivy/elementwise/subtract/subtract_container", "functional/ivy/elementwise/subtract/subtract_functional", "functional/ivy/elementwise/tan", "functional/ivy/elementwise/tan/static_tan_container", "functional/ivy/elementwise/tan/tan_array", "functional/ivy/elementwise/tan/tan_container", "functional/ivy/elementwise/tan/tan_functional", "functional/ivy/elementwise/tanh", "functional/ivy/elementwise/tanh/static_tanh_container", "functional/ivy/elementwise/tanh/tanh_array", "functional/ivy/elementwise/tanh/tanh_container", "functional/ivy/elementwise/tanh/tanh_functional", "functional/ivy/elementwise/trunc", "functional/ivy/elementwise/trunc/static_trunc_container", "functional/ivy/elementwise/trunc/trunc_array", "functional/ivy/elementwise/trunc/trunc_container", "functional/ivy/elementwise/trunc/trunc_functional", "functional/ivy/elementwise/trunc_divide", "functional/ivy/elementwise/trunc_divide/static_trunc_divide_container", "functional/ivy/elementwise/trunc_divide/trunc_divide_array", "functional/ivy/elementwise/trunc_divide/trunc_divide_container", "functional/ivy/elementwise/trunc_divide/trunc_divide_functional", "functional/ivy/extensions", "functional/ivy/extensions/activations", "functional/ivy/extensions/compilation", "functional/ivy/extensions/constants", "functional/ivy/extensions/creation", "functional/ivy/extensions/data_type", "functional/ivy/extensions/device", "functional/ivy/extensions/elementwise", "functional/ivy/extensions/flatten", "functional/ivy/extensions/flatten/flatten_array", "functional/ivy/extensions/flatten/flatten_container", "functional/ivy/extensions/flatten/flatten_functional", "functional/ivy/extensions/flatten/static_flatten_container", "functional/ivy/extensions/flipud", "functional/ivy/extensions/flipud/flipud_array", "functional/ivy/extensions/flipud/flipud_container", "functional/ivy/extensions/flipud/flipud_functional", "functional/ivy/extensions/flipud/static_flipud_container", "functional/ivy/extensions/fmax", "functional/ivy/extensions/fmax/fmax_array", "functional/ivy/extensions/fmax/fmax_container", "functional/ivy/extensions/fmax/fmax_functional", "functional/ivy/extensions/fmax/static_fmax_container", "functional/ivy/extensions/fmod", "functional/ivy/extensions/fmod/fmod_array", "functional/ivy/extensions/fmod/fmod_container", "functional/ivy/extensions/fmod/fmod_functional", "functional/ivy/extensions/fmod/static_fmod_container", "functional/ivy/extensions/general", "functional/ivy/extensions/gradients", "functional/ivy/extensions/hann_window", "functional/ivy/extensions/hann_window/hann_window_container", "functional/ivy/extensions/hann_window/hann_window_functional", "functional/ivy/extensions/hann_window/static_hann_window_container", "functional/ivy/extensions/heaviside", "functional/ivy/extensions/heaviside/heaviside_array", "functional/ivy/extensions/heaviside/heaviside_container", "functional/ivy/extensions/heaviside/heaviside_functional", "functional/ivy/extensions/heaviside/static_heaviside_container", "functional/ivy/extensions/is_ivy_sparse_array", "functional/ivy/extensions/is_native_sparse_array", "functional/ivy/extensions/kaiser_window", "functional/ivy/extensions/kaiser_window/kaiser_window_container", "functional/ivy/extensions/kaiser_window/kaiser_window_functional", "functional/ivy/extensions/kaiser_window/static_kaiser_window_container", "functional/ivy/extensions/layers", "functional/ivy/extensions/lcm", "functional/ivy/extensions/lcm/lcm_array", "functional/ivy/extensions/lcm/lcm_container", "functional/ivy/extensions/lcm/lcm_functional", "functional/ivy/extensions/lcm/static_lcm_container", "functional/ivy/extensions/linear_algebra", "functional/ivy/extensions/losses", "functional/ivy/extensions/manipulation", "functional/ivy/extensions/max_pool2d", "functional/ivy/extensions/max_pool2d/max_pool2d_array", "functional/ivy/extensions/max_pool2d/max_pool2d_container", "functional/ivy/extensions/max_pool2d/max_pool2d_functional", "functional/ivy/extensions/max_pool2d/static_max_pool2d_container", "functional/ivy/extensions/median", "functional/ivy/extensions/median/median_array", "functional/ivy/extensions/median/median_container", "functional/ivy/extensions/median/median_functional", "functional/ivy/extensions/median/static_median_container", "functional/ivy/extensions/meta", "functional/ivy/extensions/moveaxis", "functional/ivy/extensions/moveaxis/moveaxis_array", "functional/ivy/extensions/moveaxis/moveaxis_container", "functional/ivy/extensions/moveaxis/moveaxis_functional", "functional/ivy/extensions/moveaxis/static_moveaxis_container", "functional/ivy/extensions/native_sparse_array", "functional/ivy/extensions/native_sparse_array_to_indices_values_and_shape", "functional/ivy/extensions/ndenumerate", "functional/ivy/extensions/ndindex", "functional/ivy/extensions/nest", "functional/ivy/extensions/norms", "functional/ivy/extensions/pad", "functional/ivy/extensions/pad/pad_array", "functional/ivy/extensions/pad/pad_container", "functional/ivy/extensions/pad/pad_functional", "functional/ivy/extensions/pad/static_pad_container", "functional/ivy/extensions/random", "functional/ivy/extensions/searching", "functional/ivy/extensions/set", "functional/ivy/extensions/sinc", "functional/ivy/extensions/sinc/sinc_array", "functional/ivy/extensions/sinc/sinc_container", "functional/ivy/extensions/sinc/sinc_functional", "functional/ivy/extensions/sinc/static_sinc_container", "functional/ivy/extensions/sorting", "functional/ivy/extensions/statistical", "functional/ivy/extensions/utility", "functional/ivy/extensions/vorbis_window", "functional/ivy/general", "functional/ivy/general/all_equal", "functional/ivy/general/all_equal/all_equal_array", "functional/ivy/general/all_equal/all_equal_container", "functional/ivy/general/all_equal/all_equal_functional", "functional/ivy/general/all_equal/static_all_equal_container", "functional/ivy/general/arg_info", "functional/ivy/general/arg_names", "functional/ivy/general/array_equal", "functional/ivy/general/array_equal/array_equal_array", "functional/ivy/general/array_equal/array_equal_functional", "functional/ivy/general/assert_supports_inplace", "functional/ivy/general/assert_supports_inplace/assert_supports_inplace_array", "functional/ivy/general/assert_supports_inplace/assert_supports_inplace_container", "functional/ivy/general/assert_supports_inplace/assert_supports_inplace_functional", "functional/ivy/general/assert_supports_inplace/static_assert_supports_inplace_container", "functional/ivy/general/cache_fn", "functional/ivy/general/clip_matrix_norm", "functional/ivy/general/clip_matrix_norm/clip_matrix_norm_array", "functional/ivy/general/clip_matrix_norm/clip_matrix_norm_container", "functional/ivy/general/clip_matrix_norm/clip_matrix_norm_functional", "functional/ivy/general/clip_matrix_norm/static_clip_matrix_norm_container", "functional/ivy/general/clip_vector_norm", "functional/ivy/general/clip_vector_norm/clip_vector_norm_array", "functional/ivy/general/clip_vector_norm/clip_vector_norm_container", "functional/ivy/general/clip_vector_norm/clip_vector_norm_functional", "functional/ivy/general/clip_vector_norm/static_clip_vector_norm_container", "functional/ivy/general/container_types", "functional/ivy/general/current_backend_str", "functional/ivy/general/default", "functional/ivy/general/default/default_array", "functional/ivy/general/default/default_functional", "functional/ivy/general/einops_rearrange", "functional/ivy/general/einops_rearrange/einops_rearrange_array", "functional/ivy/general/einops_rearrange/einops_rearrange_container", "functional/ivy/general/einops_rearrange/einops_rearrange_functional", "functional/ivy/general/einops_rearrange/static_einops_rearrange_container", "functional/ivy/general/einops_reduce", "functional/ivy/general/einops_reduce/einops_reduce_array", "functional/ivy/general/einops_reduce/einops_reduce_container", "functional/ivy/general/einops_reduce/einops_reduce_functional", "functional/ivy/general/einops_reduce/static_einops_reduce_container", "functional/ivy/general/einops_repeat", "functional/ivy/general/einops_repeat/einops_repeat_array", "functional/ivy/general/einops_repeat/einops_repeat_container", "functional/ivy/general/einops_repeat/einops_repeat_functional", "functional/ivy/general/einops_repeat/static_einops_repeat_container", "functional/ivy/general/exists", "functional/ivy/general/exists/exists_array", "functional/ivy/general/exists/exists_functional", "functional/ivy/general/fourier_encode", "functional/ivy/general/fourier_encode/fourier_encode_array", "functional/ivy/general/fourier_encode/fourier_encode_container", "functional/ivy/general/fourier_encode/fourier_encode_functional", "functional/ivy/general/fourier_encode/static_fourier_encode_container", "functional/ivy/general/function_supported_devices_and_dtypes", "functional/ivy/general/function_unsupported_devices_and_dtypes", "functional/ivy/general/gather", "functional/ivy/general/gather/gather_array", "functional/ivy/general/gather/gather_container", "functional/ivy/general/gather/gather_functional", "functional/ivy/general/gather/static_gather_container", "functional/ivy/general/gather_nd", "functional/ivy/general/gather_nd/gather_nd_array", "functional/ivy/general/gather_nd/gather_nd_container", "functional/ivy/general/gather_nd/gather_nd_functional", "functional/ivy/general/gather_nd/static_gather_nd_container", "functional/ivy/general/get_all_arrays_in_memory", "functional/ivy/general/get_array_mode", "functional/ivy/general/get_exception_trace_mode", "functional/ivy/general/get_item", "functional/ivy/general/get_min_base", "functional/ivy/general/get_min_denominator", "functional/ivy/general/get_nestable_mode", "functional/ivy/general/get_num_dims", "functional/ivy/general/get_num_dims/get_num_dims_array", "functional/ivy/general/get_num_dims/get_num_dims_container", "functional/ivy/general/get_num_dims/get_num_dims_functional", "functional/ivy/general/get_num_dims/static_get_num_dims_container", "functional/ivy/general/get_queue_timeout", "functional/ivy/general/get_referrers_recursive", "functional/ivy/general/get_tmp_dir", "functional/ivy/general/has_nans", "functional/ivy/general/has_nans/has_nans_array", "functional/ivy/general/has_nans/has_nans_container", "functional/ivy/general/has_nans/has_nans_functional", "functional/ivy/general/has_nans/static_has_nans_container", "functional/ivy/general/inplace_arrays_supported", "functional/ivy/general/inplace_decrement", "functional/ivy/general/inplace_decrement/inplace_decrement_array", "functional/ivy/general/inplace_decrement/inplace_decrement_container", "functional/ivy/general/inplace_decrement/inplace_decrement_functional", "functional/ivy/general/inplace_decrement/static_inplace_decrement_container", "functional/ivy/general/inplace_increment", "functional/ivy/general/inplace_increment/inplace_increment_array", "functional/ivy/general/inplace_increment/inplace_increment_container", "functional/ivy/general/inplace_increment/inplace_increment_functional", "functional/ivy/general/inplace_increment/static_inplace_increment_container", "functional/ivy/general/inplace_update", "functional/ivy/general/inplace_update/inplace_update_array", "functional/ivy/general/inplace_update/inplace_update_container", "functional/ivy/general/inplace_update/inplace_update_functional", "functional/ivy/general/inplace_update/static_inplace_update_container", "functional/ivy/general/inplace_variables_supported", "functional/ivy/general/is_array", "functional/ivy/general/is_array/is_array_array", "functional/ivy/general/is_array/is_array_container", "functional/ivy/general/is_array/is_array_functional", "functional/ivy/general/is_array/static_is_array_container", "functional/ivy/general/is_ivy_array", "functional/ivy/general/is_ivy_array/is_ivy_array_array", "functional/ivy/general/is_ivy_array/is_ivy_array_container", "functional/ivy/general/is_ivy_array/is_ivy_array_functional", "functional/ivy/general/is_ivy_array/static_is_ivy_array_container", "functional/ivy/general/is_ivy_container", "functional/ivy/general/is_ivy_container/is_ivy_container_array", "functional/ivy/general/is_ivy_container/is_ivy_container_container", "functional/ivy/general/is_ivy_container/is_ivy_container_functional", "functional/ivy/general/is_ivy_container/static_is_ivy_container_container", "functional/ivy/general/is_native_array", "functional/ivy/general/is_native_array/is_native_array_array", "functional/ivy/general/is_native_array/is_native_array_container", "functional/ivy/general/is_native_array/is_native_array_functional", "functional/ivy/general/is_native_array/static_is_native_array_container", "functional/ivy/general/isscalar", "functional/ivy/general/match_kwargs", "functional/ivy/general/multiprocessing", "functional/ivy/general/num_arrays_in_memory", "functional/ivy/general/print_all_arrays_in_memory", "functional/ivy/general/scatter_flat", "functional/ivy/general/scatter_flat/scatter_flat_array", "functional/ivy/general/scatter_flat/scatter_flat_container", "functional/ivy/general/scatter_flat/scatter_flat_functional", "functional/ivy/general/scatter_flat/static_scatter_flat_container", "functional/ivy/general/scatter_nd", "functional/ivy/general/scatter_nd/scatter_nd_array", "functional/ivy/general/scatter_nd/scatter_nd_container", "functional/ivy/general/scatter_nd/scatter_nd_functional", "functional/ivy/general/scatter_nd/static_scatter_nd_container", "functional/ivy/general/set_array_mode", "functional/ivy/general/set_exception_trace_mode", "functional/ivy/general/set_min_base", "functional/ivy/general/set_min_denominator", "functional/ivy/general/set_nestable_mode", "functional/ivy/general/set_queue_timeout", "functional/ivy/general/set_shape_array_mode", "functional/ivy/general/set_tmp_dir", "functional/ivy/general/shape", "functional/ivy/general/shape_array_mode", "functional/ivy/general/stable_divide", "functional/ivy/general/stable_divide/stable_divide_array", "functional/ivy/general/stable_divide/stable_divide_container", "functional/ivy/general/stable_divide/stable_divide_functional", "functional/ivy/general/stable_divide/static_stable_divide_container", "functional/ivy/general/stable_pow", "functional/ivy/general/stable_pow/stable_pow_array", "functional/ivy/general/stable_pow/stable_pow_container", "functional/ivy/general/stable_pow/stable_pow_functional", "functional/ivy/general/stable_pow/static_stable_pow_container", "functional/ivy/general/supports_inplace_updates", "functional/ivy/general/supports_inplace_updates/static_supports_inplace_updates_container", "functional/ivy/general/supports_inplace_updates/supports_inplace_updates_array", "functional/ivy/general/supports_inplace_updates/supports_inplace_updates_container", "functional/ivy/general/supports_inplace_updates/supports_inplace_updates_functional", "functional/ivy/general/to_ivy_shape", "functional/ivy/general/to_list", "functional/ivy/general/to_list/static_to_list_container", "functional/ivy/general/to_list/to_list_array", "functional/ivy/general/to_list/to_list_container", "functional/ivy/general/to_list/to_list_functional", "functional/ivy/general/to_native_shape", "functional/ivy/general/to_numpy", "functional/ivy/general/to_numpy/static_to_numpy_container", "functional/ivy/general/to_numpy/to_numpy_array", "functional/ivy/general/to_numpy/to_numpy_container", "functional/ivy/general/to_numpy/to_numpy_functional", "functional/ivy/general/to_scalar", "functional/ivy/general/to_scalar/static_to_scalar_container", "functional/ivy/general/to_scalar/to_scalar_array", "functional/ivy/general/to_scalar/to_scalar_container", "functional/ivy/general/to_scalar/to_scalar_functional", "functional/ivy/general/try_else_none", "functional/ivy/general/unset_array_mode", "functional/ivy/general/unset_exception_trace_mode", "functional/ivy/general/unset_nestable_mode", "functional/ivy/general/unset_queue_timeout", "functional/ivy/general/unset_shape_array_mode", "functional/ivy/general/value_is_nan", "functional/ivy/general/value_is_nan/static_value_is_nan_container", "functional/ivy/general/value_is_nan/value_is_nan_array", "functional/ivy/general/value_is_nan/value_is_nan_container", "functional/ivy/general/value_is_nan/value_is_nan_functional", "functional/ivy/general/vmap", "functional/ivy/gradients", "functional/ivy/gradients/adam_step", "functional/ivy/gradients/adam_step/adam_step_array", "functional/ivy/gradients/adam_step/adam_step_container", "functional/ivy/gradients/adam_step/adam_step_functional", "functional/ivy/gradients/adam_update", "functional/ivy/gradients/adam_update/adam_update_array", "functional/ivy/gradients/adam_update/adam_update_container", "functional/ivy/gradients/adam_update/adam_update_functional", "functional/ivy/gradients/execute_with_gradients", "functional/ivy/gradients/grad", "functional/ivy/gradients/gradient_descent_update", "functional/ivy/gradients/gradient_descent_update/gradient_descent_update_array", "functional/ivy/gradients/gradient_descent_update/gradient_descent_update_container", "functional/ivy/gradients/gradient_descent_update/gradient_descent_update_functional", "functional/ivy/gradients/is_variable", "functional/ivy/gradients/is_variable/is_variable_container", "functional/ivy/gradients/is_variable/is_variable_functional", "functional/ivy/gradients/is_variable/static_is_variable_container", "functional/ivy/gradients/jac", "functional/ivy/gradients/lamb_update", "functional/ivy/gradients/lamb_update/lamb_update_array", "functional/ivy/gradients/lamb_update/lamb_update_container", "functional/ivy/gradients/lamb_update/lamb_update_functional", "functional/ivy/gradients/lars_update", "functional/ivy/gradients/lars_update/lars_update_array", "functional/ivy/gradients/lars_update/lars_update_container", "functional/ivy/gradients/lars_update/lars_update_functional", "functional/ivy/gradients/optimizer_update", "functional/ivy/gradients/optimizer_update/optimizer_update_array", "functional/ivy/gradients/optimizer_update/optimizer_update_container", "functional/ivy/gradients/optimizer_update/optimizer_update_functional", "functional/ivy/gradients/set_with_grads", "functional/ivy/gradients/stop_gradient", "functional/ivy/gradients/stop_gradient/static_stop_gradient_container", "functional/ivy/gradients/stop_gradient/stop_gradient_array", "functional/ivy/gradients/stop_gradient/stop_gradient_container", "functional/ivy/gradients/stop_gradient/stop_gradient_functional", "functional/ivy/gradients/unset_with_grads", "functional/ivy/gradients/value_and_grad", "functional/ivy/gradients/variable", "functional/ivy/gradients/variable/static_variable_container", "functional/ivy/gradients/variable/variable_array", "functional/ivy/gradients/variable/variable_container", "functional/ivy/gradients/variable/variable_functional", "functional/ivy/gradients/variable_data", "functional/ivy/gradients/variable_data/static_variable_data_container", "functional/ivy/gradients/variable_data/variable_data_array", "functional/ivy/gradients/variable_data/variable_data_container", "functional/ivy/gradients/variable_data/variable_data_functional", "functional/ivy/gradients/with_grads", "functional/ivy/layers", "functional/ivy/layers/conv", "functional/ivy/layers/conv1d", "functional/ivy/layers/conv1d/conv1d_array", "functional/ivy/layers/conv1d/conv1d_container", "functional/ivy/layers/conv1d/conv1d_functional", "functional/ivy/layers/conv1d/static_conv1d_container", "functional/ivy/layers/conv1d_transpose", "functional/ivy/layers/conv1d_transpose/conv1d_transpose_array", "functional/ivy/layers/conv1d_transpose/conv1d_transpose_container", "functional/ivy/layers/conv1d_transpose/conv1d_transpose_functional", "functional/ivy/layers/conv1d_transpose/static_conv1d_transpose_container", "functional/ivy/layers/conv2d", "functional/ivy/layers/conv2d/conv2d_array", "functional/ivy/layers/conv2d/conv2d_container", "functional/ivy/layers/conv2d/conv2d_functional", "functional/ivy/layers/conv2d/static_conv2d_container", "functional/ivy/layers/conv2d_transpose", "functional/ivy/layers/conv2d_transpose/conv2d_transpose_container", "functional/ivy/layers/conv2d_transpose/conv2d_transpose_functional", "functional/ivy/layers/conv2d_transpose/static_conv2d_transpose_container", "functional/ivy/layers/conv3d", "functional/ivy/layers/conv3d/conv3d_array", "functional/ivy/layers/conv3d/conv3d_container", "functional/ivy/layers/conv3d/conv3d_functional", "functional/ivy/layers/conv3d/static_conv3d_container", "functional/ivy/layers/conv3d_transpose", "functional/ivy/layers/conv3d_transpose/conv3d_transpose_array", "functional/ivy/layers/conv3d_transpose/conv3d_transpose_container", "functional/ivy/layers/conv3d_transpose/conv3d_transpose_functional", "functional/ivy/layers/conv3d_transpose/static_conv3d_transpose_container", "functional/ivy/layers/conv_general_dilated", "functional/ivy/layers/conv_general_transpose", "functional/ivy/layers/deconv_length", "functional/ivy/layers/depthwise_conv2d", "functional/ivy/layers/depthwise_conv2d/depthwise_conv2d_array", "functional/ivy/layers/depthwise_conv2d/depthwise_conv2d_container", "functional/ivy/layers/depthwise_conv2d/depthwise_conv2d_functional", "functional/ivy/layers/depthwise_conv2d/static_depthwise_conv2d_container", "functional/ivy/layers/dropout", "functional/ivy/layers/dropout/dropout_array", "functional/ivy/layers/dropout/dropout_container", "functional/ivy/layers/dropout/dropout_functional", "functional/ivy/layers/dropout/static_dropout_container", "functional/ivy/layers/get_x_data_format", "functional/ivy/layers/handle_padding", "functional/ivy/layers/linear", "functional/ivy/layers/linear/linear_array", "functional/ivy/layers/linear/linear_container", "functional/ivy/layers/linear/linear_functional", "functional/ivy/layers/linear/static_linear_container", "functional/ivy/layers/lstm_update", "functional/ivy/layers/lstm_update/lstm_update_array", "functional/ivy/layers/lstm_update/lstm_update_container", "functional/ivy/layers/lstm_update/lstm_update_functional", "functional/ivy/layers/lstm_update/static_lstm_update_container", "functional/ivy/layers/multi_head_attention", "functional/ivy/layers/multi_head_attention/multi_head_attention_array", "functional/ivy/layers/multi_head_attention/multi_head_attention_container", "functional/ivy/layers/multi_head_attention/multi_head_attention_functional", "functional/ivy/layers/multi_head_attention/static_multi_head_attention_container", "functional/ivy/layers/scaled_dot_product_attention", "functional/ivy/layers/scaled_dot_product_attention/scaled_dot_product_attention_array", "functional/ivy/layers/scaled_dot_product_attention/scaled_dot_product_attention_container", "functional/ivy/layers/scaled_dot_product_attention/scaled_dot_product_attention_functional", "functional/ivy/layers/scaled_dot_product_attention/static_scaled_dot_product_attention_container", "functional/ivy/linear_algebra", "functional/ivy/linear_algebra/cholesky", "functional/ivy/linear_algebra/cholesky/cholesky_array", "functional/ivy/linear_algebra/cholesky/cholesky_container", "functional/ivy/linear_algebra/cholesky/cholesky_functional", "functional/ivy/linear_algebra/cholesky/static_cholesky_container", "functional/ivy/linear_algebra/cross", "functional/ivy/linear_algebra/cross/cross_array", "functional/ivy/linear_algebra/cross/cross_container", "functional/ivy/linear_algebra/cross/cross_functional", "functional/ivy/linear_algebra/cross/static_cross_container", "functional/ivy/linear_algebra/det", "functional/ivy/linear_algebra/det/det_array", "functional/ivy/linear_algebra/det/det_container", "functional/ivy/linear_algebra/det/det_functional", "functional/ivy/linear_algebra/det/static_det_container", "functional/ivy/linear_algebra/diag", "functional/ivy/linear_algebra/diagonal", "functional/ivy/linear_algebra/diagonal/diagonal_array", "functional/ivy/linear_algebra/diagonal/diagonal_container", "functional/ivy/linear_algebra/diagonal/diagonal_functional", "functional/ivy/linear_algebra/diagonal/static_diagonal_container", "functional/ivy/linear_algebra/eigh", "functional/ivy/linear_algebra/eigh/eigh_array", "functional/ivy/linear_algebra/eigh/eigh_container", "functional/ivy/linear_algebra/eigh/eigh_functional", "functional/ivy/linear_algebra/eigvalsh", "functional/ivy/linear_algebra/eigvalsh/eigvalsh_array", "functional/ivy/linear_algebra/eigvalsh/eigvalsh_functional", "functional/ivy/linear_algebra/inner", "functional/ivy/linear_algebra/inner/inner_array", "functional/ivy/linear_algebra/inner/inner_container", "functional/ivy/linear_algebra/inner/inner_functional", "functional/ivy/linear_algebra/inner/static_inner_container", "functional/ivy/linear_algebra/inv", "functional/ivy/linear_algebra/inv/inv_array", "functional/ivy/linear_algebra/inv/inv_container", "functional/ivy/linear_algebra/inv/inv_functional", "functional/ivy/linear_algebra/inv/static_inv_container", "functional/ivy/linear_algebra/matmul", "functional/ivy/linear_algebra/matmul/matmul_array", "functional/ivy/linear_algebra/matmul/matmul_container", "functional/ivy/linear_algebra/matmul/matmul_functional", "functional/ivy/linear_algebra/matmul/static_matmul_container", "functional/ivy/linear_algebra/matrix_norm", "functional/ivy/linear_algebra/matrix_norm/matrix_norm_array", "functional/ivy/linear_algebra/matrix_norm/matrix_norm_container", "functional/ivy/linear_algebra/matrix_norm/matrix_norm_functional", "functional/ivy/linear_algebra/matrix_norm/static_matrix_norm_container", "functional/ivy/linear_algebra/matrix_power", "functional/ivy/linear_algebra/matrix_power/matrix_power_container", "functional/ivy/linear_algebra/matrix_power/matrix_power_functional", "functional/ivy/linear_algebra/matrix_power/static_matrix_power_container", "functional/ivy/linear_algebra/matrix_rank", "functional/ivy/linear_algebra/matrix_rank/matrix_rank_array", "functional/ivy/linear_algebra/matrix_rank/matrix_rank_container", "functional/ivy/linear_algebra/matrix_rank/matrix_rank_functional", "functional/ivy/linear_algebra/matrix_rank/static_matrix_rank_container", "functional/ivy/linear_algebra/matrix_transpose", "functional/ivy/linear_algebra/matrix_transpose/matrix_transpose_array", "functional/ivy/linear_algebra/matrix_transpose/matrix_transpose_container", "functional/ivy/linear_algebra/matrix_transpose/matrix_transpose_functional", "functional/ivy/linear_algebra/matrix_transpose/static_matrix_transpose_container", "functional/ivy/linear_algebra/outer", "functional/ivy/linear_algebra/outer/outer_array", "functional/ivy/linear_algebra/outer/outer_container", "functional/ivy/linear_algebra/outer/outer_functional", "functional/ivy/linear_algebra/outer/static_outer_container", "functional/ivy/linear_algebra/pinv", "functional/ivy/linear_algebra/pinv/pinv_array", "functional/ivy/linear_algebra/pinv/pinv_container", "functional/ivy/linear_algebra/pinv/pinv_functional", "functional/ivy/linear_algebra/pinv/static_pinv_container", "functional/ivy/linear_algebra/qr", "functional/ivy/linear_algebra/qr/qr_array", "functional/ivy/linear_algebra/qr/qr_container", "functional/ivy/linear_algebra/qr/qr_functional", "functional/ivy/linear_algebra/qr/static_qr_container", "functional/ivy/linear_algebra/slogdet", "functional/ivy/linear_algebra/slogdet/slogdet_array", "functional/ivy/linear_algebra/slogdet/slogdet_container", "functional/ivy/linear_algebra/slogdet/slogdet_functional", "functional/ivy/linear_algebra/slogdet/static_slogdet_container", "functional/ivy/linear_algebra/solve", "functional/ivy/linear_algebra/solve/solve_array", "functional/ivy/linear_algebra/solve/solve_container", "functional/ivy/linear_algebra/solve/solve_functional", "functional/ivy/linear_algebra/solve/static_solve_container", "functional/ivy/linear_algebra/svd", "functional/ivy/linear_algebra/svd/static_svd_container", "functional/ivy/linear_algebra/svd/svd_array", "functional/ivy/linear_algebra/svd/svd_container", "functional/ivy/linear_algebra/svd/svd_functional", "functional/ivy/linear_algebra/svdvals", "functional/ivy/linear_algebra/svdvals/static_svdvals_container", "functional/ivy/linear_algebra/svdvals/svdvals_array", "functional/ivy/linear_algebra/svdvals/svdvals_container", "functional/ivy/linear_algebra/svdvals/svdvals_functional", "functional/ivy/linear_algebra/tensordot", "functional/ivy/linear_algebra/tensordot/static_tensordot_container", "functional/ivy/linear_algebra/tensordot/tensordot_array", "functional/ivy/linear_algebra/tensordot/tensordot_container", "functional/ivy/linear_algebra/tensordot/tensordot_functional", "functional/ivy/linear_algebra/trace", "functional/ivy/linear_algebra/trace/static_trace_container", "functional/ivy/linear_algebra/trace/trace_array", "functional/ivy/linear_algebra/trace/trace_container", "functional/ivy/linear_algebra/trace/trace_functional", "functional/ivy/linear_algebra/vander", "functional/ivy/linear_algebra/vander/static_vander_container", "functional/ivy/linear_algebra/vander/vander_array", "functional/ivy/linear_algebra/vander/vander_container", "functional/ivy/linear_algebra/vander/vander_functional", "functional/ivy/linear_algebra/vecdot", "functional/ivy/linear_algebra/vecdot/static_vecdot_container", "functional/ivy/linear_algebra/vecdot/vecdot_array", "functional/ivy/linear_algebra/vecdot/vecdot_container", "functional/ivy/linear_algebra/vecdot/vecdot_functional", "functional/ivy/linear_algebra/vector_norm", "functional/ivy/linear_algebra/vector_norm/static_vector_norm_container", "functional/ivy/linear_algebra/vector_norm/vector_norm_array", "functional/ivy/linear_algebra/vector_norm/vector_norm_container", "functional/ivy/linear_algebra/vector_norm/vector_norm_functional", "functional/ivy/linear_algebra/vector_to_skew_symmetric_matrix", "functional/ivy/linear_algebra/vector_to_skew_symmetric_matrix/static_vector_to_skew_symmetric_matrix_container", "functional/ivy/linear_algebra/vector_to_skew_symmetric_matrix/vector_to_skew_symmetric_matrix_array", "functional/ivy/linear_algebra/vector_to_skew_symmetric_matrix/vector_to_skew_symmetric_matrix_container", "functional/ivy/linear_algebra/vector_to_skew_symmetric_matrix/vector_to_skew_symmetric_matrix_functional", "functional/ivy/losses", "functional/ivy/losses/binary_cross_entropy", "functional/ivy/losses/binary_cross_entropy/binary_cross_entropy_array", "functional/ivy/losses/binary_cross_entropy/binary_cross_entropy_container", "functional/ivy/losses/binary_cross_entropy/binary_cross_entropy_functional", "functional/ivy/losses/binary_cross_entropy/static_binary_cross_entropy_container", "functional/ivy/losses/cross_entropy", "functional/ivy/losses/cross_entropy/cross_entropy_array", "functional/ivy/losses/cross_entropy/cross_entropy_container", "functional/ivy/losses/cross_entropy/cross_entropy_functional", "functional/ivy/losses/cross_entropy/static_cross_entropy_container", "functional/ivy/losses/sparse_cross_entropy", "functional/ivy/losses/sparse_cross_entropy/sparse_cross_entropy_array", "functional/ivy/losses/sparse_cross_entropy/sparse_cross_entropy_container", "functional/ivy/losses/sparse_cross_entropy/sparse_cross_entropy_functional", "functional/ivy/losses/sparse_cross_entropy/static_sparse_cross_entropy_container", "functional/ivy/manipulation", "functional/ivy/manipulation/clip", "functional/ivy/manipulation/clip/clip_array", "functional/ivy/manipulation/clip/clip_container", "functional/ivy/manipulation/clip/clip_functional", "functional/ivy/manipulation/clip/static_clip_container", "functional/ivy/manipulation/concat", "functional/ivy/manipulation/concat/concat_array", "functional/ivy/manipulation/concat/concat_container", "functional/ivy/manipulation/concat/concat_functional", "functional/ivy/manipulation/concat/static_concat_container", "functional/ivy/manipulation/constant_pad", "functional/ivy/manipulation/constant_pad/constant_pad_array", "functional/ivy/manipulation/constant_pad/constant_pad_container", "functional/ivy/manipulation/constant_pad/constant_pad_functional", "functional/ivy/manipulation/constant_pad/static_constant_pad_container", "functional/ivy/manipulation/expand_dims", "functional/ivy/manipulation/expand_dims/expand_dims_array", "functional/ivy/manipulation/expand_dims/expand_dims_container", "functional/ivy/manipulation/expand_dims/expand_dims_functional", "functional/ivy/manipulation/expand_dims/static_expand_dims_container", "functional/ivy/manipulation/flip", "functional/ivy/manipulation/flip/flip_array", "functional/ivy/manipulation/flip/flip_container", "functional/ivy/manipulation/flip/flip_functional", "functional/ivy/manipulation/flip/static_flip_container", "functional/ivy/manipulation/permute_dims", "functional/ivy/manipulation/permute_dims/permute_dims_array", "functional/ivy/manipulation/permute_dims/permute_dims_container", "functional/ivy/manipulation/permute_dims/permute_dims_functional", "functional/ivy/manipulation/permute_dims/static_permute_dims_container", "functional/ivy/manipulation/repeat", "functional/ivy/manipulation/repeat/repeat_array", "functional/ivy/manipulation/repeat/repeat_container", "functional/ivy/manipulation/repeat/repeat_functional", "functional/ivy/manipulation/repeat/static_repeat_container", "functional/ivy/manipulation/reshape", "functional/ivy/manipulation/reshape/reshape_array", "functional/ivy/manipulation/reshape/reshape_container", "functional/ivy/manipulation/reshape/reshape_functional", "functional/ivy/manipulation/reshape/static_reshape_container", "functional/ivy/manipulation/roll", "functional/ivy/manipulation/roll/roll_array", "functional/ivy/manipulation/roll/roll_container", "functional/ivy/manipulation/roll/roll_functional", "functional/ivy/manipulation/roll/static_roll_container", "functional/ivy/manipulation/split", "functional/ivy/manipulation/split/split_array", "functional/ivy/manipulation/split/split_container", "functional/ivy/manipulation/split/split_functional", "functional/ivy/manipulation/split/static_split_container", "functional/ivy/manipulation/squeeze", "functional/ivy/manipulation/squeeze/squeeze_array", "functional/ivy/manipulation/squeeze/squeeze_container", "functional/ivy/manipulation/squeeze/squeeze_functional", "functional/ivy/manipulation/squeeze/static_squeeze_container", "functional/ivy/manipulation/stack", "functional/ivy/manipulation/stack/stack_array", "functional/ivy/manipulation/stack/stack_container", "functional/ivy/manipulation/stack/stack_functional", "functional/ivy/manipulation/stack/static_stack_container", "functional/ivy/manipulation/swapaxes", "functional/ivy/manipulation/swapaxes/static_swapaxes_container", "functional/ivy/manipulation/swapaxes/swapaxes_array", "functional/ivy/manipulation/swapaxes/swapaxes_container", "functional/ivy/manipulation/swapaxes/swapaxes_functional", "functional/ivy/manipulation/tile", "functional/ivy/manipulation/tile/static_tile_container", "functional/ivy/manipulation/tile/tile_array", "functional/ivy/manipulation/tile/tile_container", "functional/ivy/manipulation/tile/tile_functional", "functional/ivy/manipulation/unstack", "functional/ivy/manipulation/unstack/static_unstack_container", "functional/ivy/manipulation/unstack/unstack_array", "functional/ivy/manipulation/unstack/unstack_container", "functional/ivy/manipulation/unstack/unstack_functional", "functional/ivy/manipulation/zero_pad", "functional/ivy/manipulation/zero_pad/static_zero_pad_container", "functional/ivy/manipulation/zero_pad/zero_pad_array", "functional/ivy/manipulation/zero_pad/zero_pad_container", "functional/ivy/manipulation/zero_pad/zero_pad_functional", "functional/ivy/meta", "functional/ivy/meta/fomaml_step", "functional/ivy/meta/maml_step", "functional/ivy/meta/reptile_step", "functional/ivy/nest", "functional/ivy/nest/all_nested_indices", "functional/ivy/nest/copy_nest", "functional/ivy/nest/index_nest", "functional/ivy/nest/insert_into_nest_at_index", "functional/ivy/nest/insert_into_nest_at_indices", "functional/ivy/nest/map", "functional/ivy/nest/map_nest_at_index", "functional/ivy/nest/map_nest_at_indices", "functional/ivy/nest/multi_index_nest", "functional/ivy/nest/nested_any", "functional/ivy/nest/nested_argwhere", "functional/ivy/nest/nested_map", "functional/ivy/nest/nested_multi_map", "functional/ivy/nest/prune_nest_at_index", "functional/ivy/nest/prune_nest_at_indices", "functional/ivy/nest/set_nest_at_index", "functional/ivy/nest/set_nest_at_indices", "functional/ivy/norms", "functional/ivy/norms/layer_norm", "functional/ivy/norms/layer_norm/layer_norm_array", "functional/ivy/norms/layer_norm/layer_norm_container", "functional/ivy/norms/layer_norm/layer_norm_functional", "functional/ivy/random", "functional/ivy/random/multinomial", "functional/ivy/random/multinomial/multinomial_array", "functional/ivy/random/multinomial/multinomial_container", "functional/ivy/random/multinomial/multinomial_functional", "functional/ivy/random/multinomial/static_multinomial_container", "functional/ivy/random/randint", "functional/ivy/random/randint/randint_array", "functional/ivy/random/randint/randint_container", "functional/ivy/random/randint/randint_functional", "functional/ivy/random/randint/static_randint_container", "functional/ivy/random/random_normal", "functional/ivy/random/random_normal/random_normal_array", "functional/ivy/random/random_normal/random_normal_container", "functional/ivy/random/random_normal/random_normal_functional", "functional/ivy/random/random_normal/static_random_normal_container", "functional/ivy/random/random_uniform", "functional/ivy/random/random_uniform/random_uniform_array", "functional/ivy/random/random_uniform/random_uniform_container", "functional/ivy/random/random_uniform/random_uniform_functional", "functional/ivy/random/random_uniform/static_random_uniform_container", "functional/ivy/random/seed", "functional/ivy/random/shuffle", "functional/ivy/random/shuffle/shuffle_array", "functional/ivy/random/shuffle/shuffle_container", "functional/ivy/random/shuffle/shuffle_functional", "functional/ivy/random/shuffle/static_shuffle_container", "functional/ivy/searching", "functional/ivy/searching/argmax", "functional/ivy/searching/argmax/argmax_array", "functional/ivy/searching/argmax/argmax_container", "functional/ivy/searching/argmax/argmax_functional", "functional/ivy/searching/argmax/static_argmax_container", "functional/ivy/searching/argmin", "functional/ivy/searching/argmin/argmin_array", "functional/ivy/searching/argmin/argmin_container", "functional/ivy/searching/argmin/argmin_functional", "functional/ivy/searching/argmin/static_argmin_container", "functional/ivy/searching/argwhere", "functional/ivy/searching/argwhere/argwhere_array", "functional/ivy/searching/argwhere/argwhere_container", "functional/ivy/searching/argwhere/argwhere_functional", "functional/ivy/searching/argwhere/static_argwhere_container", "functional/ivy/searching/nonzero", "functional/ivy/searching/nonzero/nonzero_array", "functional/ivy/searching/nonzero/nonzero_container", "functional/ivy/searching/nonzero/nonzero_functional", "functional/ivy/searching/nonzero/static_nonzero_container", "functional/ivy/searching/where", "functional/ivy/searching/where/static_where_container", "functional/ivy/searching/where/where_array", "functional/ivy/searching/where/where_container", "functional/ivy/searching/where/where_functional", "functional/ivy/set", "functional/ivy/set/unique_all", "functional/ivy/set/unique_all/static_unique_all_container", "functional/ivy/set/unique_all/unique_all_array", "functional/ivy/set/unique_all/unique_all_container", "functional/ivy/set/unique_all/unique_all_functional", "functional/ivy/set/unique_counts", "functional/ivy/set/unique_counts/static_unique_counts_container", "functional/ivy/set/unique_counts/unique_counts_array", "functional/ivy/set/unique_counts/unique_counts_container", "functional/ivy/set/unique_counts/unique_counts_functional", "functional/ivy/set/unique_inverse", "functional/ivy/set/unique_inverse/static_unique_inverse_container", "functional/ivy/set/unique_inverse/unique_inverse_array", "functional/ivy/set/unique_inverse/unique_inverse_container", "functional/ivy/set/unique_inverse/unique_inverse_functional", "functional/ivy/set/unique_values", "functional/ivy/set/unique_values/static_unique_values_container", "functional/ivy/set/unique_values/unique_values_array", "functional/ivy/set/unique_values/unique_values_container", "functional/ivy/set/unique_values/unique_values_functional", "functional/ivy/sorting", "functional/ivy/sorting/argsort", "functional/ivy/sorting/argsort/argsort_array", "functional/ivy/sorting/argsort/argsort_container", "functional/ivy/sorting/argsort/argsort_functional", "functional/ivy/sorting/argsort/static_argsort_container", "functional/ivy/sorting/searchsorted", "functional/ivy/sorting/searchsorted/searchsorted_array", "functional/ivy/sorting/searchsorted/searchsorted_container", "functional/ivy/sorting/searchsorted/searchsorted_functional", "functional/ivy/sorting/searchsorted/static_searchsorted_container", "functional/ivy/sorting/sort", "functional/ivy/sorting/sort/sort_array", "functional/ivy/sorting/sort/sort_container", "functional/ivy/sorting/sort/sort_functional", "functional/ivy/sorting/sort/static_sort_container", "functional/ivy/statistical", "functional/ivy/statistical/cumprod", "functional/ivy/statistical/cumprod/cumprod_array", "functional/ivy/statistical/cumprod/cumprod_container", "functional/ivy/statistical/cumprod/cumprod_functional", "functional/ivy/statistical/cumprod/static_cumprod_container", "functional/ivy/statistical/cumsum", "functional/ivy/statistical/cumsum/cumsum_array", "functional/ivy/statistical/cumsum/cumsum_container", "functional/ivy/statistical/cumsum/cumsum_functional", "functional/ivy/statistical/cumsum/static_cumsum_container", "functional/ivy/statistical/einsum", "functional/ivy/statistical/einsum/einsum_array", "functional/ivy/statistical/einsum/einsum_container", "functional/ivy/statistical/einsum/einsum_functional", "functional/ivy/statistical/max", "functional/ivy/statistical/max/max_array", "functional/ivy/statistical/max/max_container", "functional/ivy/statistical/max/max_functional", "functional/ivy/statistical/mean", "functional/ivy/statistical/mean/mean_array", "functional/ivy/statistical/mean/mean_container", "functional/ivy/statistical/mean/mean_functional", "functional/ivy/statistical/min", "functional/ivy/statistical/min/min_array", "functional/ivy/statistical/min/min_container", "functional/ivy/statistical/min/min_functional", "functional/ivy/statistical/prod", "functional/ivy/statistical/prod/prod_array", "functional/ivy/statistical/prod/prod_container", "functional/ivy/statistical/prod/prod_functional", "functional/ivy/statistical/std", "functional/ivy/statistical/std/std_array", "functional/ivy/statistical/std/std_container", "functional/ivy/statistical/std/std_functional", "functional/ivy/statistical/sum", "functional/ivy/statistical/sum/static_sum_container", "functional/ivy/statistical/sum/sum_array", "functional/ivy/statistical/sum/sum_container", "functional/ivy/statistical/sum/sum_functional", "functional/ivy/statistical/var", "functional/ivy/statistical/var/static_var_container", "functional/ivy/statistical/var/var_array", "functional/ivy/statistical/var/var_container", "functional/ivy/statistical/var/var_functional", "functional/ivy/utility", "functional/ivy/utility/all", "functional/ivy/utility/all/all_array", "functional/ivy/utility/all/all_container", "functional/ivy/utility/all/all_functional", "functional/ivy/utility/all/static_all_container", "functional/ivy/utility/any", "functional/ivy/utility/any/any_array", "functional/ivy/utility/any/any_container", "functional/ivy/utility/any/any_functional", "functional/ivy/utility/any/static_any_container", "glossary", "index", "index_append", "index_prepend", "inspection", "inspection/add_array_specs", "inspection/fn_array_spec", "roadmap", "stateful", "stateful/activations", "stateful/activations/GEGLU", "stateful/activations/GELU", "stateful/converters", "stateful/converters/to_ivy_module", "stateful/initializers", "stateful/initializers/Constant", "stateful/initializers/FirstLayerSiren", "stateful/initializers/GlorotUniform", "stateful/initializers/Initializer", "stateful/initializers/KaimingNormal", "stateful/initializers/Ones", "stateful/initializers/Siren", "stateful/initializers/Uniform", "stateful/initializers/Zeros", "stateful/layers", "stateful/layers/Conv1D", "stateful/layers/Conv1DTranspose", "stateful/layers/Conv2D", "stateful/layers/Conv2DTranspose", "stateful/layers/Conv3D", "stateful/layers/Conv3DTranspose", "stateful/layers/DepthwiseConv2D", "stateful/layers/Dropout", "stateful/layers/LSTM", "stateful/layers/Linear", "stateful/layers/MultiHeadAttention", "stateful/module", "stateful/module/Module", "stateful/norms", "stateful/norms/LayerNorm", "stateful/optimizers", "stateful/optimizers/Adam", "stateful/optimizers/LAMB", "stateful/optimizers/LARS", "stateful/optimizers/Optimizer", "stateful/optimizers/SGD", "stateful/sequential", "stateful/sequential/Sequential", "supported_frameworks", "verbosity", "verbosity/cprint"], "filenames": ["_version.rst", "assertions.rst", "assertions/check_all.rst", "assertions/check_all_or_any_fn.rst", "assertions/check_any.rst", "assertions/check_elem_in_list.rst", "assertions/check_equal.rst", "assertions/check_exists.rst", "assertions/check_false.rst", "assertions/check_fill_value_and_dtype_are_compatible.rst", "assertions/check_gather_input_valid.rst", "assertions/check_gather_nd_input_valid.rst", "assertions/check_greater.rst", "assertions/check_isinstance.rst", "assertions/check_less.rst", "assertions/check_shape.rst", "assertions/check_true.rst", "backend_handler.rst", "backend_handler/choose_random_backend.rst", "backend_handler/clear_backend_stack.rst", "backend_handler/current_backend.rst", "backend_handler/fn_name_from_version_specific_fn_name.rst", "backend_handler/get_backend.rst", "backend_handler/set_backend.rst", "backend_handler/set_backend_to_specific_version.rst", "backend_handler/unset_backend.rst", "background.rst", "background/ml_explosion.rst", "background/standardization.rst", "background/why_unify.rst", "contributing.rst", "contributing/applied_libraries.rst", "contributing/building_the_docs.rst", "contributing/helpful_resources.rst", "contributing/open_tasks.rst", "contributing/setting_up.rst", "contributing/the_basics.rst", "data_classes.rst", "data_classes/array.rst", "data_classes/array/activations.rst", "data_classes/array/activations/ArrayWithActivations.rst", "data_classes/array/array.rst", "data_classes/array/array/Array.rst", "data_classes/array/conversions.rst", "data_classes/array/conversions/args_to_ivy.rst", "data_classes/array/conversions/args_to_native.rst", "data_classes/array/conversions/to_ivy.rst", "data_classes/array/conversions/to_native.rst", "data_classes/array/creation.rst", "data_classes/array/creation/ArrayWithCreation.rst", "data_classes/array/data_type.rst", "data_classes/array/data_type/ArrayWithDataTypes.rst", "data_classes/array/device.rst", "data_classes/array/device/ArrayWithDevice.rst", "data_classes/array/elementwise.rst", "data_classes/array/elementwise/ArrayWithElementwise.rst", "data_classes/array/extensions.rst", "data_classes/array/extensions/ArrayWithExtensions.rst", "data_classes/array/general.rst", "data_classes/array/general/ArrayWithGeneral.rst", "data_classes/array/gradients.rst", "data_classes/array/gradients/ArrayWithGradients.rst", "data_classes/array/image.rst", "data_classes/array/image/ArrayWithImage.rst", "data_classes/array/layers.rst", "data_classes/array/layers/ArrayWithLayers.rst", "data_classes/array/linear_algebra.rst", "data_classes/array/linear_algebra/ArrayWithLinearAlgebra.rst", "data_classes/array/losses.rst", "data_classes/array/losses/ArrayWithLosses.rst", "data_classes/array/manipulation.rst", "data_classes/array/manipulation/ArrayWithManipulation.rst", "data_classes/array/norms.rst", "data_classes/array/norms/ArrayWithNorms.rst", "data_classes/array/random.rst", "data_classes/array/random/ArrayWithRandom.rst", "data_classes/array/searching.rst", "data_classes/array/searching/ArrayWithSearching.rst", "data_classes/array/set.rst", "data_classes/array/set/ArrayWithSet.rst", "data_classes/array/sorting.rst", "data_classes/array/sorting/ArrayWithSorting.rst", "data_classes/array/statistical.rst", "data_classes/array/statistical/ArrayWithStatistical.rst", "data_classes/array/utility.rst", "data_classes/array/utility/ArrayWithUtility.rst", "data_classes/array/wrapping.rst", "data_classes/array/wrapping/add_ivy_array_instance_methods.rst", "data_classes/container.rst", "data_classes/container/activations.rst", "data_classes/container/activations/ContainerWithActivations.rst", "data_classes/container/base.rst", "data_classes/container/base/ContainerBase.rst", "data_classes/container/container.rst", "data_classes/container/container/Container.rst", "data_classes/container/conversions.rst", "data_classes/container/conversions/ContainerWithConversions.rst", "data_classes/container/creation.rst", "data_classes/container/creation/ContainerWithCreation.rst", "data_classes/container/data_type.rst", "data_classes/container/data_type/ContainerWithDataTypes.rst", "data_classes/container/device.rst", "data_classes/container/device/ContainerWithDevice.rst", "data_classes/container/elementwise.rst", "data_classes/container/elementwise/ContainerWithElementwise.rst", "data_classes/container/extensions.rst", "data_classes/container/extensions/ContainerWithExtensions.rst", "data_classes/container/general.rst", "data_classes/container/general/ContainerWithGeneral.rst", "data_classes/container/gradients.rst", "data_classes/container/gradients/ContainerWithGradients.rst", "data_classes/container/image.rst", "data_classes/container/image/ContainerWithImage.rst", "data_classes/container/layers.rst", "data_classes/container/layers/ContainerWithLayers.rst", "data_classes/container/linear_algebra.rst", "data_classes/container/linear_algebra/ContainerWithLinearAlgebra.rst", "data_classes/container/losses.rst", "data_classes/container/losses/ContainerWithLosses.rst", "data_classes/container/manipulation.rst", "data_classes/container/manipulation/ContainerWithManipulation.rst", "data_classes/container/norms.rst", "data_classes/container/norms/ContainerWithNorms.rst", "data_classes/container/random.rst", "data_classes/container/random/ContainerWithRandom.rst", "data_classes/container/searching.rst", "data_classes/container/searching/ContainerWithSearching.rst", "data_classes/container/set.rst", "data_classes/container/set/ContainerWithSet.rst", "data_classes/container/sorting.rst", "data_classes/container/sorting/ContainerWithSorting.rst", "data_classes/container/statistical.rst", "data_classes/container/statistical/ContainerWithStatistical.rst", "data_classes/container/utility.rst", "data_classes/container/utility/ContainerWithUtility.rst", "data_classes/container/wrapping.rst", "data_classes/container/wrapping/add_ivy_container_instance_methods.rst", "deep_dive.rst", "deep_dive/array_api_tests.rst", "deep_dive/arrays.rst", "deep_dive/backend_setting.rst", "deep_dive/containers.rst", "deep_dive/continuous_integration.rst", "deep_dive/data_types.rst", "deep_dive/devices.rst", "deep_dive/docstring_examples.rst", "deep_dive/docstrings.rst", "deep_dive/exception_handling.rst", "deep_dive/formatting.rst", "deep_dive/function_arguments.rst", "deep_dive/function_types.rst", "deep_dive/function_wrapping.rst", "deep_dive/inplace_updates.rst", "deep_dive/ivy_frontends.rst", "deep_dive/ivy_frontends_tests.rst", "deep_dive/ivy_tests.rst", "deep_dive/navigating_the_code.rst", "deep_dive/superset_behaviour.rst", "design.rst", "design/building_blocks.rst", "design/ivy_as_a_framework.rst", "design/ivy_as_a_framework/ivy_array.rst", "design/ivy_as_a_framework/ivy_container.rst", "design/ivy_as_a_framework/ivy_stateful_api.rst", "design/ivy_as_a_transpiler.rst", "docs/ivy.rst", "docs/ivy_builder.rst", "docs/ivy_ecosystem.rst", "docs/ivy_gym.rst", "docs/ivy_mech.rst", "docs/ivy_memory.rst", "docs/ivy_models.rst", "docs/ivy_robot.rst", "docs/ivy_vision.rst", "extensions.rst", "extensions/applied_libraries.rst", "faq.rst", "func_wrapper.rst", "func_wrapper/from_zero_dim_arrays_to_float.rst", "func_wrapper/handle_nestable.rst", "func_wrapper/handle_out_argument.rst", "func_wrapper/infer_device.rst", "func_wrapper/infer_dtype.rst", "func_wrapper/inputs_to_ivy_arrays.rst", "func_wrapper/inputs_to_native_arrays.rst", "func_wrapper/integer_arrays_to_float.rst", "func_wrapper/outputs_to_ivy_arrays.rst", "func_wrapper/to_native_arrays_and_back.rst", "functional/ivy.rst", "functional/ivy/activations.rst", "functional/ivy/activations/gelu.rst", "functional/ivy/activations/gelu/gelu_array.rst", "functional/ivy/activations/gelu/gelu_container.rst", "functional/ivy/activations/gelu/gelu_functional.rst", "functional/ivy/activations/gelu/static_gelu_container.rst", "functional/ivy/activations/leaky_relu.rst", "functional/ivy/activations/leaky_relu/leaky_relu_array.rst", "functional/ivy/activations/leaky_relu/leaky_relu_container.rst", "functional/ivy/activations/leaky_relu/leaky_relu_functional.rst", "functional/ivy/activations/leaky_relu/static_leaky_relu_container.rst", "functional/ivy/activations/log_softmax.rst", "functional/ivy/activations/log_softmax/log_softmax_array.rst", "functional/ivy/activations/log_softmax/log_softmax_container.rst", "functional/ivy/activations/log_softmax/log_softmax_functional.rst", "functional/ivy/activations/log_softmax/static_log_softmax_container.rst", "functional/ivy/activations/relu.rst", "functional/ivy/activations/relu/relu_array.rst", "functional/ivy/activations/relu/relu_container.rst", "functional/ivy/activations/relu/relu_functional.rst", "functional/ivy/activations/relu/static_relu_container.rst", "functional/ivy/activations/sigmoid.rst", "functional/ivy/activations/sigmoid/sigmoid_array.rst", "functional/ivy/activations/sigmoid/sigmoid_container.rst", "functional/ivy/activations/sigmoid/sigmoid_functional.rst", "functional/ivy/activations/sigmoid/static_sigmoid_container.rst", "functional/ivy/activations/softmax.rst", "functional/ivy/activations/softmax/softmax_array.rst", "functional/ivy/activations/softmax/softmax_container.rst", "functional/ivy/activations/softmax/softmax_functional.rst", "functional/ivy/activations/softmax/static_softmax_container.rst", "functional/ivy/activations/softplus.rst", "functional/ivy/activations/softplus/softplus_array.rst", "functional/ivy/activations/softplus/softplus_container.rst", "functional/ivy/activations/softplus/softplus_functional.rst", "functional/ivy/activations/softplus/static_softplus_container.rst", "functional/ivy/compilation.rst", "functional/ivy/compilation/compile.rst", "functional/ivy/constants.rst", "functional/ivy/creation.rst", "functional/ivy/creation/NestedSequence.rst", "functional/ivy/creation/arange.rst", "functional/ivy/creation/arange/arange_functional.rst", "functional/ivy/creation/arange/static_arange_container.rst", "functional/ivy/creation/asarray.rst", "functional/ivy/creation/asarray/asarray_array.rst", "functional/ivy/creation/asarray/asarray_functional.rst", "functional/ivy/creation/asarray/static_asarray_container.rst", "functional/ivy/creation/asarray_handle_nestable.rst", "functional/ivy/creation/asarray_infer_device.rst", "functional/ivy/creation/asarray_to_native_arrays_and_back.rst", "functional/ivy/creation/copy_array.rst", "functional/ivy/creation/copy_array/copy_array_array.rst", "functional/ivy/creation/copy_array/copy_array_functional.rst", "functional/ivy/creation/empty.rst", "functional/ivy/creation/empty_like.rst", "functional/ivy/creation/empty_like/empty_like_array.rst", "functional/ivy/creation/empty_like/empty_like_container.rst", "functional/ivy/creation/empty_like/empty_like_functional.rst", "functional/ivy/creation/empty_like/static_empty_like_container.rst", "functional/ivy/creation/eye.rst", "functional/ivy/creation/eye/eye_functional.rst", "functional/ivy/creation/eye/static_eye_container.rst", "functional/ivy/creation/from_dlpack.rst", "functional/ivy/creation/from_dlpack/from_dlpack_array.rst", "functional/ivy/creation/from_dlpack/from_dlpack_container.rst", "functional/ivy/creation/from_dlpack/from_dlpack_functional.rst", "functional/ivy/creation/from_dlpack/static_from_dlpack_container.rst", "functional/ivy/creation/full.rst", "functional/ivy/creation/full_like.rst", "functional/ivy/creation/full_like/full_like_array.rst", "functional/ivy/creation/full_like/full_like_container.rst", "functional/ivy/creation/full_like/full_like_functional.rst", "functional/ivy/creation/full_like/static_full_like_container.rst", "functional/ivy/creation/linspace.rst", "functional/ivy/creation/linspace/linspace_functional.rst", "functional/ivy/creation/linspace/static_linspace_container.rst", "functional/ivy/creation/logspace.rst", "functional/ivy/creation/logspace/logspace_functional.rst", "functional/ivy/creation/logspace/static_logspace_container.rst", "functional/ivy/creation/meshgrid.rst", "functional/ivy/creation/meshgrid/meshgrid_array.rst", "functional/ivy/creation/meshgrid/meshgrid_container.rst", "functional/ivy/creation/meshgrid/meshgrid_functional.rst", "functional/ivy/creation/meshgrid/static_meshgrid_container.rst", "functional/ivy/creation/native_array.rst", "functional/ivy/creation/native_array/native_array_array.rst", "functional/ivy/creation/native_array/native_array_container.rst", "functional/ivy/creation/native_array/native_array_functional.rst", "functional/ivy/creation/native_array/static_native_array_container.rst", "functional/ivy/creation/one_hot.rst", "functional/ivy/creation/one_hot/one_hot_array.rst", "functional/ivy/creation/one_hot/one_hot_container.rst", "functional/ivy/creation/one_hot/one_hot_functional.rst", "functional/ivy/creation/one_hot/static_one_hot_container.rst", "functional/ivy/creation/ones.rst", "functional/ivy/creation/ones/ones_functional.rst", "functional/ivy/creation/ones/static_ones_container.rst", "functional/ivy/creation/ones_like.rst", "functional/ivy/creation/ones_like/ones_like_array.rst", "functional/ivy/creation/ones_like/ones_like_container.rst", "functional/ivy/creation/ones_like/ones_like_functional.rst", "functional/ivy/creation/ones_like/static_ones_like_container.rst", "functional/ivy/creation/tril.rst", "functional/ivy/creation/tril/static_tril_container.rst", "functional/ivy/creation/tril/tril_array.rst", "functional/ivy/creation/tril/tril_container.rst", "functional/ivy/creation/tril/tril_functional.rst", "functional/ivy/creation/triu.rst", "functional/ivy/creation/triu/static_triu_container.rst", "functional/ivy/creation/triu/triu_array.rst", "functional/ivy/creation/triu/triu_container.rst", "functional/ivy/creation/triu/triu_functional.rst", "functional/ivy/creation/zeros.rst", "functional/ivy/creation/zeros/static_zeros_container.rst", "functional/ivy/creation/zeros/zeros_functional.rst", "functional/ivy/creation/zeros_like.rst", "functional/ivy/creation/zeros_like/static_zeros_like_container.rst", "functional/ivy/creation/zeros_like/zeros_like_array.rst", "functional/ivy/creation/zeros_like/zeros_like_container.rst", "functional/ivy/creation/zeros_like/zeros_like_functional.rst", "functional/ivy/data_type.rst", "functional/ivy/data_type/as_ivy_dtype.rst", "functional/ivy/data_type/as_native_dtype.rst", "functional/ivy/data_type/astype.rst", "functional/ivy/data_type/astype/astype_array.rst", "functional/ivy/data_type/astype/astype_container.rst", "functional/ivy/data_type/astype/astype_functional.rst", "functional/ivy/data_type/astype/static_astype_container.rst", "functional/ivy/data_type/broadcast_arrays.rst", "functional/ivy/data_type/broadcast_arrays/broadcast_arrays_array.rst", "functional/ivy/data_type/broadcast_arrays/broadcast_arrays_container.rst", "functional/ivy/data_type/broadcast_arrays/broadcast_arrays_functional.rst", "functional/ivy/data_type/broadcast_arrays/static_broadcast_arrays_container.rst", "functional/ivy/data_type/broadcast_to.rst", "functional/ivy/data_type/broadcast_to/broadcast_to_array.rst", "functional/ivy/data_type/broadcast_to/broadcast_to_container.rst", "functional/ivy/data_type/broadcast_to/broadcast_to_functional.rst", "functional/ivy/data_type/broadcast_to/static_broadcast_to_container.rst", "functional/ivy/data_type/can_cast.rst", "functional/ivy/data_type/can_cast/can_cast_array.rst", "functional/ivy/data_type/can_cast/can_cast_container.rst", "functional/ivy/data_type/can_cast/can_cast_functional.rst", "functional/ivy/data_type/can_cast/static_can_cast_container.rst", "functional/ivy/data_type/check_float.rst", "functional/ivy/data_type/closest_valid_dtype.rst", "functional/ivy/data_type/default_dtype.rst", "functional/ivy/data_type/default_float_dtype.rst", "functional/ivy/data_type/default_float_dtype/default_float_dtype_functional.rst", "functional/ivy/data_type/default_float_dtype/static_default_float_dtype_container.rst", "functional/ivy/data_type/default_int_dtype.rst", "functional/ivy/data_type/default_uint_dtype.rst", "functional/ivy/data_type/dtype.rst", "functional/ivy/data_type/dtype/dtype_container.rst", "functional/ivy/data_type/dtype/dtype_functional.rst", "functional/ivy/data_type/dtype/static_dtype_container.rst", "functional/ivy/data_type/dtype_bits.rst", "functional/ivy/data_type/finfo.rst", "functional/ivy/data_type/finfo/finfo_array.rst", "functional/ivy/data_type/finfo/finfo_container.rst", "functional/ivy/data_type/finfo/finfo_functional.rst", "functional/ivy/data_type/finfo/static_finfo_container.rst", "functional/ivy/data_type/function_supported_dtypes.rst", "functional/ivy/data_type/function_supported_dtypes/function_supported_dtypes_functional.rst", "functional/ivy/data_type/function_supported_dtypes/static_function_supported_dtypes_container.rst", "functional/ivy/data_type/function_unsupported_dtypes.rst", "functional/ivy/data_type/function_unsupported_dtypes/function_unsupported_dtypes_functional.rst", "functional/ivy/data_type/function_unsupported_dtypes/static_function_unsupported_dtypes_container.rst", "functional/ivy/data_type/iinfo.rst", "functional/ivy/data_type/iinfo/iinfo_array.rst", "functional/ivy/data_type/iinfo/iinfo_container.rst", "functional/ivy/data_type/iinfo/iinfo_functional.rst", "functional/ivy/data_type/iinfo/static_iinfo_container.rst", "functional/ivy/data_type/infer_default_dtype.rst", "functional/ivy/data_type/invalid_dtype.rst", "functional/ivy/data_type/is_bool_dtype.rst", "functional/ivy/data_type/is_bool_dtype/is_bool_dtype_array.rst", "functional/ivy/data_type/is_bool_dtype/is_bool_dtype_container.rst", "functional/ivy/data_type/is_bool_dtype/is_bool_dtype_functional.rst", "functional/ivy/data_type/is_bool_dtype/static_is_bool_dtype_container.rst", "functional/ivy/data_type/is_float_dtype.rst", "functional/ivy/data_type/is_float_dtype/is_float_dtype_array.rst", "functional/ivy/data_type/is_float_dtype/is_float_dtype_container.rst", "functional/ivy/data_type/is_float_dtype/is_float_dtype_functional.rst", "functional/ivy/data_type/is_float_dtype/static_is_float_dtype_container.rst", "functional/ivy/data_type/is_int_dtype.rst", "functional/ivy/data_type/is_int_dtype/is_int_dtype_array.rst", "functional/ivy/data_type/is_int_dtype/is_int_dtype_container.rst", "functional/ivy/data_type/is_int_dtype/is_int_dtype_functional.rst", "functional/ivy/data_type/is_int_dtype/static_is_int_dtype_container.rst", "functional/ivy/data_type/is_uint_dtype.rst", "functional/ivy/data_type/is_uint_dtype/is_uint_dtype_array.rst", "functional/ivy/data_type/is_uint_dtype/is_uint_dtype_container.rst", "functional/ivy/data_type/is_uint_dtype/is_uint_dtype_functional.rst", "functional/ivy/data_type/is_uint_dtype/static_is_uint_dtype_container.rst", "functional/ivy/data_type/promote_types.rst", "functional/ivy/data_type/promote_types_of_inputs.rst", "functional/ivy/data_type/result_type.rst", "functional/ivy/data_type/result_type/result_type_array.rst", "functional/ivy/data_type/result_type/result_type_container.rst", "functional/ivy/data_type/result_type/result_type_functional.rst", "functional/ivy/data_type/result_type/static_result_type_container.rst", "functional/ivy/data_type/set_default_dtype.rst", "functional/ivy/data_type/set_default_float_dtype.rst", "functional/ivy/data_type/set_default_int_dtype.rst", "functional/ivy/data_type/set_default_uint_dtype.rst", "functional/ivy/data_type/type_promote_arrays.rst", "functional/ivy/data_type/unset_default_dtype.rst", "functional/ivy/data_type/unset_default_float_dtype.rst", "functional/ivy/data_type/unset_default_int_dtype.rst", "functional/ivy/data_type/unset_default_uint_dtype.rst", "functional/ivy/data_type/valid_dtype.rst", "functional/ivy/device.rst", "functional/ivy/device/Profiler.rst", "functional/ivy/device/as_ivy_dev.rst", "functional/ivy/device/as_native_dev.rst", "functional/ivy/device/clear_mem_on_dev.rst", "functional/ivy/device/default_device.rst", "functional/ivy/device/dev.rst", "functional/ivy/device/dev/dev_array.rst", "functional/ivy/device/dev/dev_container.rst", "functional/ivy/device/dev/dev_functional.rst", "functional/ivy/device/dev/static_dev_container.rst", "functional/ivy/device/dev_util.rst", "functional/ivy/device/function_supported_devices.rst", "functional/ivy/device/function_unsupported_devices.rst", "functional/ivy/device/get_all_ivy_arrays_on_dev.rst", "functional/ivy/device/gpu_is_available.rst", "functional/ivy/device/num_cpu_cores.rst", "functional/ivy/device/num_gpus.rst", "functional/ivy/device/num_ivy_arrays_on_dev.rst", "functional/ivy/device/percent_used_mem_on_dev.rst", "functional/ivy/device/print_all_ivy_arrays_on_dev.rst", "functional/ivy/device/set_default_device.rst", "functional/ivy/device/set_split_factor.rst", "functional/ivy/device/split_factor.rst", "functional/ivy/device/split_func_call.rst", "functional/ivy/device/to_device.rst", "functional/ivy/device/to_device/static_to_device_container.rst", "functional/ivy/device/to_device/to_device_array.rst", "functional/ivy/device/to_device/to_device_container.rst", "functional/ivy/device/to_device/to_device_functional.rst", "functional/ivy/device/total_mem_on_dev.rst", "functional/ivy/device/tpu_is_available.rst", "functional/ivy/device/unset_default_device.rst", "functional/ivy/device/used_mem_on_dev.rst", "functional/ivy/elementwise.rst", "functional/ivy/elementwise/abs.rst", "functional/ivy/elementwise/abs/abs_array.rst", "functional/ivy/elementwise/abs/abs_container.rst", "functional/ivy/elementwise/abs/abs_functional.rst", "functional/ivy/elementwise/abs/static_abs_container.rst", "functional/ivy/elementwise/acos.rst", "functional/ivy/elementwise/acos/acos_array.rst", "functional/ivy/elementwise/acos/acos_container.rst", "functional/ivy/elementwise/acos/acos_functional.rst", "functional/ivy/elementwise/acos/static_acos_container.rst", "functional/ivy/elementwise/acosh.rst", "functional/ivy/elementwise/acosh/acosh_array.rst", "functional/ivy/elementwise/acosh/acosh_container.rst", "functional/ivy/elementwise/acosh/acosh_functional.rst", "functional/ivy/elementwise/acosh/static_acosh_container.rst", "functional/ivy/elementwise/add.rst", "functional/ivy/elementwise/add/add_array.rst", "functional/ivy/elementwise/add/add_container.rst", "functional/ivy/elementwise/add/add_functional.rst", "functional/ivy/elementwise/add/static_add_container.rst", "functional/ivy/elementwise/asin.rst", "functional/ivy/elementwise/asin/asin_array.rst", "functional/ivy/elementwise/asin/asin_container.rst", "functional/ivy/elementwise/asin/asin_functional.rst", "functional/ivy/elementwise/asin/static_asin_container.rst", "functional/ivy/elementwise/asinh.rst", "functional/ivy/elementwise/asinh/asinh_array.rst", "functional/ivy/elementwise/asinh/asinh_container.rst", "functional/ivy/elementwise/asinh/asinh_functional.rst", "functional/ivy/elementwise/asinh/static_asinh_container.rst", "functional/ivy/elementwise/atan.rst", "functional/ivy/elementwise/atan/atan_array.rst", "functional/ivy/elementwise/atan/atan_container.rst", "functional/ivy/elementwise/atan/atan_functional.rst", "functional/ivy/elementwise/atan/static_atan_container.rst", "functional/ivy/elementwise/atan2.rst", "functional/ivy/elementwise/atan2/atan2_array.rst", "functional/ivy/elementwise/atan2/atan2_container.rst", "functional/ivy/elementwise/atan2/atan2_functional.rst", "functional/ivy/elementwise/atan2/static_atan2_container.rst", "functional/ivy/elementwise/atanh.rst", "functional/ivy/elementwise/atanh/atanh_array.rst", "functional/ivy/elementwise/atanh/atanh_container.rst", "functional/ivy/elementwise/atanh/atanh_functional.rst", "functional/ivy/elementwise/atanh/static_atanh_container.rst", "functional/ivy/elementwise/bitwise_and.rst", "functional/ivy/elementwise/bitwise_and/bitwise_and_array.rst", "functional/ivy/elementwise/bitwise_and/bitwise_and_container.rst", "functional/ivy/elementwise/bitwise_and/bitwise_and_functional.rst", "functional/ivy/elementwise/bitwise_and/static_bitwise_and_container.rst", "functional/ivy/elementwise/bitwise_invert.rst", "functional/ivy/elementwise/bitwise_invert/bitwise_invert_array.rst", "functional/ivy/elementwise/bitwise_invert/bitwise_invert_container.rst", "functional/ivy/elementwise/bitwise_invert/bitwise_invert_functional.rst", "functional/ivy/elementwise/bitwise_invert/static_bitwise_invert_container.rst", "functional/ivy/elementwise/bitwise_left_shift.rst", "functional/ivy/elementwise/bitwise_left_shift/bitwise_left_shift_array.rst", "functional/ivy/elementwise/bitwise_left_shift/bitwise_left_shift_container.rst", "functional/ivy/elementwise/bitwise_left_shift/bitwise_left_shift_functional.rst", "functional/ivy/elementwise/bitwise_left_shift/static_bitwise_left_shift_container.rst", "functional/ivy/elementwise/bitwise_or.rst", "functional/ivy/elementwise/bitwise_or/bitwise_or_array.rst", "functional/ivy/elementwise/bitwise_or/bitwise_or_container.rst", "functional/ivy/elementwise/bitwise_or/bitwise_or_functional.rst", "functional/ivy/elementwise/bitwise_or/static_bitwise_or_container.rst", "functional/ivy/elementwise/bitwise_right_shift.rst", "functional/ivy/elementwise/bitwise_right_shift/bitwise_right_shift_array.rst", "functional/ivy/elementwise/bitwise_right_shift/bitwise_right_shift_container.rst", "functional/ivy/elementwise/bitwise_right_shift/bitwise_right_shift_functional.rst", "functional/ivy/elementwise/bitwise_right_shift/static_bitwise_right_shift_container.rst", "functional/ivy/elementwise/bitwise_xor.rst", "functional/ivy/elementwise/bitwise_xor/bitwise_xor_array.rst", "functional/ivy/elementwise/bitwise_xor/bitwise_xor_container.rst", "functional/ivy/elementwise/bitwise_xor/bitwise_xor_functional.rst", "functional/ivy/elementwise/bitwise_xor/static_bitwise_xor_container.rst", "functional/ivy/elementwise/ceil.rst", "functional/ivy/elementwise/ceil/ceil_array.rst", "functional/ivy/elementwise/ceil/ceil_container.rst", "functional/ivy/elementwise/ceil/ceil_functional.rst", "functional/ivy/elementwise/ceil/static_ceil_container.rst", "functional/ivy/elementwise/cos.rst", "functional/ivy/elementwise/cos/cos_array.rst", "functional/ivy/elementwise/cos/cos_container.rst", "functional/ivy/elementwise/cos/cos_functional.rst", "functional/ivy/elementwise/cos/static_cos_container.rst", "functional/ivy/elementwise/cosh.rst", "functional/ivy/elementwise/cosh/cosh_array.rst", "functional/ivy/elementwise/cosh/cosh_container.rst", "functional/ivy/elementwise/cosh/cosh_functional.rst", "functional/ivy/elementwise/cosh/static_cosh_container.rst", "functional/ivy/elementwise/deg2rad.rst", "functional/ivy/elementwise/deg2rad/deg2rad_array.rst", "functional/ivy/elementwise/deg2rad/deg2rad_container.rst", "functional/ivy/elementwise/deg2rad/deg2rad_functional.rst", "functional/ivy/elementwise/deg2rad/static_deg2rad_container.rst", "functional/ivy/elementwise/divide.rst", "functional/ivy/elementwise/divide/divide_array.rst", "functional/ivy/elementwise/divide/divide_container.rst", "functional/ivy/elementwise/divide/divide_functional.rst", "functional/ivy/elementwise/divide/static_divide_container.rst", "functional/ivy/elementwise/equal.rst", "functional/ivy/elementwise/equal/equal_array.rst", "functional/ivy/elementwise/equal/equal_container.rst", "functional/ivy/elementwise/equal/equal_functional.rst", "functional/ivy/elementwise/equal/static_equal_container.rst", "functional/ivy/elementwise/erf.rst", "functional/ivy/elementwise/erf/erf_array.rst", "functional/ivy/elementwise/erf/erf_container.rst", "functional/ivy/elementwise/erf/erf_functional.rst", "functional/ivy/elementwise/erf/static_erf_container.rst", "functional/ivy/elementwise/exp.rst", "functional/ivy/elementwise/exp/exp_array.rst", "functional/ivy/elementwise/exp/exp_container.rst", "functional/ivy/elementwise/exp/exp_functional.rst", "functional/ivy/elementwise/exp/static_exp_container.rst", "functional/ivy/elementwise/expm1.rst", "functional/ivy/elementwise/expm1/expm1_array.rst", "functional/ivy/elementwise/expm1/expm1_container.rst", "functional/ivy/elementwise/expm1/expm1_functional.rst", "functional/ivy/elementwise/expm1/static_expm1_container.rst", "functional/ivy/elementwise/floor.rst", "functional/ivy/elementwise/floor/floor_array.rst", "functional/ivy/elementwise/floor/floor_container.rst", "functional/ivy/elementwise/floor/floor_functional.rst", "functional/ivy/elementwise/floor/static_floor_container.rst", "functional/ivy/elementwise/floor_divide.rst", "functional/ivy/elementwise/floor_divide/floor_divide_array.rst", "functional/ivy/elementwise/floor_divide/floor_divide_container.rst", "functional/ivy/elementwise/floor_divide/floor_divide_functional.rst", "functional/ivy/elementwise/floor_divide/static_floor_divide_container.rst", "functional/ivy/elementwise/greater.rst", "functional/ivy/elementwise/greater/greater_array.rst", "functional/ivy/elementwise/greater/greater_container.rst", "functional/ivy/elementwise/greater/greater_functional.rst", "functional/ivy/elementwise/greater/static_greater_container.rst", "functional/ivy/elementwise/greater_equal.rst", "functional/ivy/elementwise/greater_equal/greater_equal_array.rst", "functional/ivy/elementwise/greater_equal/greater_equal_container.rst", "functional/ivy/elementwise/greater_equal/greater_equal_functional.rst", "functional/ivy/elementwise/greater_equal/static_greater_equal_container.rst", "functional/ivy/elementwise/isfinite.rst", "functional/ivy/elementwise/isfinite/isfinite_array.rst", "functional/ivy/elementwise/isfinite/isfinite_container.rst", "functional/ivy/elementwise/isfinite/isfinite_functional.rst", "functional/ivy/elementwise/isfinite/static_isfinite_container.rst", "functional/ivy/elementwise/isinf.rst", "functional/ivy/elementwise/isinf/isinf_array.rst", "functional/ivy/elementwise/isinf/isinf_container.rst", "functional/ivy/elementwise/isinf/isinf_functional.rst", "functional/ivy/elementwise/isinf/static_isinf_container.rst", "functional/ivy/elementwise/isnan.rst", "functional/ivy/elementwise/isnan/isnan_array.rst", "functional/ivy/elementwise/isnan/isnan_container.rst", "functional/ivy/elementwise/isnan/isnan_functional.rst", "functional/ivy/elementwise/isnan/static_isnan_container.rst", "functional/ivy/elementwise/isreal.rst", "functional/ivy/elementwise/isreal/isreal_array.rst", "functional/ivy/elementwise/isreal/isreal_container.rst", "functional/ivy/elementwise/isreal/isreal_functional.rst", "functional/ivy/elementwise/isreal/static_isreal_container.rst", "functional/ivy/elementwise/less.rst", "functional/ivy/elementwise/less/less_array.rst", "functional/ivy/elementwise/less/less_container.rst", "functional/ivy/elementwise/less/less_functional.rst", "functional/ivy/elementwise/less/static_less_container.rst", "functional/ivy/elementwise/less_equal.rst", "functional/ivy/elementwise/less_equal/less_equal_array.rst", "functional/ivy/elementwise/less_equal/less_equal_container.rst", "functional/ivy/elementwise/less_equal/less_equal_functional.rst", "functional/ivy/elementwise/less_equal/static_less_equal_container.rst", "functional/ivy/elementwise/log.rst", "functional/ivy/elementwise/log/log_array.rst", "functional/ivy/elementwise/log/log_container.rst", "functional/ivy/elementwise/log/log_functional.rst", "functional/ivy/elementwise/log/static_log_container.rst", "functional/ivy/elementwise/log10.rst", "functional/ivy/elementwise/log10/log10_array.rst", "functional/ivy/elementwise/log10/log10_container.rst", "functional/ivy/elementwise/log10/log10_functional.rst", "functional/ivy/elementwise/log10/static_log10_container.rst", "functional/ivy/elementwise/log1p.rst", "functional/ivy/elementwise/log1p/log1p_array.rst", "functional/ivy/elementwise/log1p/log1p_container.rst", "functional/ivy/elementwise/log1p/log1p_functional.rst", "functional/ivy/elementwise/log1p/static_log1p_container.rst", "functional/ivy/elementwise/log2.rst", "functional/ivy/elementwise/log2/log2_array.rst", "functional/ivy/elementwise/log2/log2_container.rst", "functional/ivy/elementwise/log2/log2_functional.rst", "functional/ivy/elementwise/log2/static_log2_container.rst", "functional/ivy/elementwise/logaddexp.rst", "functional/ivy/elementwise/logaddexp/logaddexp_array.rst", "functional/ivy/elementwise/logaddexp/logaddexp_container.rst", "functional/ivy/elementwise/logaddexp/logaddexp_functional.rst", "functional/ivy/elementwise/logaddexp/static_logaddexp_container.rst", "functional/ivy/elementwise/logical_and.rst", "functional/ivy/elementwise/logical_and/logical_and_array.rst", "functional/ivy/elementwise/logical_and/logical_and_container.rst", "functional/ivy/elementwise/logical_and/logical_and_functional.rst", "functional/ivy/elementwise/logical_and/static_logical_and_container.rst", "functional/ivy/elementwise/logical_not.rst", "functional/ivy/elementwise/logical_not/logical_not_array.rst", "functional/ivy/elementwise/logical_not/logical_not_container.rst", "functional/ivy/elementwise/logical_not/logical_not_functional.rst", "functional/ivy/elementwise/logical_not/static_logical_not_container.rst", "functional/ivy/elementwise/logical_or.rst", "functional/ivy/elementwise/logical_or/logical_or_array.rst", "functional/ivy/elementwise/logical_or/logical_or_container.rst", "functional/ivy/elementwise/logical_or/logical_or_functional.rst", "functional/ivy/elementwise/logical_or/static_logical_or_container.rst", "functional/ivy/elementwise/logical_xor.rst", "functional/ivy/elementwise/logical_xor/logical_xor_array.rst", "functional/ivy/elementwise/logical_xor/logical_xor_container.rst", "functional/ivy/elementwise/logical_xor/logical_xor_functional.rst", "functional/ivy/elementwise/logical_xor/static_logical_xor_container.rst", "functional/ivy/elementwise/maximum.rst", "functional/ivy/elementwise/maximum/maximum_array.rst", "functional/ivy/elementwise/maximum/maximum_container.rst", "functional/ivy/elementwise/maximum/maximum_functional.rst", "functional/ivy/elementwise/maximum/static_maximum_container.rst", "functional/ivy/elementwise/minimum.rst", "functional/ivy/elementwise/minimum/minimum_array.rst", "functional/ivy/elementwise/minimum/minimum_container.rst", "functional/ivy/elementwise/minimum/minimum_functional.rst", "functional/ivy/elementwise/minimum/static_minimum_container.rst", "functional/ivy/elementwise/multiply.rst", "functional/ivy/elementwise/multiply/multiply_array.rst", "functional/ivy/elementwise/multiply/multiply_container.rst", "functional/ivy/elementwise/multiply/multiply_functional.rst", "functional/ivy/elementwise/multiply/static_multiply_container.rst", "functional/ivy/elementwise/negative.rst", "functional/ivy/elementwise/negative/negative_array.rst", "functional/ivy/elementwise/negative/negative_container.rst", "functional/ivy/elementwise/negative/negative_functional.rst", "functional/ivy/elementwise/negative/static_negative_container.rst", "functional/ivy/elementwise/not_equal.rst", "functional/ivy/elementwise/not_equal/not_equal_array.rst", "functional/ivy/elementwise/not_equal/not_equal_container.rst", "functional/ivy/elementwise/not_equal/not_equal_functional.rst", "functional/ivy/elementwise/not_equal/static_not_equal_container.rst", "functional/ivy/elementwise/positive.rst", "functional/ivy/elementwise/positive/positive_array.rst", "functional/ivy/elementwise/positive/positive_container.rst", "functional/ivy/elementwise/positive/positive_functional.rst", "functional/ivy/elementwise/positive/static_positive_container.rst", "functional/ivy/elementwise/pow.rst", "functional/ivy/elementwise/pow/pow_array.rst", "functional/ivy/elementwise/pow/pow_container.rst", "functional/ivy/elementwise/pow/pow_functional.rst", "functional/ivy/elementwise/pow/static_pow_container.rst", "functional/ivy/elementwise/rad2deg.rst", "functional/ivy/elementwise/rad2deg/rad2deg_array.rst", "functional/ivy/elementwise/rad2deg/rad2deg_container.rst", "functional/ivy/elementwise/rad2deg/rad2deg_functional.rst", "functional/ivy/elementwise/rad2deg/static_rad2deg_container.rst", "functional/ivy/elementwise/reciprocal.rst", "functional/ivy/elementwise/reciprocal/reciprocal_array.rst", "functional/ivy/elementwise/reciprocal/reciprocal_container.rst", "functional/ivy/elementwise/reciprocal/reciprocal_functional.rst", "functional/ivy/elementwise/reciprocal/static_reciprocal_container.rst", "functional/ivy/elementwise/remainder.rst", "functional/ivy/elementwise/remainder/remainder_array.rst", "functional/ivy/elementwise/remainder/remainder_container.rst", "functional/ivy/elementwise/remainder/remainder_functional.rst", "functional/ivy/elementwise/remainder/static_remainder_container.rst", "functional/ivy/elementwise/round.rst", "functional/ivy/elementwise/round/round_array.rst", "functional/ivy/elementwise/round/round_container.rst", "functional/ivy/elementwise/round/round_functional.rst", "functional/ivy/elementwise/round/static_round_container.rst", "functional/ivy/elementwise/sign.rst", "functional/ivy/elementwise/sign/sign_array.rst", "functional/ivy/elementwise/sign/sign_container.rst", "functional/ivy/elementwise/sign/sign_functional.rst", "functional/ivy/elementwise/sign/static_sign_container.rst", "functional/ivy/elementwise/sin.rst", "functional/ivy/elementwise/sin/sin_array.rst", "functional/ivy/elementwise/sin/sin_container.rst", "functional/ivy/elementwise/sin/sin_functional.rst", "functional/ivy/elementwise/sin/static_sin_container.rst", "functional/ivy/elementwise/sinh.rst", "functional/ivy/elementwise/sinh/sinh_array.rst", "functional/ivy/elementwise/sinh/sinh_container.rst", "functional/ivy/elementwise/sinh/sinh_functional.rst", "functional/ivy/elementwise/sinh/static_sinh_container.rst", "functional/ivy/elementwise/sqrt.rst", "functional/ivy/elementwise/sqrt/sqrt_array.rst", "functional/ivy/elementwise/sqrt/sqrt_container.rst", "functional/ivy/elementwise/sqrt/sqrt_functional.rst", "functional/ivy/elementwise/sqrt/static_sqrt_container.rst", "functional/ivy/elementwise/square.rst", "functional/ivy/elementwise/square/square_array.rst", "functional/ivy/elementwise/square/square_container.rst", "functional/ivy/elementwise/square/square_functional.rst", "functional/ivy/elementwise/square/static_square_container.rst", "functional/ivy/elementwise/subtract.rst", "functional/ivy/elementwise/subtract/static_subtract_container.rst", "functional/ivy/elementwise/subtract/subtract_array.rst", "functional/ivy/elementwise/subtract/subtract_container.rst", "functional/ivy/elementwise/subtract/subtract_functional.rst", "functional/ivy/elementwise/tan.rst", "functional/ivy/elementwise/tan/static_tan_container.rst", "functional/ivy/elementwise/tan/tan_array.rst", "functional/ivy/elementwise/tan/tan_container.rst", "functional/ivy/elementwise/tan/tan_functional.rst", "functional/ivy/elementwise/tanh.rst", "functional/ivy/elementwise/tanh/static_tanh_container.rst", "functional/ivy/elementwise/tanh/tanh_array.rst", "functional/ivy/elementwise/tanh/tanh_container.rst", "functional/ivy/elementwise/tanh/tanh_functional.rst", "functional/ivy/elementwise/trunc.rst", "functional/ivy/elementwise/trunc/static_trunc_container.rst", "functional/ivy/elementwise/trunc/trunc_array.rst", "functional/ivy/elementwise/trunc/trunc_container.rst", "functional/ivy/elementwise/trunc/trunc_functional.rst", "functional/ivy/elementwise/trunc_divide.rst", "functional/ivy/elementwise/trunc_divide/static_trunc_divide_container.rst", "functional/ivy/elementwise/trunc_divide/trunc_divide_array.rst", "functional/ivy/elementwise/trunc_divide/trunc_divide_container.rst", "functional/ivy/elementwise/trunc_divide/trunc_divide_functional.rst", "functional/ivy/extensions.rst", "functional/ivy/extensions/activations.rst", "functional/ivy/extensions/compilation.rst", "functional/ivy/extensions/constants.rst", "functional/ivy/extensions/creation.rst", "functional/ivy/extensions/data_type.rst", "functional/ivy/extensions/device.rst", "functional/ivy/extensions/elementwise.rst", "functional/ivy/extensions/flatten.rst", "functional/ivy/extensions/flatten/flatten_array.rst", "functional/ivy/extensions/flatten/flatten_container.rst", "functional/ivy/extensions/flatten/flatten_functional.rst", "functional/ivy/extensions/flatten/static_flatten_container.rst", "functional/ivy/extensions/flipud.rst", "functional/ivy/extensions/flipud/flipud_array.rst", "functional/ivy/extensions/flipud/flipud_container.rst", "functional/ivy/extensions/flipud/flipud_functional.rst", "functional/ivy/extensions/flipud/static_flipud_container.rst", "functional/ivy/extensions/fmax.rst", "functional/ivy/extensions/fmax/fmax_array.rst", "functional/ivy/extensions/fmax/fmax_container.rst", "functional/ivy/extensions/fmax/fmax_functional.rst", "functional/ivy/extensions/fmax/static_fmax_container.rst", "functional/ivy/extensions/fmod.rst", "functional/ivy/extensions/fmod/fmod_array.rst", "functional/ivy/extensions/fmod/fmod_container.rst", "functional/ivy/extensions/fmod/fmod_functional.rst", "functional/ivy/extensions/fmod/static_fmod_container.rst", "functional/ivy/extensions/general.rst", "functional/ivy/extensions/gradients.rst", "functional/ivy/extensions/hann_window.rst", "functional/ivy/extensions/hann_window/hann_window_container.rst", "functional/ivy/extensions/hann_window/hann_window_functional.rst", "functional/ivy/extensions/hann_window/static_hann_window_container.rst", "functional/ivy/extensions/heaviside.rst", "functional/ivy/extensions/heaviside/heaviside_array.rst", "functional/ivy/extensions/heaviside/heaviside_container.rst", "functional/ivy/extensions/heaviside/heaviside_functional.rst", "functional/ivy/extensions/heaviside/static_heaviside_container.rst", "functional/ivy/extensions/is_ivy_sparse_array.rst", "functional/ivy/extensions/is_native_sparse_array.rst", "functional/ivy/extensions/kaiser_window.rst", "functional/ivy/extensions/kaiser_window/kaiser_window_container.rst", "functional/ivy/extensions/kaiser_window/kaiser_window_functional.rst", "functional/ivy/extensions/kaiser_window/static_kaiser_window_container.rst", "functional/ivy/extensions/layers.rst", "functional/ivy/extensions/lcm.rst", "functional/ivy/extensions/lcm/lcm_array.rst", "functional/ivy/extensions/lcm/lcm_container.rst", "functional/ivy/extensions/lcm/lcm_functional.rst", "functional/ivy/extensions/lcm/static_lcm_container.rst", "functional/ivy/extensions/linear_algebra.rst", "functional/ivy/extensions/losses.rst", "functional/ivy/extensions/manipulation.rst", "functional/ivy/extensions/max_pool2d.rst", "functional/ivy/extensions/max_pool2d/max_pool2d_array.rst", "functional/ivy/extensions/max_pool2d/max_pool2d_container.rst", "functional/ivy/extensions/max_pool2d/max_pool2d_functional.rst", "functional/ivy/extensions/max_pool2d/static_max_pool2d_container.rst", "functional/ivy/extensions/median.rst", "functional/ivy/extensions/median/median_array.rst", "functional/ivy/extensions/median/median_container.rst", "functional/ivy/extensions/median/median_functional.rst", "functional/ivy/extensions/median/static_median_container.rst", "functional/ivy/extensions/meta.rst", "functional/ivy/extensions/moveaxis.rst", "functional/ivy/extensions/moveaxis/moveaxis_array.rst", "functional/ivy/extensions/moveaxis/moveaxis_container.rst", "functional/ivy/extensions/moveaxis/moveaxis_functional.rst", "functional/ivy/extensions/moveaxis/static_moveaxis_container.rst", "functional/ivy/extensions/native_sparse_array.rst", "functional/ivy/extensions/native_sparse_array_to_indices_values_and_shape.rst", "functional/ivy/extensions/ndenumerate.rst", "functional/ivy/extensions/ndindex.rst", "functional/ivy/extensions/nest.rst", "functional/ivy/extensions/norms.rst", "functional/ivy/extensions/pad.rst", "functional/ivy/extensions/pad/pad_array.rst", "functional/ivy/extensions/pad/pad_container.rst", "functional/ivy/extensions/pad/pad_functional.rst", "functional/ivy/extensions/pad/static_pad_container.rst", "functional/ivy/extensions/random.rst", "functional/ivy/extensions/searching.rst", "functional/ivy/extensions/set.rst", "functional/ivy/extensions/sinc.rst", "functional/ivy/extensions/sinc/sinc_array.rst", "functional/ivy/extensions/sinc/sinc_container.rst", "functional/ivy/extensions/sinc/sinc_functional.rst", "functional/ivy/extensions/sinc/static_sinc_container.rst", "functional/ivy/extensions/sorting.rst", "functional/ivy/extensions/statistical.rst", "functional/ivy/extensions/utility.rst", "functional/ivy/extensions/vorbis_window.rst", "functional/ivy/general.rst", "functional/ivy/general/all_equal.rst", "functional/ivy/general/all_equal/all_equal_array.rst", "functional/ivy/general/all_equal/all_equal_container.rst", "functional/ivy/general/all_equal/all_equal_functional.rst", "functional/ivy/general/all_equal/static_all_equal_container.rst", "functional/ivy/general/arg_info.rst", "functional/ivy/general/arg_names.rst", "functional/ivy/general/array_equal.rst", "functional/ivy/general/array_equal/array_equal_array.rst", "functional/ivy/general/array_equal/array_equal_functional.rst", "functional/ivy/general/assert_supports_inplace.rst", "functional/ivy/general/assert_supports_inplace/assert_supports_inplace_array.rst", "functional/ivy/general/assert_supports_inplace/assert_supports_inplace_container.rst", "functional/ivy/general/assert_supports_inplace/assert_supports_inplace_functional.rst", "functional/ivy/general/assert_supports_inplace/static_assert_supports_inplace_container.rst", "functional/ivy/general/cache_fn.rst", "functional/ivy/general/clip_matrix_norm.rst", "functional/ivy/general/clip_matrix_norm/clip_matrix_norm_array.rst", "functional/ivy/general/clip_matrix_norm/clip_matrix_norm_container.rst", "functional/ivy/general/clip_matrix_norm/clip_matrix_norm_functional.rst", "functional/ivy/general/clip_matrix_norm/static_clip_matrix_norm_container.rst", "functional/ivy/general/clip_vector_norm.rst", "functional/ivy/general/clip_vector_norm/clip_vector_norm_array.rst", "functional/ivy/general/clip_vector_norm/clip_vector_norm_container.rst", "functional/ivy/general/clip_vector_norm/clip_vector_norm_functional.rst", "functional/ivy/general/clip_vector_norm/static_clip_vector_norm_container.rst", "functional/ivy/general/container_types.rst", "functional/ivy/general/current_backend_str.rst", "functional/ivy/general/default.rst", "functional/ivy/general/default/default_array.rst", "functional/ivy/general/default/default_functional.rst", "functional/ivy/general/einops_rearrange.rst", "functional/ivy/general/einops_rearrange/einops_rearrange_array.rst", "functional/ivy/general/einops_rearrange/einops_rearrange_container.rst", "functional/ivy/general/einops_rearrange/einops_rearrange_functional.rst", "functional/ivy/general/einops_rearrange/static_einops_rearrange_container.rst", "functional/ivy/general/einops_reduce.rst", "functional/ivy/general/einops_reduce/einops_reduce_array.rst", "functional/ivy/general/einops_reduce/einops_reduce_container.rst", "functional/ivy/general/einops_reduce/einops_reduce_functional.rst", "functional/ivy/general/einops_reduce/static_einops_reduce_container.rst", "functional/ivy/general/einops_repeat.rst", "functional/ivy/general/einops_repeat/einops_repeat_array.rst", "functional/ivy/general/einops_repeat/einops_repeat_container.rst", "functional/ivy/general/einops_repeat/einops_repeat_functional.rst", "functional/ivy/general/einops_repeat/static_einops_repeat_container.rst", "functional/ivy/general/exists.rst", "functional/ivy/general/exists/exists_array.rst", "functional/ivy/general/exists/exists_functional.rst", "functional/ivy/general/fourier_encode.rst", "functional/ivy/general/fourier_encode/fourier_encode_array.rst", "functional/ivy/general/fourier_encode/fourier_encode_container.rst", "functional/ivy/general/fourier_encode/fourier_encode_functional.rst", "functional/ivy/general/fourier_encode/static_fourier_encode_container.rst", "functional/ivy/general/function_supported_devices_and_dtypes.rst", "functional/ivy/general/function_unsupported_devices_and_dtypes.rst", "functional/ivy/general/gather.rst", "functional/ivy/general/gather/gather_array.rst", "functional/ivy/general/gather/gather_container.rst", "functional/ivy/general/gather/gather_functional.rst", "functional/ivy/general/gather/static_gather_container.rst", "functional/ivy/general/gather_nd.rst", "functional/ivy/general/gather_nd/gather_nd_array.rst", "functional/ivy/general/gather_nd/gather_nd_container.rst", "functional/ivy/general/gather_nd/gather_nd_functional.rst", "functional/ivy/general/gather_nd/static_gather_nd_container.rst", "functional/ivy/general/get_all_arrays_in_memory.rst", "functional/ivy/general/get_array_mode.rst", "functional/ivy/general/get_exception_trace_mode.rst", "functional/ivy/general/get_item.rst", "functional/ivy/general/get_min_base.rst", "functional/ivy/general/get_min_denominator.rst", "functional/ivy/general/get_nestable_mode.rst", "functional/ivy/general/get_num_dims.rst", "functional/ivy/general/get_num_dims/get_num_dims_array.rst", "functional/ivy/general/get_num_dims/get_num_dims_container.rst", "functional/ivy/general/get_num_dims/get_num_dims_functional.rst", "functional/ivy/general/get_num_dims/static_get_num_dims_container.rst", "functional/ivy/general/get_queue_timeout.rst", "functional/ivy/general/get_referrers_recursive.rst", "functional/ivy/general/get_tmp_dir.rst", "functional/ivy/general/has_nans.rst", "functional/ivy/general/has_nans/has_nans_array.rst", "functional/ivy/general/has_nans/has_nans_container.rst", "functional/ivy/general/has_nans/has_nans_functional.rst", "functional/ivy/general/has_nans/static_has_nans_container.rst", "functional/ivy/general/inplace_arrays_supported.rst", "functional/ivy/general/inplace_decrement.rst", "functional/ivy/general/inplace_decrement/inplace_decrement_array.rst", "functional/ivy/general/inplace_decrement/inplace_decrement_container.rst", "functional/ivy/general/inplace_decrement/inplace_decrement_functional.rst", "functional/ivy/general/inplace_decrement/static_inplace_decrement_container.rst", "functional/ivy/general/inplace_increment.rst", "functional/ivy/general/inplace_increment/inplace_increment_array.rst", "functional/ivy/general/inplace_increment/inplace_increment_container.rst", "functional/ivy/general/inplace_increment/inplace_increment_functional.rst", "functional/ivy/general/inplace_increment/static_inplace_increment_container.rst", "functional/ivy/general/inplace_update.rst", "functional/ivy/general/inplace_update/inplace_update_array.rst", "functional/ivy/general/inplace_update/inplace_update_container.rst", "functional/ivy/general/inplace_update/inplace_update_functional.rst", "functional/ivy/general/inplace_update/static_inplace_update_container.rst", "functional/ivy/general/inplace_variables_supported.rst", "functional/ivy/general/is_array.rst", "functional/ivy/general/is_array/is_array_array.rst", "functional/ivy/general/is_array/is_array_container.rst", "functional/ivy/general/is_array/is_array_functional.rst", "functional/ivy/general/is_array/static_is_array_container.rst", "functional/ivy/general/is_ivy_array.rst", "functional/ivy/general/is_ivy_array/is_ivy_array_array.rst", "functional/ivy/general/is_ivy_array/is_ivy_array_container.rst", "functional/ivy/general/is_ivy_array/is_ivy_array_functional.rst", "functional/ivy/general/is_ivy_array/static_is_ivy_array_container.rst", "functional/ivy/general/is_ivy_container.rst", "functional/ivy/general/is_ivy_container/is_ivy_container_array.rst", "functional/ivy/general/is_ivy_container/is_ivy_container_container.rst", "functional/ivy/general/is_ivy_container/is_ivy_container_functional.rst", "functional/ivy/general/is_ivy_container/static_is_ivy_container_container.rst", "functional/ivy/general/is_native_array.rst", "functional/ivy/general/is_native_array/is_native_array_array.rst", "functional/ivy/general/is_native_array/is_native_array_container.rst", "functional/ivy/general/is_native_array/is_native_array_functional.rst", "functional/ivy/general/is_native_array/static_is_native_array_container.rst", "functional/ivy/general/isscalar.rst", "functional/ivy/general/match_kwargs.rst", "functional/ivy/general/multiprocessing.rst", "functional/ivy/general/num_arrays_in_memory.rst", "functional/ivy/general/print_all_arrays_in_memory.rst", "functional/ivy/general/scatter_flat.rst", "functional/ivy/general/scatter_flat/scatter_flat_array.rst", "functional/ivy/general/scatter_flat/scatter_flat_container.rst", "functional/ivy/general/scatter_flat/scatter_flat_functional.rst", "functional/ivy/general/scatter_flat/static_scatter_flat_container.rst", "functional/ivy/general/scatter_nd.rst", "functional/ivy/general/scatter_nd/scatter_nd_array.rst", "functional/ivy/general/scatter_nd/scatter_nd_container.rst", "functional/ivy/general/scatter_nd/scatter_nd_functional.rst", "functional/ivy/general/scatter_nd/static_scatter_nd_container.rst", "functional/ivy/general/set_array_mode.rst", "functional/ivy/general/set_exception_trace_mode.rst", "functional/ivy/general/set_min_base.rst", "functional/ivy/general/set_min_denominator.rst", "functional/ivy/general/set_nestable_mode.rst", "functional/ivy/general/set_queue_timeout.rst", "functional/ivy/general/set_shape_array_mode.rst", "functional/ivy/general/set_tmp_dir.rst", "functional/ivy/general/shape.rst", "functional/ivy/general/shape_array_mode.rst", "functional/ivy/general/stable_divide.rst", "functional/ivy/general/stable_divide/stable_divide_array.rst", "functional/ivy/general/stable_divide/stable_divide_container.rst", "functional/ivy/general/stable_divide/stable_divide_functional.rst", "functional/ivy/general/stable_divide/static_stable_divide_container.rst", "functional/ivy/general/stable_pow.rst", "functional/ivy/general/stable_pow/stable_pow_array.rst", "functional/ivy/general/stable_pow/stable_pow_container.rst", "functional/ivy/general/stable_pow/stable_pow_functional.rst", "functional/ivy/general/stable_pow/static_stable_pow_container.rst", "functional/ivy/general/supports_inplace_updates.rst", "functional/ivy/general/supports_inplace_updates/static_supports_inplace_updates_container.rst", "functional/ivy/general/supports_inplace_updates/supports_inplace_updates_array.rst", "functional/ivy/general/supports_inplace_updates/supports_inplace_updates_container.rst", "functional/ivy/general/supports_inplace_updates/supports_inplace_updates_functional.rst", "functional/ivy/general/to_ivy_shape.rst", "functional/ivy/general/to_list.rst", "functional/ivy/general/to_list/static_to_list_container.rst", "functional/ivy/general/to_list/to_list_array.rst", "functional/ivy/general/to_list/to_list_container.rst", "functional/ivy/general/to_list/to_list_functional.rst", "functional/ivy/general/to_native_shape.rst", "functional/ivy/general/to_numpy.rst", "functional/ivy/general/to_numpy/static_to_numpy_container.rst", "functional/ivy/general/to_numpy/to_numpy_array.rst", "functional/ivy/general/to_numpy/to_numpy_container.rst", "functional/ivy/general/to_numpy/to_numpy_functional.rst", "functional/ivy/general/to_scalar.rst", "functional/ivy/general/to_scalar/static_to_scalar_container.rst", "functional/ivy/general/to_scalar/to_scalar_array.rst", "functional/ivy/general/to_scalar/to_scalar_container.rst", "functional/ivy/general/to_scalar/to_scalar_functional.rst", "functional/ivy/general/try_else_none.rst", "functional/ivy/general/unset_array_mode.rst", "functional/ivy/general/unset_exception_trace_mode.rst", "functional/ivy/general/unset_nestable_mode.rst", "functional/ivy/general/unset_queue_timeout.rst", "functional/ivy/general/unset_shape_array_mode.rst", "functional/ivy/general/value_is_nan.rst", "functional/ivy/general/value_is_nan/static_value_is_nan_container.rst", "functional/ivy/general/value_is_nan/value_is_nan_array.rst", "functional/ivy/general/value_is_nan/value_is_nan_container.rst", "functional/ivy/general/value_is_nan/value_is_nan_functional.rst", "functional/ivy/general/vmap.rst", "functional/ivy/gradients.rst", "functional/ivy/gradients/adam_step.rst", "functional/ivy/gradients/adam_step/adam_step_array.rst", "functional/ivy/gradients/adam_step/adam_step_container.rst", "functional/ivy/gradients/adam_step/adam_step_functional.rst", "functional/ivy/gradients/adam_update.rst", "functional/ivy/gradients/adam_update/adam_update_array.rst", "functional/ivy/gradients/adam_update/adam_update_container.rst", "functional/ivy/gradients/adam_update/adam_update_functional.rst", "functional/ivy/gradients/execute_with_gradients.rst", "functional/ivy/gradients/grad.rst", "functional/ivy/gradients/gradient_descent_update.rst", "functional/ivy/gradients/gradient_descent_update/gradient_descent_update_array.rst", "functional/ivy/gradients/gradient_descent_update/gradient_descent_update_container.rst", "functional/ivy/gradients/gradient_descent_update/gradient_descent_update_functional.rst", "functional/ivy/gradients/is_variable.rst", "functional/ivy/gradients/is_variable/is_variable_container.rst", "functional/ivy/gradients/is_variable/is_variable_functional.rst", "functional/ivy/gradients/is_variable/static_is_variable_container.rst", "functional/ivy/gradients/jac.rst", "functional/ivy/gradients/lamb_update.rst", "functional/ivy/gradients/lamb_update/lamb_update_array.rst", "functional/ivy/gradients/lamb_update/lamb_update_container.rst", "functional/ivy/gradients/lamb_update/lamb_update_functional.rst", "functional/ivy/gradients/lars_update.rst", "functional/ivy/gradients/lars_update/lars_update_array.rst", "functional/ivy/gradients/lars_update/lars_update_container.rst", "functional/ivy/gradients/lars_update/lars_update_functional.rst", "functional/ivy/gradients/optimizer_update.rst", "functional/ivy/gradients/optimizer_update/optimizer_update_array.rst", "functional/ivy/gradients/optimizer_update/optimizer_update_container.rst", "functional/ivy/gradients/optimizer_update/optimizer_update_functional.rst", "functional/ivy/gradients/set_with_grads.rst", "functional/ivy/gradients/stop_gradient.rst", "functional/ivy/gradients/stop_gradient/static_stop_gradient_container.rst", "functional/ivy/gradients/stop_gradient/stop_gradient_array.rst", "functional/ivy/gradients/stop_gradient/stop_gradient_container.rst", "functional/ivy/gradients/stop_gradient/stop_gradient_functional.rst", "functional/ivy/gradients/unset_with_grads.rst", "functional/ivy/gradients/value_and_grad.rst", "functional/ivy/gradients/variable.rst", "functional/ivy/gradients/variable/static_variable_container.rst", "functional/ivy/gradients/variable/variable_array.rst", "functional/ivy/gradients/variable/variable_container.rst", "functional/ivy/gradients/variable/variable_functional.rst", "functional/ivy/gradients/variable_data.rst", "functional/ivy/gradients/variable_data/static_variable_data_container.rst", "functional/ivy/gradients/variable_data/variable_data_array.rst", "functional/ivy/gradients/variable_data/variable_data_container.rst", "functional/ivy/gradients/variable_data/variable_data_functional.rst", "functional/ivy/gradients/with_grads.rst", "functional/ivy/layers.rst", "functional/ivy/layers/conv.rst", "functional/ivy/layers/conv1d.rst", "functional/ivy/layers/conv1d/conv1d_array.rst", "functional/ivy/layers/conv1d/conv1d_container.rst", "functional/ivy/layers/conv1d/conv1d_functional.rst", "functional/ivy/layers/conv1d/static_conv1d_container.rst", "functional/ivy/layers/conv1d_transpose.rst", "functional/ivy/layers/conv1d_transpose/conv1d_transpose_array.rst", "functional/ivy/layers/conv1d_transpose/conv1d_transpose_container.rst", "functional/ivy/layers/conv1d_transpose/conv1d_transpose_functional.rst", "functional/ivy/layers/conv1d_transpose/static_conv1d_transpose_container.rst", "functional/ivy/layers/conv2d.rst", "functional/ivy/layers/conv2d/conv2d_array.rst", "functional/ivy/layers/conv2d/conv2d_container.rst", "functional/ivy/layers/conv2d/conv2d_functional.rst", "functional/ivy/layers/conv2d/static_conv2d_container.rst", "functional/ivy/layers/conv2d_transpose.rst", "functional/ivy/layers/conv2d_transpose/conv2d_transpose_container.rst", "functional/ivy/layers/conv2d_transpose/conv2d_transpose_functional.rst", "functional/ivy/layers/conv2d_transpose/static_conv2d_transpose_container.rst", "functional/ivy/layers/conv3d.rst", "functional/ivy/layers/conv3d/conv3d_array.rst", "functional/ivy/layers/conv3d/conv3d_container.rst", "functional/ivy/layers/conv3d/conv3d_functional.rst", "functional/ivy/layers/conv3d/static_conv3d_container.rst", "functional/ivy/layers/conv3d_transpose.rst", "functional/ivy/layers/conv3d_transpose/conv3d_transpose_array.rst", "functional/ivy/layers/conv3d_transpose/conv3d_transpose_container.rst", "functional/ivy/layers/conv3d_transpose/conv3d_transpose_functional.rst", "functional/ivy/layers/conv3d_transpose/static_conv3d_transpose_container.rst", "functional/ivy/layers/conv_general_dilated.rst", "functional/ivy/layers/conv_general_transpose.rst", "functional/ivy/layers/deconv_length.rst", "functional/ivy/layers/depthwise_conv2d.rst", "functional/ivy/layers/depthwise_conv2d/depthwise_conv2d_array.rst", "functional/ivy/layers/depthwise_conv2d/depthwise_conv2d_container.rst", "functional/ivy/layers/depthwise_conv2d/depthwise_conv2d_functional.rst", "functional/ivy/layers/depthwise_conv2d/static_depthwise_conv2d_container.rst", "functional/ivy/layers/dropout.rst", "functional/ivy/layers/dropout/dropout_array.rst", "functional/ivy/layers/dropout/dropout_container.rst", "functional/ivy/layers/dropout/dropout_functional.rst", "functional/ivy/layers/dropout/static_dropout_container.rst", "functional/ivy/layers/get_x_data_format.rst", "functional/ivy/layers/handle_padding.rst", "functional/ivy/layers/linear.rst", "functional/ivy/layers/linear/linear_array.rst", "functional/ivy/layers/linear/linear_container.rst", "functional/ivy/layers/linear/linear_functional.rst", "functional/ivy/layers/linear/static_linear_container.rst", "functional/ivy/layers/lstm_update.rst", "functional/ivy/layers/lstm_update/lstm_update_array.rst", "functional/ivy/layers/lstm_update/lstm_update_container.rst", "functional/ivy/layers/lstm_update/lstm_update_functional.rst", "functional/ivy/layers/lstm_update/static_lstm_update_container.rst", "functional/ivy/layers/multi_head_attention.rst", "functional/ivy/layers/multi_head_attention/multi_head_attention_array.rst", "functional/ivy/layers/multi_head_attention/multi_head_attention_container.rst", "functional/ivy/layers/multi_head_attention/multi_head_attention_functional.rst", "functional/ivy/layers/multi_head_attention/static_multi_head_attention_container.rst", "functional/ivy/layers/scaled_dot_product_attention.rst", "functional/ivy/layers/scaled_dot_product_attention/scaled_dot_product_attention_array.rst", "functional/ivy/layers/scaled_dot_product_attention/scaled_dot_product_attention_container.rst", "functional/ivy/layers/scaled_dot_product_attention/scaled_dot_product_attention_functional.rst", "functional/ivy/layers/scaled_dot_product_attention/static_scaled_dot_product_attention_container.rst", "functional/ivy/linear_algebra.rst", "functional/ivy/linear_algebra/cholesky.rst", "functional/ivy/linear_algebra/cholesky/cholesky_array.rst", "functional/ivy/linear_algebra/cholesky/cholesky_container.rst", "functional/ivy/linear_algebra/cholesky/cholesky_functional.rst", "functional/ivy/linear_algebra/cholesky/static_cholesky_container.rst", "functional/ivy/linear_algebra/cross.rst", "functional/ivy/linear_algebra/cross/cross_array.rst", "functional/ivy/linear_algebra/cross/cross_container.rst", "functional/ivy/linear_algebra/cross/cross_functional.rst", "functional/ivy/linear_algebra/cross/static_cross_container.rst", "functional/ivy/linear_algebra/det.rst", "functional/ivy/linear_algebra/det/det_array.rst", "functional/ivy/linear_algebra/det/det_container.rst", "functional/ivy/linear_algebra/det/det_functional.rst", "functional/ivy/linear_algebra/det/static_det_container.rst", "functional/ivy/linear_algebra/diag.rst", "functional/ivy/linear_algebra/diagonal.rst", "functional/ivy/linear_algebra/diagonal/diagonal_array.rst", "functional/ivy/linear_algebra/diagonal/diagonal_container.rst", "functional/ivy/linear_algebra/diagonal/diagonal_functional.rst", "functional/ivy/linear_algebra/diagonal/static_diagonal_container.rst", "functional/ivy/linear_algebra/eigh.rst", "functional/ivy/linear_algebra/eigh/eigh_array.rst", "functional/ivy/linear_algebra/eigh/eigh_container.rst", "functional/ivy/linear_algebra/eigh/eigh_functional.rst", "functional/ivy/linear_algebra/eigvalsh.rst", "functional/ivy/linear_algebra/eigvalsh/eigvalsh_array.rst", "functional/ivy/linear_algebra/eigvalsh/eigvalsh_functional.rst", "functional/ivy/linear_algebra/inner.rst", "functional/ivy/linear_algebra/inner/inner_array.rst", "functional/ivy/linear_algebra/inner/inner_container.rst", "functional/ivy/linear_algebra/inner/inner_functional.rst", "functional/ivy/linear_algebra/inner/static_inner_container.rst", "functional/ivy/linear_algebra/inv.rst", "functional/ivy/linear_algebra/inv/inv_array.rst", "functional/ivy/linear_algebra/inv/inv_container.rst", "functional/ivy/linear_algebra/inv/inv_functional.rst", "functional/ivy/linear_algebra/inv/static_inv_container.rst", "functional/ivy/linear_algebra/matmul.rst", "functional/ivy/linear_algebra/matmul/matmul_array.rst", "functional/ivy/linear_algebra/matmul/matmul_container.rst", "functional/ivy/linear_algebra/matmul/matmul_functional.rst", "functional/ivy/linear_algebra/matmul/static_matmul_container.rst", "functional/ivy/linear_algebra/matrix_norm.rst", "functional/ivy/linear_algebra/matrix_norm/matrix_norm_array.rst", "functional/ivy/linear_algebra/matrix_norm/matrix_norm_container.rst", "functional/ivy/linear_algebra/matrix_norm/matrix_norm_functional.rst", "functional/ivy/linear_algebra/matrix_norm/static_matrix_norm_container.rst", "functional/ivy/linear_algebra/matrix_power.rst", "functional/ivy/linear_algebra/matrix_power/matrix_power_container.rst", "functional/ivy/linear_algebra/matrix_power/matrix_power_functional.rst", "functional/ivy/linear_algebra/matrix_power/static_matrix_power_container.rst", "functional/ivy/linear_algebra/matrix_rank.rst", "functional/ivy/linear_algebra/matrix_rank/matrix_rank_array.rst", "functional/ivy/linear_algebra/matrix_rank/matrix_rank_container.rst", "functional/ivy/linear_algebra/matrix_rank/matrix_rank_functional.rst", "functional/ivy/linear_algebra/matrix_rank/static_matrix_rank_container.rst", "functional/ivy/linear_algebra/matrix_transpose.rst", "functional/ivy/linear_algebra/matrix_transpose/matrix_transpose_array.rst", "functional/ivy/linear_algebra/matrix_transpose/matrix_transpose_container.rst", "functional/ivy/linear_algebra/matrix_transpose/matrix_transpose_functional.rst", "functional/ivy/linear_algebra/matrix_transpose/static_matrix_transpose_container.rst", "functional/ivy/linear_algebra/outer.rst", "functional/ivy/linear_algebra/outer/outer_array.rst", "functional/ivy/linear_algebra/outer/outer_container.rst", "functional/ivy/linear_algebra/outer/outer_functional.rst", "functional/ivy/linear_algebra/outer/static_outer_container.rst", "functional/ivy/linear_algebra/pinv.rst", "functional/ivy/linear_algebra/pinv/pinv_array.rst", "functional/ivy/linear_algebra/pinv/pinv_container.rst", "functional/ivy/linear_algebra/pinv/pinv_functional.rst", "functional/ivy/linear_algebra/pinv/static_pinv_container.rst", "functional/ivy/linear_algebra/qr.rst", "functional/ivy/linear_algebra/qr/qr_array.rst", "functional/ivy/linear_algebra/qr/qr_container.rst", "functional/ivy/linear_algebra/qr/qr_functional.rst", "functional/ivy/linear_algebra/qr/static_qr_container.rst", "functional/ivy/linear_algebra/slogdet.rst", "functional/ivy/linear_algebra/slogdet/slogdet_array.rst", "functional/ivy/linear_algebra/slogdet/slogdet_container.rst", "functional/ivy/linear_algebra/slogdet/slogdet_functional.rst", "functional/ivy/linear_algebra/slogdet/static_slogdet_container.rst", "functional/ivy/linear_algebra/solve.rst", "functional/ivy/linear_algebra/solve/solve_array.rst", "functional/ivy/linear_algebra/solve/solve_container.rst", "functional/ivy/linear_algebra/solve/solve_functional.rst", "functional/ivy/linear_algebra/solve/static_solve_container.rst", "functional/ivy/linear_algebra/svd.rst", "functional/ivy/linear_algebra/svd/static_svd_container.rst", "functional/ivy/linear_algebra/svd/svd_array.rst", "functional/ivy/linear_algebra/svd/svd_container.rst", "functional/ivy/linear_algebra/svd/svd_functional.rst", "functional/ivy/linear_algebra/svdvals.rst", "functional/ivy/linear_algebra/svdvals/static_svdvals_container.rst", "functional/ivy/linear_algebra/svdvals/svdvals_array.rst", "functional/ivy/linear_algebra/svdvals/svdvals_container.rst", "functional/ivy/linear_algebra/svdvals/svdvals_functional.rst", "functional/ivy/linear_algebra/tensordot.rst", "functional/ivy/linear_algebra/tensordot/static_tensordot_container.rst", "functional/ivy/linear_algebra/tensordot/tensordot_array.rst", "functional/ivy/linear_algebra/tensordot/tensordot_container.rst", "functional/ivy/linear_algebra/tensordot/tensordot_functional.rst", "functional/ivy/linear_algebra/trace.rst", "functional/ivy/linear_algebra/trace/static_trace_container.rst", "functional/ivy/linear_algebra/trace/trace_array.rst", "functional/ivy/linear_algebra/trace/trace_container.rst", "functional/ivy/linear_algebra/trace/trace_functional.rst", "functional/ivy/linear_algebra/vander.rst", "functional/ivy/linear_algebra/vander/static_vander_container.rst", "functional/ivy/linear_algebra/vander/vander_array.rst", "functional/ivy/linear_algebra/vander/vander_container.rst", "functional/ivy/linear_algebra/vander/vander_functional.rst", "functional/ivy/linear_algebra/vecdot.rst", "functional/ivy/linear_algebra/vecdot/static_vecdot_container.rst", "functional/ivy/linear_algebra/vecdot/vecdot_array.rst", "functional/ivy/linear_algebra/vecdot/vecdot_container.rst", "functional/ivy/linear_algebra/vecdot/vecdot_functional.rst", "functional/ivy/linear_algebra/vector_norm.rst", "functional/ivy/linear_algebra/vector_norm/static_vector_norm_container.rst", "functional/ivy/linear_algebra/vector_norm/vector_norm_array.rst", "functional/ivy/linear_algebra/vector_norm/vector_norm_container.rst", "functional/ivy/linear_algebra/vector_norm/vector_norm_functional.rst", "functional/ivy/linear_algebra/vector_to_skew_symmetric_matrix.rst", "functional/ivy/linear_algebra/vector_to_skew_symmetric_matrix/static_vector_to_skew_symmetric_matrix_container.rst", "functional/ivy/linear_algebra/vector_to_skew_symmetric_matrix/vector_to_skew_symmetric_matrix_array.rst", "functional/ivy/linear_algebra/vector_to_skew_symmetric_matrix/vector_to_skew_symmetric_matrix_container.rst", "functional/ivy/linear_algebra/vector_to_skew_symmetric_matrix/vector_to_skew_symmetric_matrix_functional.rst", "functional/ivy/losses.rst", "functional/ivy/losses/binary_cross_entropy.rst", "functional/ivy/losses/binary_cross_entropy/binary_cross_entropy_array.rst", "functional/ivy/losses/binary_cross_entropy/binary_cross_entropy_container.rst", "functional/ivy/losses/binary_cross_entropy/binary_cross_entropy_functional.rst", "functional/ivy/losses/binary_cross_entropy/static_binary_cross_entropy_container.rst", "functional/ivy/losses/cross_entropy.rst", "functional/ivy/losses/cross_entropy/cross_entropy_array.rst", "functional/ivy/losses/cross_entropy/cross_entropy_container.rst", "functional/ivy/losses/cross_entropy/cross_entropy_functional.rst", "functional/ivy/losses/cross_entropy/static_cross_entropy_container.rst", "functional/ivy/losses/sparse_cross_entropy.rst", "functional/ivy/losses/sparse_cross_entropy/sparse_cross_entropy_array.rst", "functional/ivy/losses/sparse_cross_entropy/sparse_cross_entropy_container.rst", "functional/ivy/losses/sparse_cross_entropy/sparse_cross_entropy_functional.rst", "functional/ivy/losses/sparse_cross_entropy/static_sparse_cross_entropy_container.rst", "functional/ivy/manipulation.rst", "functional/ivy/manipulation/clip.rst", "functional/ivy/manipulation/clip/clip_array.rst", "functional/ivy/manipulation/clip/clip_container.rst", "functional/ivy/manipulation/clip/clip_functional.rst", "functional/ivy/manipulation/clip/static_clip_container.rst", "functional/ivy/manipulation/concat.rst", "functional/ivy/manipulation/concat/concat_array.rst", "functional/ivy/manipulation/concat/concat_container.rst", "functional/ivy/manipulation/concat/concat_functional.rst", "functional/ivy/manipulation/concat/static_concat_container.rst", "functional/ivy/manipulation/constant_pad.rst", "functional/ivy/manipulation/constant_pad/constant_pad_array.rst", "functional/ivy/manipulation/constant_pad/constant_pad_container.rst", "functional/ivy/manipulation/constant_pad/constant_pad_functional.rst", "functional/ivy/manipulation/constant_pad/static_constant_pad_container.rst", "functional/ivy/manipulation/expand_dims.rst", "functional/ivy/manipulation/expand_dims/expand_dims_array.rst", "functional/ivy/manipulation/expand_dims/expand_dims_container.rst", "functional/ivy/manipulation/expand_dims/expand_dims_functional.rst", "functional/ivy/manipulation/expand_dims/static_expand_dims_container.rst", "functional/ivy/manipulation/flip.rst", "functional/ivy/manipulation/flip/flip_array.rst", "functional/ivy/manipulation/flip/flip_container.rst", "functional/ivy/manipulation/flip/flip_functional.rst", "functional/ivy/manipulation/flip/static_flip_container.rst", "functional/ivy/manipulation/permute_dims.rst", "functional/ivy/manipulation/permute_dims/permute_dims_array.rst", "functional/ivy/manipulation/permute_dims/permute_dims_container.rst", "functional/ivy/manipulation/permute_dims/permute_dims_functional.rst", "functional/ivy/manipulation/permute_dims/static_permute_dims_container.rst", "functional/ivy/manipulation/repeat.rst", "functional/ivy/manipulation/repeat/repeat_array.rst", "functional/ivy/manipulation/repeat/repeat_container.rst", "functional/ivy/manipulation/repeat/repeat_functional.rst", "functional/ivy/manipulation/repeat/static_repeat_container.rst", "functional/ivy/manipulation/reshape.rst", "functional/ivy/manipulation/reshape/reshape_array.rst", "functional/ivy/manipulation/reshape/reshape_container.rst", "functional/ivy/manipulation/reshape/reshape_functional.rst", "functional/ivy/manipulation/reshape/static_reshape_container.rst", "functional/ivy/manipulation/roll.rst", "functional/ivy/manipulation/roll/roll_array.rst", "functional/ivy/manipulation/roll/roll_container.rst", "functional/ivy/manipulation/roll/roll_functional.rst", "functional/ivy/manipulation/roll/static_roll_container.rst", "functional/ivy/manipulation/split.rst", "functional/ivy/manipulation/split/split_array.rst", "functional/ivy/manipulation/split/split_container.rst", "functional/ivy/manipulation/split/split_functional.rst", "functional/ivy/manipulation/split/static_split_container.rst", "functional/ivy/manipulation/squeeze.rst", "functional/ivy/manipulation/squeeze/squeeze_array.rst", "functional/ivy/manipulation/squeeze/squeeze_container.rst", "functional/ivy/manipulation/squeeze/squeeze_functional.rst", "functional/ivy/manipulation/squeeze/static_squeeze_container.rst", "functional/ivy/manipulation/stack.rst", "functional/ivy/manipulation/stack/stack_array.rst", "functional/ivy/manipulation/stack/stack_container.rst", "functional/ivy/manipulation/stack/stack_functional.rst", "functional/ivy/manipulation/stack/static_stack_container.rst", "functional/ivy/manipulation/swapaxes.rst", "functional/ivy/manipulation/swapaxes/static_swapaxes_container.rst", "functional/ivy/manipulation/swapaxes/swapaxes_array.rst", "functional/ivy/manipulation/swapaxes/swapaxes_container.rst", "functional/ivy/manipulation/swapaxes/swapaxes_functional.rst", "functional/ivy/manipulation/tile.rst", "functional/ivy/manipulation/tile/static_tile_container.rst", "functional/ivy/manipulation/tile/tile_array.rst", "functional/ivy/manipulation/tile/tile_container.rst", "functional/ivy/manipulation/tile/tile_functional.rst", "functional/ivy/manipulation/unstack.rst", "functional/ivy/manipulation/unstack/static_unstack_container.rst", "functional/ivy/manipulation/unstack/unstack_array.rst", "functional/ivy/manipulation/unstack/unstack_container.rst", "functional/ivy/manipulation/unstack/unstack_functional.rst", "functional/ivy/manipulation/zero_pad.rst", "functional/ivy/manipulation/zero_pad/static_zero_pad_container.rst", "functional/ivy/manipulation/zero_pad/zero_pad_array.rst", "functional/ivy/manipulation/zero_pad/zero_pad_container.rst", "functional/ivy/manipulation/zero_pad/zero_pad_functional.rst", "functional/ivy/meta.rst", "functional/ivy/meta/fomaml_step.rst", "functional/ivy/meta/maml_step.rst", "functional/ivy/meta/reptile_step.rst", "functional/ivy/nest.rst", "functional/ivy/nest/all_nested_indices.rst", "functional/ivy/nest/copy_nest.rst", "functional/ivy/nest/index_nest.rst", "functional/ivy/nest/insert_into_nest_at_index.rst", "functional/ivy/nest/insert_into_nest_at_indices.rst", "functional/ivy/nest/map.rst", "functional/ivy/nest/map_nest_at_index.rst", "functional/ivy/nest/map_nest_at_indices.rst", "functional/ivy/nest/multi_index_nest.rst", "functional/ivy/nest/nested_any.rst", "functional/ivy/nest/nested_argwhere.rst", "functional/ivy/nest/nested_map.rst", "functional/ivy/nest/nested_multi_map.rst", "functional/ivy/nest/prune_nest_at_index.rst", "functional/ivy/nest/prune_nest_at_indices.rst", "functional/ivy/nest/set_nest_at_index.rst", "functional/ivy/nest/set_nest_at_indices.rst", "functional/ivy/norms.rst", "functional/ivy/norms/layer_norm.rst", "functional/ivy/norms/layer_norm/layer_norm_array.rst", "functional/ivy/norms/layer_norm/layer_norm_container.rst", "functional/ivy/norms/layer_norm/layer_norm_functional.rst", "functional/ivy/random.rst", "functional/ivy/random/multinomial.rst", "functional/ivy/random/multinomial/multinomial_array.rst", "functional/ivy/random/multinomial/multinomial_container.rst", "functional/ivy/random/multinomial/multinomial_functional.rst", "functional/ivy/random/multinomial/static_multinomial_container.rst", "functional/ivy/random/randint.rst", "functional/ivy/random/randint/randint_array.rst", "functional/ivy/random/randint/randint_container.rst", "functional/ivy/random/randint/randint_functional.rst", "functional/ivy/random/randint/static_randint_container.rst", "functional/ivy/random/random_normal.rst", "functional/ivy/random/random_normal/random_normal_array.rst", "functional/ivy/random/random_normal/random_normal_container.rst", "functional/ivy/random/random_normal/random_normal_functional.rst", "functional/ivy/random/random_normal/static_random_normal_container.rst", "functional/ivy/random/random_uniform.rst", "functional/ivy/random/random_uniform/random_uniform_array.rst", "functional/ivy/random/random_uniform/random_uniform_container.rst", "functional/ivy/random/random_uniform/random_uniform_functional.rst", "functional/ivy/random/random_uniform/static_random_uniform_container.rst", "functional/ivy/random/seed.rst", "functional/ivy/random/shuffle.rst", "functional/ivy/random/shuffle/shuffle_array.rst", "functional/ivy/random/shuffle/shuffle_container.rst", "functional/ivy/random/shuffle/shuffle_functional.rst", "functional/ivy/random/shuffle/static_shuffle_container.rst", "functional/ivy/searching.rst", "functional/ivy/searching/argmax.rst", "functional/ivy/searching/argmax/argmax_array.rst", "functional/ivy/searching/argmax/argmax_container.rst", "functional/ivy/searching/argmax/argmax_functional.rst", "functional/ivy/searching/argmax/static_argmax_container.rst", "functional/ivy/searching/argmin.rst", "functional/ivy/searching/argmin/argmin_array.rst", "functional/ivy/searching/argmin/argmin_container.rst", "functional/ivy/searching/argmin/argmin_functional.rst", "functional/ivy/searching/argmin/static_argmin_container.rst", "functional/ivy/searching/argwhere.rst", "functional/ivy/searching/argwhere/argwhere_array.rst", "functional/ivy/searching/argwhere/argwhere_container.rst", "functional/ivy/searching/argwhere/argwhere_functional.rst", "functional/ivy/searching/argwhere/static_argwhere_container.rst", "functional/ivy/searching/nonzero.rst", "functional/ivy/searching/nonzero/nonzero_array.rst", "functional/ivy/searching/nonzero/nonzero_container.rst", "functional/ivy/searching/nonzero/nonzero_functional.rst", "functional/ivy/searching/nonzero/static_nonzero_container.rst", "functional/ivy/searching/where.rst", "functional/ivy/searching/where/static_where_container.rst", "functional/ivy/searching/where/where_array.rst", "functional/ivy/searching/where/where_container.rst", "functional/ivy/searching/where/where_functional.rst", "functional/ivy/set.rst", "functional/ivy/set/unique_all.rst", "functional/ivy/set/unique_all/static_unique_all_container.rst", "functional/ivy/set/unique_all/unique_all_array.rst", "functional/ivy/set/unique_all/unique_all_container.rst", "functional/ivy/set/unique_all/unique_all_functional.rst", "functional/ivy/set/unique_counts.rst", "functional/ivy/set/unique_counts/static_unique_counts_container.rst", "functional/ivy/set/unique_counts/unique_counts_array.rst", "functional/ivy/set/unique_counts/unique_counts_container.rst", "functional/ivy/set/unique_counts/unique_counts_functional.rst", "functional/ivy/set/unique_inverse.rst", "functional/ivy/set/unique_inverse/static_unique_inverse_container.rst", "functional/ivy/set/unique_inverse/unique_inverse_array.rst", "functional/ivy/set/unique_inverse/unique_inverse_container.rst", "functional/ivy/set/unique_inverse/unique_inverse_functional.rst", "functional/ivy/set/unique_values.rst", "functional/ivy/set/unique_values/static_unique_values_container.rst", "functional/ivy/set/unique_values/unique_values_array.rst", "functional/ivy/set/unique_values/unique_values_container.rst", "functional/ivy/set/unique_values/unique_values_functional.rst", "functional/ivy/sorting.rst", "functional/ivy/sorting/argsort.rst", "functional/ivy/sorting/argsort/argsort_array.rst", "functional/ivy/sorting/argsort/argsort_container.rst", "functional/ivy/sorting/argsort/argsort_functional.rst", "functional/ivy/sorting/argsort/static_argsort_container.rst", "functional/ivy/sorting/searchsorted.rst", "functional/ivy/sorting/searchsorted/searchsorted_array.rst", "functional/ivy/sorting/searchsorted/searchsorted_container.rst", "functional/ivy/sorting/searchsorted/searchsorted_functional.rst", "functional/ivy/sorting/searchsorted/static_searchsorted_container.rst", "functional/ivy/sorting/sort.rst", "functional/ivy/sorting/sort/sort_array.rst", "functional/ivy/sorting/sort/sort_container.rst", "functional/ivy/sorting/sort/sort_functional.rst", "functional/ivy/sorting/sort/static_sort_container.rst", "functional/ivy/statistical.rst", "functional/ivy/statistical/cumprod.rst", "functional/ivy/statistical/cumprod/cumprod_array.rst", "functional/ivy/statistical/cumprod/cumprod_container.rst", "functional/ivy/statistical/cumprod/cumprod_functional.rst", "functional/ivy/statistical/cumprod/static_cumprod_container.rst", "functional/ivy/statistical/cumsum.rst", "functional/ivy/statistical/cumsum/cumsum_array.rst", "functional/ivy/statistical/cumsum/cumsum_container.rst", "functional/ivy/statistical/cumsum/cumsum_functional.rst", "functional/ivy/statistical/cumsum/static_cumsum_container.rst", "functional/ivy/statistical/einsum.rst", "functional/ivy/statistical/einsum/einsum_array.rst", "functional/ivy/statistical/einsum/einsum_container.rst", "functional/ivy/statistical/einsum/einsum_functional.rst", "functional/ivy/statistical/max.rst", "functional/ivy/statistical/max/max_array.rst", "functional/ivy/statistical/max/max_container.rst", "functional/ivy/statistical/max/max_functional.rst", "functional/ivy/statistical/mean.rst", "functional/ivy/statistical/mean/mean_array.rst", "functional/ivy/statistical/mean/mean_container.rst", "functional/ivy/statistical/mean/mean_functional.rst", "functional/ivy/statistical/min.rst", "functional/ivy/statistical/min/min_array.rst", "functional/ivy/statistical/min/min_container.rst", "functional/ivy/statistical/min/min_functional.rst", "functional/ivy/statistical/prod.rst", "functional/ivy/statistical/prod/prod_array.rst", "functional/ivy/statistical/prod/prod_container.rst", "functional/ivy/statistical/prod/prod_functional.rst", "functional/ivy/statistical/std.rst", "functional/ivy/statistical/std/std_array.rst", "functional/ivy/statistical/std/std_container.rst", "functional/ivy/statistical/std/std_functional.rst", "functional/ivy/statistical/sum.rst", "functional/ivy/statistical/sum/static_sum_container.rst", "functional/ivy/statistical/sum/sum_array.rst", "functional/ivy/statistical/sum/sum_container.rst", "functional/ivy/statistical/sum/sum_functional.rst", "functional/ivy/statistical/var.rst", "functional/ivy/statistical/var/static_var_container.rst", "functional/ivy/statistical/var/var_array.rst", "functional/ivy/statistical/var/var_container.rst", "functional/ivy/statistical/var/var_functional.rst", "functional/ivy/utility.rst", "functional/ivy/utility/all.rst", "functional/ivy/utility/all/all_array.rst", "functional/ivy/utility/all/all_container.rst", "functional/ivy/utility/all/all_functional.rst", "functional/ivy/utility/all/static_all_container.rst", "functional/ivy/utility/any.rst", "functional/ivy/utility/any/any_array.rst", "functional/ivy/utility/any/any_container.rst", "functional/ivy/utility/any/any_functional.rst", "functional/ivy/utility/any/static_any_container.rst", "glossary.rst", "index.rst", "index_append.rst", "index_prepend.rst", "inspection.rst", "inspection/add_array_specs.rst", "inspection/fn_array_spec.rst", "roadmap.rst", "stateful.rst", "stateful/activations.rst", "stateful/activations/GEGLU.rst", "stateful/activations/GELU.rst", "stateful/converters.rst", "stateful/converters/to_ivy_module.rst", "stateful/initializers.rst", "stateful/initializers/Constant.rst", "stateful/initializers/FirstLayerSiren.rst", "stateful/initializers/GlorotUniform.rst", "stateful/initializers/Initializer.rst", "stateful/initializers/KaimingNormal.rst", "stateful/initializers/Ones.rst", "stateful/initializers/Siren.rst", "stateful/initializers/Uniform.rst", "stateful/initializers/Zeros.rst", "stateful/layers.rst", "stateful/layers/Conv1D.rst", "stateful/layers/Conv1DTranspose.rst", "stateful/layers/Conv2D.rst", "stateful/layers/Conv2DTranspose.rst", "stateful/layers/Conv3D.rst", "stateful/layers/Conv3DTranspose.rst", "stateful/layers/DepthwiseConv2D.rst", "stateful/layers/Dropout.rst", "stateful/layers/LSTM.rst", "stateful/layers/Linear.rst", "stateful/layers/MultiHeadAttention.rst", "stateful/module.rst", "stateful/module/Module.rst", "stateful/norms.rst", "stateful/norms/LayerNorm.rst", "stateful/optimizers.rst", "stateful/optimizers/Adam.rst", "stateful/optimizers/LAMB.rst", "stateful/optimizers/LARS.rst", "stateful/optimizers/Optimizer.rst", "stateful/optimizers/SGD.rst", "stateful/sequential.rst", "stateful/sequential/Sequential.rst", "supported_frameworks.rst", "verbosity.rst", "verbosity/cprint.rst"], "titles": ["&lt;no title&gt;", "Assertions", "check_all", "check_all_or_any_fn", "check_any", "check_elem_in_list", "check_equal", "check_exists", "check_false", "check_fill_value_and_dtype_are_compatible", "check_gather_input_valid", "check_gather_nd_input_valid", "check_greater", "check_isinstance", "check_less", "check_shape", "check_true", "Backend handler", "choose_random_backend", "clear_backend_stack", "current_backend", "fn_name_from_version_specific_fn_name", "get_backend", "set_backend", "set_backend_to_specific_version", "unset_backend", "Background", "ML Explosion", "Standardization", "Why Unify?", "Contributing", "Applied Libraries", "Building the Docs", "Helpful Resources", "Open Tasks", "Setting Up", "The Basics", "Data classes", "Array", "Activations", "ArrayWithActivations", "Array", "&lt;no title&gt;", "Conversions", "args_to_ivy", "args_to_native", "to_ivy", "to_native", "Creation", "ArrayWithCreation", "Data type", "ArrayWithDataTypes", "Device", "ArrayWithDevice", "Elementwise", "ArrayWithElementwise", "Extensions", "ArrayWithExtensions", "General", "ArrayWithGeneral", "Gradients", "ArrayWithGradients", "Image", "ArrayWithImage", "Layers", "ArrayWithLayers", "Linear algebra", "ArrayWithLinearAlgebra", "Losses", "ArrayWithLosses", "Manipulation", "ArrayWithManipulation", "Norms", "ArrayWithNorms", "Random", "ArrayWithRandom", "Searching", "ArrayWithSearching", "Set", "ArrayWithSet", "Sorting", "ArrayWithSorting", "Statistical", "ArrayWithStatistical", "Utility", "ArrayWithUtility", "Wrapping", "add_ivy_array_instance_methods", "Container", "Activations", "ContainerWithActivations", "Base", "ContainerBase", "Container", "&lt;no title&gt;", "Conversions", "ContainerWithConversions", "Creation", "ContainerWithCreation", "Data type", "ContainerWithDataTypes", "Device", "ContainerWithDevice", "Elementwise", "ContainerWithElementwise", "Extensions", "ContainerWithExtensions", "General", "ContainerWithGeneral", "Gradients", "ContainerWithGradients", "Image", "ContainerWithImage", "Layers", "ContainerWithLayers", "Linear algebra", "ContainerWithLinearAlgebra", "Losses", "ContainerWithLosses", "Manipulation", "ContainerWithManipulation", "Norms", "ContainerWithNorms", "Random", "ContainerWithRandom", "Searching", "ContainerWithSearching", "Set", "ContainerWithSet", "Sorting", "ContainerWithSorting", "Statistical", "ContainerWithStatistical", "Utility", "ContainerWithUtility", "Wrapping", "add_ivy_container_instance_methods", "Deep Dive", "Array API Tests", "Arrays", "Backend Setting", "Containers", "Continuous Integration", "Data Types", "Devices", "Docstring Examples", "Docstrings", "Exception Handling", "Formatting", "Function Arguments", "Function Types", "Function Wrapping", "Inplace Updates", "Ivy Frontends", "Ivy Frontend Tests", "Ivy Tests", "Navigating the Code", "Superset Behaviour", "Design", "Building Blocks", "Ivy as a Framework", "Ivy Array", "Ivy Container", "Ivy Stateful API", "Ivy as a Transpiler", "Ivy", "Ivy builder", "Ivy ecosystem", "Ivy gym", "Ivy mech", "Ivy memory", "Ivy models", "Ivy robot", "Ivy vision", "Extensions", "Applied Libraries", "FAQ", "Func wrapper", "from_zero_dim_arrays_to_float", "handle_nestable", "handle_out_argument", "infer_device", "infer_dtype", "inputs_to_ivy_arrays", "inputs_to_native_arrays", "integer_arrays_to_float", "outputs_to_ivy_arrays", "to_native_arrays_and_back", "&lt;no title&gt;", "Activations", "gelu", "ivy.Array.gelu", "ivy.Container.gelu", "ivy.gelu", "ivy.Container.static_gelu", "leaky_relu", "ivy.Array.leaky_relu", "ivy.Container.leaky_relu", "ivy.leaky_relu", "ivy.Container.static_leaky_relu", "log_softmax", "ivy.Array.log_softmax", "ivy.Container.log_softmax", "ivy.log_softmax", "ivy.Container.static_log_softmax", "relu", "ivy.Array.relu", "ivy.Container.relu", "ivy.relu", "ivy.Container.static_relu", "sigmoid", "ivy.Array.sigmoid", "ivy.Container.sigmoid", "ivy.sigmoid", "ivy.Container.static_sigmoid", "softmax", "ivy.Array.softmax", "ivy.Container.softmax", "ivy.softmax", "ivy.Container.static_softmax", "softplus", "ivy.Array.softplus", "ivy.Container.softplus", "ivy.softplus", "ivy.Container.static_softplus", "Compilation", "compile", "Constants", "Creation", "NestedSequence", "arange", "ivy.arange", "ivy.Container.static_arange", "asarray", "ivy.Array.asarray", "ivy.asarray", "ivy.Container.static_asarray", "asarray_handle_nestable", "asarray_infer_device", "asarray_to_native_arrays_and_back", "copy_array", "ivy.Array.copy_array", "ivy.copy_array", "empty", "empty_like", "ivy.Array.empty_like", "ivy.Container.empty_like", "ivy.empty_like", "ivy.Container.static_empty_like", "eye", "ivy.eye", "ivy.Container.static_eye", "from_dlpack", "ivy.Array.from_dlpack", "ivy.Container.from_dlpack", "ivy.from_dlpack", "ivy.Container.static_from_dlpack", "full", "full_like", "ivy.Array.full_like", "ivy.Container.full_like", "ivy.full_like", "ivy.Container.static_full_like", "linspace", "ivy.linspace", "ivy.Container.static_linspace", "logspace", "ivy.logspace", "ivy.Container.static_logspace", "meshgrid", "ivy.Array.meshgrid", "ivy.Container.meshgrid", "ivy.meshgrid", "ivy.Container.static_meshgrid", "native_array", "ivy.Array.native_array", "ivy.Container.native_array", "ivy.native_array", "ivy.Container.static_native_array", "one_hot", "ivy.Array.one_hot", "ivy.Container.one_hot", "ivy.one_hot", "ivy.Container.static_one_hot", "ones", "ivy.ones", "ivy.Container.static_ones", "ones_like", "ivy.Array.ones_like", "ivy.Container.ones_like", "ivy.ones_like", "ivy.Container.static_ones_like", "tril", "ivy.Container.static_tril", "ivy.Array.tril", "ivy.Container.tril", "ivy.tril", "triu", "ivy.Container.static_triu", "ivy.Array.triu", "ivy.Container.triu", "ivy.triu", "zeros", "ivy.Container.static_zeros", "ivy.zeros", "zeros_like", "ivy.Container.static_zeros_like", "ivy.Array.zeros_like", "ivy.Container.zeros_like", "ivy.zeros_like", "Data type", "as_ivy_dtype", "as_native_dtype", "astype", "ivy.Array.astype", "ivy.Container.astype", "ivy.astype", "ivy.Container.static_astype", "broadcast_arrays", "ivy.Array.broadcast_arrays", "ivy.Container.broadcast_arrays", "ivy.broadcast_arrays", "ivy.Container.static_broadcast_arrays", "broadcast_to", "ivy.Array.broadcast_to", "ivy.Container.broadcast_to", "ivy.broadcast_to", "ivy.Container.static_broadcast_to", "can_cast", "ivy.Array.can_cast", "ivy.Container.can_cast", "ivy.can_cast", "ivy.Container.static_can_cast", "check_float", "closest_valid_dtype", "default_dtype", "default_float_dtype", "ivy.default_float_dtype", "ivy.Container.static_default_float_dtype", "default_int_dtype", "default_uint_dtype", "dtype", "ivy.Container.dtype", "ivy.dtype", "ivy.Container.static_dtype", "dtype_bits", "finfo", "ivy.Array.finfo", "ivy.Container.finfo", "ivy.finfo", "ivy.Container.static_finfo", "function_supported_dtypes", "ivy.function_supported_dtypes", "ivy.Container.static_function_supported_dtypes", "function_unsupported_dtypes", "ivy.function_unsupported_dtypes", "ivy.Container.static_function_unsupported_dtypes", "iinfo", "ivy.Array.iinfo", "ivy.Container.iinfo", "ivy.iinfo", "ivy.Container.static_iinfo", "infer_default_dtype", "invalid_dtype", "is_bool_dtype", "ivy.Array.is_bool_dtype", "ivy.Container.is_bool_dtype", "ivy.is_bool_dtype", "ivy.Container.static_is_bool_dtype", "is_float_dtype", "ivy.Array.is_float_dtype", "ivy.Container.is_float_dtype", "ivy.is_float_dtype", "ivy.Container.static_is_float_dtype", "is_int_dtype", "ivy.Array.is_int_dtype", "ivy.Container.is_int_dtype", "ivy.is_int_dtype", "ivy.Container.static_is_int_dtype", "is_uint_dtype", "ivy.Array.is_uint_dtype", "ivy.Container.is_uint_dtype", "ivy.is_uint_dtype", "ivy.Container.static_is_uint_dtype", "promote_types", "promote_types_of_inputs", "result_type", "ivy.Array.result_type", "ivy.Container.result_type", "ivy.result_type", "ivy.Container.static_result_type", "set_default_dtype", "set_default_float_dtype", "set_default_int_dtype", "set_default_uint_dtype", "type_promote_arrays", "unset_default_dtype", "unset_default_float_dtype", "unset_default_int_dtype", "unset_default_uint_dtype", "valid_dtype", "Device", "Profiler", "as_ivy_dev", "as_native_dev", "clear_mem_on_dev", "default_device", "dev", "ivy.Array.dev", "ivy.Container.dev", "ivy.dev", "ivy.Container.static_dev", "dev_util", "function_supported_devices", "function_unsupported_devices", "get_all_ivy_arrays_on_dev", "gpu_is_available", "num_cpu_cores", "num_gpus", "num_ivy_arrays_on_dev", "percent_used_mem_on_dev", "print_all_ivy_arrays_on_dev", "set_default_device", "set_split_factor", "split_factor", "split_func_call", "to_device", "ivy.Container.static_to_device", "ivy.Array.to_device", "ivy.Container.to_device", "ivy.to_device", "total_mem_on_dev", "tpu_is_available", "unset_default_device", "used_mem_on_dev", "Elementwise", "abs", "ivy.Array.abs", "ivy.Container.abs", "ivy.abs", "ivy.Container.static_abs", "acos", "ivy.Array.acos", "ivy.Container.acos", "ivy.acos", "ivy.Container.static_acos", "acosh", "ivy.Array.acosh", "ivy.Container.acosh", "ivy.acosh", "ivy.Container.static_acosh", "add", "ivy.Array.add", "ivy.Container.add", "ivy.add", "ivy.Container.static_add", "asin", "ivy.Array.asin", "ivy.Container.asin", "ivy.asin", "ivy.Container.static_asin", "asinh", "ivy.Array.asinh", "ivy.Container.asinh", "ivy.asinh", "ivy.Container.static_asinh", "atan", "ivy.Array.atan", "ivy.Container.atan", "ivy.atan", "ivy.Container.static_atan", "atan2", "ivy.Array.atan2", "ivy.Container.atan2", "ivy.atan2", "ivy.Container.static_atan2", "atanh", "ivy.Array.atanh", "ivy.Container.atanh", "ivy.atanh", "ivy.Container.static_atanh", "bitwise_and", "ivy.Array.bitwise_and", "ivy.Container.bitwise_and", "ivy.bitwise_and", "ivy.Container.static_bitwise_and", "bitwise_invert", "ivy.Array.bitwise_invert", "ivy.Container.bitwise_invert", "ivy.bitwise_invert", "ivy.Container.static_bitwise_invert", "bitwise_left_shift", "ivy.Array.bitwise_left_shift", "ivy.Container.bitwise_left_shift", "ivy.bitwise_left_shift", "ivy.Container.static_bitwise_left_shift", "bitwise_or", "ivy.Array.bitwise_or", "ivy.Container.bitwise_or", "ivy.bitwise_or", "ivy.Container.static_bitwise_or", "bitwise_right_shift", "ivy.Array.bitwise_right_shift", "ivy.Container.bitwise_right_shift", "ivy.bitwise_right_shift", "ivy.Container.static_bitwise_right_shift", "bitwise_xor", "ivy.Array.bitwise_xor", "ivy.Container.bitwise_xor", "ivy.bitwise_xor", "ivy.Container.static_bitwise_xor", "ceil", "ivy.Array.ceil", "ivy.Container.ceil", "ivy.ceil", "ivy.Container.static_ceil", "cos", "ivy.Array.cos", "ivy.Container.cos", "ivy.cos", "ivy.Container.static_cos", "cosh", "ivy.Array.cosh", "ivy.Container.cosh", "ivy.cosh", "ivy.Container.static_cosh", "deg2rad", "ivy.Array.deg2rad", "ivy.Container.deg2rad", "ivy.deg2rad", "ivy.Container.static_deg2rad", "divide", "ivy.Array.divide", "ivy.Container.divide", "ivy.divide", "ivy.Container.static_divide", "equal", "ivy.Array.equal", "ivy.Container.equal", "ivy.equal", "ivy.Container.static_equal", "erf", "ivy.Array.erf", "ivy.Container.erf", "ivy.erf", "ivy.Container.static_erf", "exp", "ivy.Array.exp", "ivy.Container.exp", "ivy.exp", "ivy.Container.static_exp", "expm1", "ivy.Array.expm1", "ivy.Container.expm1", "ivy.expm1", "ivy.Container.static_expm1", "floor", "ivy.Array.floor", "ivy.Container.floor", "ivy.floor", "ivy.Container.static_floor", "floor_divide", "ivy.Array.floor_divide", "ivy.Container.floor_divide", "ivy.floor_divide", "ivy.Container.static_floor_divide", "greater", "ivy.Array.greater", "ivy.Container.greater", "ivy.greater", "ivy.Container.static_greater", "greater_equal", "ivy.Array.greater_equal", "ivy.Container.greater_equal", "ivy.greater_equal", "ivy.Container.static_greater_equal", "isfinite", "ivy.Array.isfinite", "ivy.Container.isfinite", "ivy.isfinite", "ivy.Container.static_isfinite", "isinf", "ivy.Array.isinf", "ivy.Container.isinf", "ivy.isinf", "ivy.Container.static_isinf", "isnan", "ivy.Array.isnan", "ivy.Container.isnan", "ivy.isnan", "ivy.Container.static_isnan", "isreal", "ivy.Array.isreal", "ivy.Container.isreal", "ivy.isreal", "ivy.Container.static_isreal", "less", "ivy.Array.less", "ivy.Container.less", "ivy.less", "ivy.Container.static_less", "less_equal", "ivy.Array.less_equal", "ivy.Container.less_equal", "ivy.less_equal", "ivy.Container.static_less_equal", "log", "ivy.Array.log", "ivy.Container.log", "ivy.log", "ivy.Container.static_log", "log10", "ivy.Array.log10", "ivy.Container.log10", "ivy.log10", "ivy.Container.static_log10", "log1p", "ivy.Array.log1p", "ivy.Container.log1p", "ivy.log1p", "ivy.Container.static_log1p", "log2", "ivy.Array.log2", "ivy.Container.log2", "ivy.log2", "ivy.Container.static_log2", "logaddexp", "ivy.Array.logaddexp", "ivy.Container.logaddexp", "ivy.logaddexp", "ivy.Container.static_logaddexp", "logical_and", "ivy.Array.logical_and", "ivy.Container.logical_and", "ivy.logical_and", "ivy.Container.static_logical_and", "logical_not", "ivy.Array.logical_not", "ivy.Container.logical_not", "ivy.logical_not", "ivy.Container.static_logical_not", "logical_or", "ivy.Array.logical_or", "ivy.Container.logical_or", "ivy.logical_or", "ivy.Container.static_logical_or", "logical_xor", "ivy.Array.logical_xor", "ivy.Container.logical_xor", "ivy.logical_xor", "ivy.Container.static_logical_xor", "maximum", "ivy.Array.maximum", "ivy.Container.maximum", "ivy.maximum", "ivy.Container.static_maximum", "minimum", "ivy.Array.minimum", "ivy.Container.minimum", "ivy.minimum", "ivy.Container.static_minimum", "multiply", "ivy.Array.multiply", "ivy.Container.multiply", "ivy.multiply", "ivy.Container.static_multiply", "negative", "ivy.Array.negative", "ivy.Container.negative", "ivy.negative", "ivy.Container.static_negative", "not_equal", "ivy.Array.not_equal", "ivy.Container.not_equal", "ivy.not_equal", "ivy.Container.static_not_equal", "positive", "ivy.Array.positive", "ivy.Container.positive", "ivy.positive", "ivy.Container.static_positive", "pow", "ivy.Array.pow", "ivy.Container.pow", "ivy.pow", "ivy.Container.static_pow", "rad2deg", "ivy.Array.rad2deg", "ivy.Container.rad2deg", "ivy.rad2deg", "ivy.Container.static_rad2deg", "reciprocal", "ivy.Array.reciprocal", "ivy.Container.reciprocal", "ivy.reciprocal", "ivy.Container.static_reciprocal", "remainder", "ivy.Array.remainder", "ivy.Container.remainder", "ivy.remainder", "ivy.Container.static_remainder", "round", "ivy.Array.round", "ivy.Container.round", "ivy.round", "ivy.Container.static_round", "sign", "ivy.Array.sign", "ivy.Container.sign", "ivy.sign", "ivy.Container.static_sign", "sin", "ivy.Array.sin", "ivy.Container.sin", "ivy.sin", "ivy.Container.static_sin", "sinh", "ivy.Array.sinh", "ivy.Container.sinh", "ivy.sinh", "ivy.Container.static_sinh", "sqrt", "ivy.Array.sqrt", "ivy.Container.sqrt", "ivy.sqrt", "ivy.Container.static_sqrt", "square", "ivy.Array.square", "ivy.Container.square", "ivy.square", "ivy.Container.static_square", "subtract", "ivy.Container.static_subtract", "ivy.Array.subtract", "ivy.Container.subtract", "ivy.subtract", "tan", "ivy.Container.static_tan", "ivy.Array.tan", "ivy.Container.tan", "ivy.tan", "tanh", "ivy.Container.static_tanh", "ivy.Array.tanh", "ivy.Container.tanh", "ivy.tanh", "trunc", "ivy.Container.static_trunc", "ivy.Array.trunc", "ivy.Container.trunc", "ivy.trunc", "trunc_divide", "ivy.Container.static_trunc_divide", "ivy.Array.trunc_divide", "ivy.Container.trunc_divide", "ivy.trunc_divide", "Extensions", "Activations", "Compilation", "Constants", "Creation", "Data type", "Device", "Elementwise", "flatten", "ivy.Array.flatten", "ivy.Container.flatten", "ivy.flatten", "ivy.Container.static_flatten", "flipud", "ivy.Array.flipud", "ivy.Container.flipud", "ivy.flipud", "ivy.Container.static_flipud", "fmax", "ivy.Array.fmax", "ivy.Container.fmax", "ivy.fmax", "ivy.Container.static_fmax", "fmod", "ivy.Array.fmod", "ivy.Container.fmod", "ivy.fmod", "ivy.Container.static_fmod", "General", "Gradients", "hann_window", "ivy.Container.hann_window", "ivy.hann_window", "ivy.Container.static_hann_window", "heaviside", "ivy.Array.heaviside", "ivy.Container.heaviside", "ivy.heaviside", "ivy.Container.static_heaviside", "is_ivy_sparse_array", "is_native_sparse_array", "kaiser_window", "ivy.Container.kaiser_window", "ivy.kaiser_window", "ivy.Container.static_kaiser_window", "Layers", "lcm", "ivy.Array.lcm", "ivy.Container.lcm", "ivy.lcm", "ivy.Container.static_lcm", "Linear algebra", "Losses", "Manipulation", "max_pool2d", "ivy.Array.max_pool2d", "ivy.Container.max_pool2d", "ivy.max_pool2d", "ivy.Container.static_max_pool2d", "median", "ivy.Array.median", "ivy.Container.median", "ivy.median", "ivy.Container.static_median", "Meta", "moveaxis", "ivy.Array.moveaxis", "ivy.Container.moveaxis", "ivy.moveaxis", "ivy.Container.static_moveaxis", "native_sparse_array", "native_sparse_array_to_indices_values_and_shape", "ndenumerate", "ndindex", "Nest", "Norms", "pad", "ivy.Array.pad", "ivy.Container.pad", "ivy.pad", "ivy.Container.static_pad", "Random", "Searching", "Set", "sinc", "ivy.Array.sinc", "ivy.Container.sinc", "ivy.sinc", "ivy.Container.static_sinc", "Sorting", "Statistical", "Utility", "vorbis_window", "General", "all_equal", "ivy.Array.all_equal", "ivy.Container.all_equal", "ivy.all_equal", "ivy.Container.static_all_equal", "arg_info", "arg_names", "array_equal", "ivy.Array.array_equal", "ivy.array_equal", "assert_supports_inplace", "ivy.Array.assert_supports_inplace", "ivy.Container.assert_supports_inplace", "ivy.assert_supports_inplace", "ivy.Container.static_assert_supports_inplace", "cache_fn", "clip_matrix_norm", "ivy.Array.clip_matrix_norm", "ivy.Container.clip_matrix_norm", "ivy.clip_matrix_norm", "ivy.Container.static_clip_matrix_norm", "clip_vector_norm", "ivy.Array.clip_vector_norm", "ivy.Container.clip_vector_norm", "ivy.clip_vector_norm", "ivy.Container.static_clip_vector_norm", "container_types", "current_backend_str", "default", "ivy.Array.default", "ivy.default", "einops_rearrange", "ivy.Array.einops_rearrange", "ivy.Container.einops_rearrange", "ivy.einops_rearrange", "ivy.Container.static_einops_rearrange", "einops_reduce", "ivy.Array.einops_reduce", "ivy.Container.einops_reduce", "ivy.einops_reduce", "ivy.Container.static_einops_reduce", "einops_repeat", "ivy.Array.einops_repeat", "ivy.Container.einops_repeat", "ivy.einops_repeat", "ivy.Container.static_einops_repeat", "exists", "ivy.Array.exists", "ivy.exists", "fourier_encode", "ivy.Array.fourier_encode", "ivy.Container.fourier_encode", "ivy.fourier_encode", "ivy.Container.static_fourier_encode", "function_supported_devices_and_dtypes", "function_unsupported_devices_and_dtypes", "gather", "ivy.Array.gather", "ivy.Container.gather", "ivy.gather", "ivy.Container.static_gather", "gather_nd", "ivy.Array.gather_nd", "ivy.Container.gather_nd", "ivy.gather_nd", "ivy.Container.static_gather_nd", "get_all_arrays_in_memory", "get_array_mode", "get_exception_trace_mode", "get_item", "get_min_base", "get_min_denominator", "get_nestable_mode", "get_num_dims", "ivy.Array.get_num_dims", "ivy.Container.get_num_dims", "ivy.get_num_dims", "ivy.Container.static_get_num_dims", "get_queue_timeout", "get_referrers_recursive", "get_tmp_dir", "has_nans", "ivy.Array.has_nans", "ivy.Container.has_nans", "ivy.has_nans", "ivy.Container.static_has_nans", "inplace_arrays_supported", "inplace_decrement", "ivy.Array.inplace_decrement", "ivy.Container.inplace_decrement", "ivy.inplace_decrement", "ivy.Container.static_inplace_decrement", "inplace_increment", "ivy.Array.inplace_increment", "ivy.Container.inplace_increment", "ivy.inplace_increment", "ivy.Container.static_inplace_increment", "inplace_update", "ivy.Array.inplace_update", "ivy.Container.inplace_update", "ivy.inplace_update", "ivy.Container.static_inplace_update", "inplace_variables_supported", "is_array", "ivy.Array.is_array", "ivy.Container.is_array", "ivy.is_array", "ivy.Container.static_is_array", "is_ivy_array", "ivy.Array.is_ivy_array", "ivy.Container.is_ivy_array", "ivy.is_ivy_array", "ivy.Container.static_is_ivy_array", "is_ivy_container", "ivy.Array.is_ivy_container", "ivy.Container.is_ivy_container", "ivy.is_ivy_container", "ivy.Container.static_is_ivy_container", "is_native_array", "ivy.Array.is_native_array", "ivy.Container.is_native_array", "ivy.is_native_array", "ivy.Container.static_is_native_array", "isscalar", "match_kwargs", "multiprocessing", "num_arrays_in_memory", "print_all_arrays_in_memory", "scatter_flat", "ivy.Array.scatter_flat", "ivy.Container.scatter_flat", "ivy.scatter_flat", "ivy.Container.static_scatter_flat", "scatter_nd", "ivy.Array.scatter_nd", "ivy.Container.scatter_nd", "ivy.scatter_nd", "ivy.Container.static_scatter_nd", "set_array_mode", "set_exception_trace_mode", "set_min_base", "set_min_denominator", "set_nestable_mode", "set_queue_timeout", "set_shape_array_mode", "set_tmp_dir", "shape", "shape_array_mode", "stable_divide", "ivy.Array.stable_divide", "ivy.Container.stable_divide", "ivy.stable_divide", "ivy.Container.static_stable_divide", "stable_pow", "ivy.Array.stable_pow", "ivy.Container.stable_pow", "ivy.stable_pow", "ivy.Container.static_stable_pow", "supports_inplace_updates", "ivy.Container.static_supports_inplace_updates", "ivy.Array.supports_inplace_updates", "ivy.Container.supports_inplace_updates", "ivy.supports_inplace_updates", "to_ivy_shape", "to_list", "ivy.Container.static_to_list", "ivy.Array.to_list", "ivy.Container.to_list", "ivy.to_list", "to_native_shape", "to_numpy", "ivy.Container.static_to_numpy", "ivy.Array.to_numpy", "ivy.Container.to_numpy", "ivy.to_numpy", "to_scalar", "ivy.Container.static_to_scalar", "ivy.Array.to_scalar", "ivy.Container.to_scalar", "ivy.to_scalar", "try_else_none", "unset_array_mode", "unset_exception_trace_mode", "unset_nestable_mode", "unset_queue_timeout", "unset_shape_array_mode", "value_is_nan", "ivy.Container.static_value_is_nan", "ivy.Array.value_is_nan", "ivy.Container.value_is_nan", "ivy.value_is_nan", "vmap", "Gradients", "adam_step", "ivy.Array.adam_step", "ivy.Container.adam_step", "ivy.adam_step", "adam_update", "ivy.Array.adam_update", "ivy.Container.adam_update", "ivy.adam_update", "execute_with_gradients", "grad", "gradient_descent_update", "ivy.Array.gradient_descent_update", "ivy.Container.gradient_descent_update", "ivy.gradient_descent_update", "is_variable", "ivy.Container.is_variable", "ivy.is_variable", "ivy.Container.static_is_variable", "jac", "lamb_update", "ivy.Array.lamb_update", "ivy.Container.lamb_update", "ivy.lamb_update", "lars_update", "ivy.Array.lars_update", "ivy.Container.lars_update", "ivy.lars_update", "optimizer_update", "ivy.Array.optimizer_update", "ivy.Container.optimizer_update", "ivy.optimizer_update", "set_with_grads", "stop_gradient", "ivy.Container.static_stop_gradient", "ivy.Array.stop_gradient", "ivy.Container.stop_gradient", "ivy.stop_gradient", "unset_with_grads", "value_and_grad", "variable", "ivy.Container.static_variable", "ivy.Array.variable", "ivy.Container.variable", "ivy.variable", "variable_data", "ivy.Container.static_variable_data", "ivy.Array.variable_data", "ivy.Container.variable_data", "ivy.variable_data", "with_grads", "Layers", "conv", "conv1d", "ivy.Array.conv1d", "ivy.Container.conv1d", "ivy.conv1d", "ivy.Container.static_conv1d", "conv1d_transpose", "ivy.Array.conv1d_transpose", "ivy.Container.conv1d_transpose", "ivy.conv1d_transpose", "ivy.Container.static_conv1d_transpose", "conv2d", "ivy.Array.conv2d", "ivy.Container.conv2d", "ivy.conv2d", "ivy.Container.static_conv2d", "conv2d_transpose", "ivy.Container.conv2d_transpose", "ivy.conv2d_transpose", "ivy.Container.static_conv2d_transpose", "conv3d", "ivy.Array.conv3d", "ivy.Container.conv3d", "ivy.conv3d", "ivy.Container.static_conv3d", "conv3d_transpose", "ivy.Array.conv3d_transpose", "ivy.Container.conv3d_transpose", "ivy.conv3d_transpose", "ivy.Container.static_conv3d_transpose", "conv_general_dilated", "conv_general_transpose", "deconv_length", "depthwise_conv2d", "ivy.Array.depthwise_conv2d", "ivy.Container.depthwise_conv2d", "ivy.depthwise_conv2d", "ivy.Container.static_depthwise_conv2d", "dropout", "ivy.Array.dropout", "ivy.Container.dropout", "ivy.dropout", "ivy.Container.static_dropout", "get_x_data_format", "handle_padding", "linear", "ivy.Array.linear", "ivy.Container.linear", "ivy.linear", "ivy.Container.static_linear", "lstm_update", "ivy.Array.lstm_update", "ivy.Container.lstm_update", "ivy.lstm_update", "ivy.Container.static_lstm_update", "multi_head_attention", "ivy.Array.multi_head_attention", "ivy.Container.multi_head_attention", "ivy.multi_head_attention", "ivy.Container.static_multi_head_attention", "scaled_dot_product_attention", "ivy.Array.scaled_dot_product_attention", "ivy.Container.scaled_dot_product_attention", "ivy.scaled_dot_product_attention", "ivy.Container.static_scaled_dot_product_attention", "Linear algebra", "cholesky", "ivy.Array.cholesky", "ivy.Container.cholesky", "ivy.cholesky", "ivy.Container.static_cholesky", "cross", "ivy.Array.cross", "ivy.Container.cross", "ivy.cross", "ivy.Container.static_cross", "det", "ivy.Array.det", "ivy.Container.det", "ivy.det", "ivy.Container.static_det", "diag", "diagonal", "ivy.Array.diagonal", "ivy.Container.diagonal", "ivy.diagonal", "ivy.Container.static_diagonal", "eigh", "ivy.Array.eigh", "ivy.Container.eigh", "ivy.eigh", "eigvalsh", "ivy.Array.eigvalsh", "ivy.eigvalsh", "inner", "ivy.Array.inner", "ivy.Container.inner", "ivy.inner", "ivy.Container.static_inner", "inv", "ivy.Array.inv", "ivy.Container.inv", "ivy.inv", "ivy.Container.static_inv", "matmul", "ivy.Array.matmul", "ivy.Container.matmul", "ivy.matmul", "ivy.Container.static_matmul", "matrix_norm", "ivy.Array.matrix_norm", "ivy.Container.matrix_norm", "ivy.matrix_norm", "ivy.Container.static_matrix_norm", "matrix_power", "ivy.Container.matrix_power", "ivy.matrix_power", "ivy.Container.static_matrix_power", "matrix_rank", "ivy.Array.matrix_rank", "ivy.Container.matrix_rank", "ivy.matrix_rank", "ivy.Container.static_matrix_rank", "matrix_transpose", "ivy.Array.matrix_transpose", "ivy.Container.matrix_transpose", "ivy.matrix_transpose", "ivy.Container.static_matrix_transpose", "outer", "ivy.Array.outer", "ivy.Container.outer", "ivy.outer", "ivy.Container.static_outer", "pinv", "ivy.Array.pinv", "ivy.Container.pinv", "ivy.pinv", "ivy.Container.static_pinv", "qr", "ivy.Array.qr", "ivy.Container.qr", "ivy.qr", "ivy.Container.static_qr", "slogdet", "ivy.Array.slogdet", "ivy.Container.slogdet", "ivy.slogdet", "ivy.Container.static_slogdet", "solve", "ivy.Array.solve", "ivy.Container.solve", "ivy.solve", "ivy.Container.static_solve", "svd", "ivy.Container.static_svd", "ivy.Array.svd", "ivy.Container.svd", "ivy.svd", "svdvals", "ivy.Container.static_svdvals", "ivy.Array.svdvals", "ivy.Container.svdvals", "ivy.svdvals", "tensordot", "ivy.Container.static_tensordot", "ivy.Array.tensordot", "ivy.Container.tensordot", "ivy.tensordot", "trace", "ivy.Container.static_trace", "ivy.Array.trace", "ivy.Container.trace", "ivy.trace", "vander", "ivy.Container.static_vander", "ivy.Array.vander", "ivy.Container.vander", "ivy.vander", "vecdot", "ivy.Container.static_vecdot", "ivy.Array.vecdot", "ivy.Container.vecdot", "ivy.vecdot", "vector_norm", "ivy.Container.static_vector_norm", "ivy.Array.vector_norm", "ivy.Container.vector_norm", "ivy.vector_norm", "vector_to_skew_symmetric_matrix", "ivy.Container.static_vector_to_skew_symmetric_matrix", "ivy.Array.vector_to_skew_symmetric_matrix", "ivy.Container.vector_to_skew_symmetric_matrix", "ivy.vector_to_skew_symmetric_matrix", "Losses", "binary_cross_entropy", "ivy.Array.binary_cross_entropy", "ivy.Container.binary_cross_entropy", "ivy.binary_cross_entropy", "ivy.Container.static_binary_cross_entropy", "cross_entropy", "ivy.Array.cross_entropy", "ivy.Container.cross_entropy", "ivy.cross_entropy", "ivy.Container.static_cross_entropy", "sparse_cross_entropy", "ivy.Array.sparse_cross_entropy", "ivy.Container.sparse_cross_entropy", "ivy.sparse_cross_entropy", "ivy.Container.static_sparse_cross_entropy", "Manipulation", "clip", "ivy.Array.clip", "ivy.Container.clip", "ivy.clip", "ivy.Container.static_clip", "concat", "ivy.Array.concat", "ivy.Container.concat", "ivy.concat", "ivy.Container.static_concat", "constant_pad", "ivy.Array.constant_pad", "ivy.Container.constant_pad", "ivy.constant_pad", "ivy.Container.static_constant_pad", "expand_dims", "ivy.Array.expand_dims", "ivy.Container.expand_dims", "ivy.expand_dims", "ivy.Container.static_expand_dims", "flip", "ivy.Array.flip", "ivy.Container.flip", "ivy.flip", "ivy.Container.static_flip", "permute_dims", "ivy.Array.permute_dims", "ivy.Container.permute_dims", "ivy.permute_dims", "ivy.Container.static_permute_dims", "repeat", "ivy.Array.repeat", "ivy.Container.repeat", "ivy.repeat", "ivy.Container.static_repeat", "reshape", "ivy.Array.reshape", "ivy.Container.reshape", "ivy.reshape", "ivy.Container.static_reshape", "roll", "ivy.Array.roll", "ivy.Container.roll", "ivy.roll", "ivy.Container.static_roll", "split", "ivy.Array.split", "ivy.Container.split", "ivy.split", "ivy.Container.static_split", "squeeze", "ivy.Array.squeeze", "ivy.Container.squeeze", "ivy.squeeze", "ivy.Container.static_squeeze", "stack", "ivy.Array.stack", "ivy.Container.stack", "ivy.stack", "ivy.Container.static_stack", "swapaxes", "ivy.Container.static_swapaxes", "ivy.Array.swapaxes", "ivy.Container.swapaxes", "ivy.swapaxes", "tile", "ivy.Container.static_tile", "ivy.Array.tile", "ivy.Container.tile", "ivy.tile", "unstack", "ivy.Container.static_unstack", "ivy.Array.unstack", "ivy.Container.unstack", "ivy.unstack", "zero_pad", "ivy.Container.static_zero_pad", "ivy.Array.zero_pad", "ivy.Container.zero_pad", "ivy.zero_pad", "Meta", "fomaml_step", "maml_step", "reptile_step", "Nest", "all_nested_indices", "copy_nest", "index_nest", "insert_into_nest_at_index", "insert_into_nest_at_indices", "map", "map_nest_at_index", "map_nest_at_indices", "multi_index_nest", "nested_any", "nested_argwhere", "nested_map", "nested_multi_map", "prune_nest_at_index", "prune_nest_at_indices", "set_nest_at_index", "set_nest_at_indices", "Norms", "layer_norm", "ivy.Array.layer_norm", "ivy.Container.layer_norm", "ivy.layer_norm", "Random", "multinomial", "ivy.Array.multinomial", "ivy.Container.multinomial", "ivy.multinomial", "ivy.Container.static_multinomial", "randint", "ivy.Array.randint", "ivy.Container.randint", "ivy.randint", "ivy.Container.static_randint", "random_normal", "ivy.Array.random_normal", "ivy.Container.random_normal", "ivy.random_normal", "ivy.Container.static_random_normal", "random_uniform", "ivy.Array.random_uniform", "ivy.Container.random_uniform", "ivy.random_uniform", "ivy.Container.static_random_uniform", "seed", "shuffle", "ivy.Array.shuffle", "ivy.Container.shuffle", "ivy.shuffle", "ivy.Container.static_shuffle", "Searching", "argmax", "ivy.Array.argmax", "ivy.Container.argmax", "ivy.argmax", "ivy.Container.static_argmax", "argmin", "ivy.Array.argmin", "ivy.Container.argmin", "ivy.argmin", "ivy.Container.static_argmin", "argwhere", "ivy.Array.argwhere", "ivy.Container.argwhere", "ivy.argwhere", "ivy.Container.static_argwhere", "nonzero", "ivy.Array.nonzero", "ivy.Container.nonzero", "ivy.nonzero", "ivy.Container.static_nonzero", "where", "ivy.Container.static_where", "ivy.Array.where", "ivy.Container.where", "ivy.where", "Set", "unique_all", "ivy.Container.static_unique_all", "ivy.Array.unique_all", "ivy.Container.unique_all", "ivy.unique_all", "unique_counts", "ivy.Container.static_unique_counts", "ivy.Array.unique_counts", "ivy.Container.unique_counts", "ivy.unique_counts", "unique_inverse", "ivy.Container.static_unique_inverse", "ivy.Array.unique_inverse", "ivy.Container.unique_inverse", "ivy.unique_inverse", "unique_values", "ivy.Container.static_unique_values", "ivy.Array.unique_values", "ivy.Container.unique_values", "ivy.unique_values", "Sorting", "argsort", "ivy.Array.argsort", "ivy.Container.argsort", "ivy.argsort", "ivy.Container.static_argsort", "searchsorted", "ivy.Array.searchsorted", "ivy.Container.searchsorted", "ivy.searchsorted", "ivy.Container.static_searchsorted", "sort", "ivy.Array.sort", "ivy.Container.sort", "ivy.sort", "ivy.Container.static_sort", "Statistical", "cumprod", "ivy.Array.cumprod", "ivy.Container.cumprod", "ivy.cumprod", "ivy.Container.static_cumprod", "cumsum", "ivy.Array.cumsum", "ivy.Container.cumsum", "ivy.cumsum", "ivy.Container.static_cumsum", "einsum", "ivy.Array.einsum", "ivy.Container.einsum", "ivy.einsum", "max", "ivy.Array.max", "ivy.Container.max", "ivy.max", "mean", "ivy.Array.mean", "ivy.Container.mean", "ivy.mean", "min", "ivy.Array.min", "ivy.Container.min", "ivy.min", "prod", "ivy.Array.prod", "ivy.Container.prod", "ivy.prod", "std", "ivy.Array.std", "ivy.Container.std", "ivy.std", "sum", "ivy.Container.static_sum", "ivy.Array.sum", "ivy.Container.sum", "ivy.sum", "var", "ivy.Container.static_var", "ivy.Array.var", "ivy.Container.var", "ivy.var", "Utility", "all", "ivy.Array.all", "ivy.Container.all", "ivy.all", "ivy.Container.static_all", "any", "ivy.Array.any", "ivy.Container.any", "ivy.any", "ivy.Container.static_any", "Glossary", "Contents", "&lt;no title&gt;", "&lt;no title&gt;", "Inspection", "add_array_specs", "fn_array_spec", "Roadmap", "Framework classes", "Activations", "GEGLU", "GELU", "Converters", "to_ivy_module", "Initializers", "Constant", "FirstLayerSiren", "GlorotUniform", "Initializer", "KaimingNormal", "Ones", "Siren", "Uniform", "Zeros", "Layers", "Conv1D", "Conv1DTranspose", "Conv2D", "Conv2DTranspose", "Conv3D", "Conv3DTranspose", "DepthwiseConv2D", "Dropout", "LSTM", "Linear", "MultiHeadAttention", "Module", "Module", "Norms", "LayerNorm", "Optimizers", "Adam", "LAMB", "LARS", "Optimizer", "SGD", "Sequential", "Sequential", "&lt;no title&gt;", "Verbosity", "cprint"], "terms": {"version": [0, 17, 21, 24, 27, 28, 29, 35, 36, 56, 57, 105, 106, 143, 146, 154, 159, 177, 849, 1041, 1159, 1181, 1184, 1185, 1187, 1558], "ivi": [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 28, 29, 30, 32, 33, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 140, 141, 143, 144, 146, 148, 149, 150, 151, 152, 157, 158, 174, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 189, 190, 195, 200, 205, 210, 215, 220, 225, 226, 227, 228, 229, 230, 233, 237, 238, 239, 240, 243, 244, 249, 252, 257, 258, 263, 266, 269, 274, 279, 284, 287, 292, 297, 302, 305, 310, 311, 312, 313, 318, 323, 328, 333, 334, 335, 336, 339, 340, 341, 345, 346, 351, 354, 357, 362, 363, 364, 369, 374, 379, 384, 385, 386, 391, 392, 393, 394, 395, 396, 397, 398, 399, 400, 401, 402, 403, 404, 405, 406, 407, 412, 413, 414, 415, 416, 417, 418, 419, 420, 421, 422, 423, 424, 425, 426, 431, 432, 433, 434, 435, 436, 441, 446, 451, 456, 461, 466, 471, 476, 481, 486, 491, 496, 501, 506, 511, 516, 521, 526, 531, 536, 541, 546, 551, 556, 561, 566, 571, 576, 581, 586, 591, 596, 601, 606, 611, 616, 621, 626, 631, 636, 641, 646, 651, 656, 661, 666, 671, 676, 681, 686, 691, 696, 701, 706, 711, 716, 721, 726, 731, 736, 741, 746, 751, 849, 850, 855, 856, 857, 860, 865, 866, 871, 876, 877, 878, 881, 886, 891, 896, 899, 904, 905, 906, 911, 916, 917, 918, 919, 920, 921, 922, 923, 928, 929, 930, 931, 936, 937, 942, 947, 952, 953, 958, 963, 968, 973, 974, 975, 976, 977, 978, 983, 988, 989, 990, 991, 992, 993, 994, 995, 996, 997, 998, 1003, 1008, 1013, 1014, 1019, 1020, 1025, 1030, 1031, 1032, 1033, 1034, 1035, 1036, 1041, 1042, 1043, 1047, 1051, 1052, 1053, 1057, 1061, 1062, 1066, 1070, 1074, 1075, 1080, 1081, 1082, 1087, 1092, 1093, 1094, 1095, 1100, 1105, 1110, 1114, 1119, 1124, 1125, 1126, 1127, 1132, 1137, 1138, 1139, 1144, 1149, 1154, 1159, 1160, 1165, 1170, 1175, 1176, 1181, 1185, 1188, 1193, 1198, 1203, 1208, 1212, 1217, 1222, 1227, 1232, 1237, 1242, 1247, 1252, 1257, 1262, 1267, 1272, 1277, 1282, 1287, 1288, 1293, 1298, 1303, 1304, 1309, 1314, 1319, 1324, 1329, 1334, 1339, 1344, 1349, 1354, 1359, 1364, 1369, 1374, 1379, 1384, 1385, 1386, 1387, 1388, 1389, 1390, 1391, 1392, 1393, 1394, 1395, 1396, 1397, 1398, 1399, 1400, 1401, 1402, 1403, 1404, 1405, 1406, 1407, 1411, 1412, 1417, 1422, 1427, 1432, 1433, 1438, 1439, 1444, 1449, 1454, 1459, 1464, 1465, 1470, 1475, 1480, 1485, 1486, 1491, 1496, 1501, 1502, 1507, 1512, 1516, 1520, 1524, 1528, 1532, 1536, 1541, 1546, 1547, 1552, 1557, 1558, 1564, 1606, 1607], "check_al": 1, "result": [1, 2, 4, 36, 38, 41, 42, 48, 49, 50, 51, 54, 55, 56, 57, 58, 59, 60, 61, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 82, 83, 84, 85, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 129, 130, 131, 132, 133, 134, 138, 139, 141, 142, 143, 145, 146, 149, 151, 152, 153, 154, 155, 156, 159, 162, 176, 189, 190, 193, 195, 198, 200, 203, 205, 208, 210, 213, 215, 218, 220, 223, 228, 230, 231, 233, 235, 240, 242, 243, 244, 247, 249, 250, 252, 255, 257, 258, 261, 263, 264, 266, 267, 279, 282, 284, 285, 287, 290, 292, 296, 297, 301, 302, 304, 305, 309, 310, 313, 316, 323, 326, 385, 386, 389, 401, 426, 430, 435, 436, 439, 441, 444, 446, 449, 451, 454, 456, 459, 461, 464, 466, 469, 471, 474, 476, 479, 481, 484, 486, 489, 491, 494, 496, 499, 501, 504, 506, 509, 511, 514, 516, 519, 521, 524, 526, 529, 531, 534, 536, 539, 541, 544, 546, 549, 551, 554, 556, 559, 561, 564, 566, 569, 571, 574, 576, 579, 581, 584, 586, 589, 591, 594, 596, 599, 601, 604, 606, 609, 611, 614, 616, 619, 621, 624, 626, 629, 631, 634, 636, 639, 641, 644, 646, 649, 651, 654, 656, 659, 661, 664, 666, 669, 671, 674, 676, 679, 681, 684, 686, 689, 691, 694, 696, 699, 701, 704, 706, 709, 711, 714, 716, 719, 721, 724, 726, 729, 731, 735, 736, 740, 741, 745, 746, 750, 751, 755, 849, 866, 869, 871, 874, 881, 884, 886, 889, 891, 894, 906, 909, 911, 914, 978, 981, 983, 986, 1042, 1051, 1053, 1056, 1066, 1069, 1070, 1073, 1075, 1079, 1093, 1095, 1098, 1100, 1103, 1105, 1108, 1110, 1112, 1114, 1117, 1119, 1122, 1124, 1125, 1127, 1130, 1132, 1135, 1139, 1142, 1149, 1152, 1154, 1157, 1159, 1160, 1163, 1165, 1168, 1170, 1173, 1176, 1179, 1185, 1187, 1188, 1191, 1193, 1196, 1198, 1201, 1203, 1206, 1208, 1210, 1212, 1215, 1217, 1220, 1222, 1225, 1227, 1230, 1242, 1245, 1247, 1251, 1252, 1256, 1257, 1261, 1262, 1266, 1267, 1271, 1272, 1276, 1277, 1281, 1282, 1286, 1287, 1288, 1291, 1293, 1296, 1298, 1301, 1303, 1304, 1307, 1309, 1312, 1314, 1317, 1319, 1322, 1324, 1327, 1329, 1332, 1334, 1337, 1339, 1342, 1344, 1347, 1354, 1357, 1359, 1362, 1364, 1368, 1369, 1373, 1379, 1383, 1388, 1391, 1394, 1401, 1406, 1407, 1410, 1411, 1412, 1415, 1417, 1420, 1422, 1425, 1427, 1430, 1433, 1436, 1438, 1439, 1442, 1444, 1447, 1449, 1452, 1459, 1463, 1464, 1465, 1469, 1475, 1479, 1480, 1484, 1485, 1486, 1489, 1491, 1494, 1496, 1499, 1501, 1502, 1505, 1507, 1510, 1512, 1515, 1516, 1519, 1520, 1523, 1524, 1527, 1528, 1531, 1532, 1535, 1536, 1540, 1541, 1545, 1546, 1547, 1550, 1552, 1555, 1558], "messag": [1, 2, 3, 4, 5, 6, 7, 8, 12, 13, 14, 15, 16, 28, 36, 142, 145, 147, 148, 153, 159, 161, 1606, 1607], "one": [1, 2, 17, 22, 24, 28, 29, 34, 35, 36, 48, 49, 56, 57, 58, 59, 66, 67, 70, 71, 76, 77, 78, 79, 91, 92, 97, 98, 103, 104, 105, 106, 107, 108, 109, 110, 115, 116, 119, 120, 121, 122, 125, 126, 127, 128, 129, 130, 131, 132, 138, 139, 140, 141, 143, 145, 148, 149, 150, 151, 152, 153, 154, 155, 157, 158, 161, 162, 164, 176, 228, 230, 231, 240, 242, 269, 272, 279, 282, 310, 318, 321, 328, 331, 401, 425, 435, 501, 504, 626, 629, 651, 654, 656, 659, 849, 850, 853, 974, 978, 981, 983, 986, 1042, 1043, 1046, 1053, 1056, 1062, 1065, 1070, 1073, 1075, 1079, 1093, 1105, 1108, 1159, 1188, 1191, 1198, 1201, 1203, 1206, 1222, 1225, 1232, 1235, 1272, 1276, 1277, 1281, 1303, 1319, 1322, 1324, 1327, 1329, 1332, 1344, 1347, 1354, 1357, 1406, 1407, 1410, 1438, 1439, 1442, 1454, 1457, 1464, 1465, 1469, 1470, 1474, 1475, 1479, 1480, 1484, 1501, 1512, 1515, 1558], "arg": [1, 2, 3, 4, 17, 20, 32, 43, 44, 45, 91, 92, 147, 153, 159, 163, 228, 229, 401, 425, 849, 1030], "i": [1, 2, 17, 20, 21, 22, 25, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 38, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 54, 55, 56, 57, 58, 59, 60, 61, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 80, 81, 82, 83, 84, 85, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 158, 159, 160, 161, 162, 163, 164, 175, 176, 189, 190, 193, 200, 203, 215, 218, 225, 226, 227, 228, 230, 231, 233, 235, 243, 244, 247, 249, 250, 252, 255, 257, 258, 261, 263, 264, 266, 267, 269, 272, 274, 277, 279, 282, 284, 285, 287, 290, 292, 296, 297, 301, 302, 304, 305, 309, 310, 313, 316, 323, 326, 328, 331, 333, 340, 341, 343, 346, 349, 351, 352, 354, 355, 357, 360, 363, 364, 367, 369, 372, 374, 377, 379, 382, 386, 389, 400, 401, 402, 406, 407, 410, 413, 414, 416, 417, 420, 424, 425, 431, 432, 434, 435, 436, 439, 441, 444, 446, 449, 451, 454, 456, 459, 461, 464, 466, 469, 471, 474, 476, 479, 481, 484, 486, 489, 491, 494, 501, 504, 506, 509, 511, 514, 516, 519, 521, 524, 531, 534, 536, 539, 546, 549, 551, 554, 556, 559, 561, 564, 566, 569, 571, 574, 576, 579, 581, 584, 586, 589, 591, 594, 601, 604, 606, 609, 611, 614, 616, 619, 621, 624, 626, 629, 631, 634, 636, 639, 641, 644, 646, 649, 651, 654, 656, 659, 661, 664, 666, 669, 671, 674, 676, 679, 681, 684, 696, 699, 701, 704, 706, 709, 711, 714, 716, 719, 721, 724, 726, 729, 731, 735, 736, 740, 741, 745, 746, 750, 849, 850, 853, 857, 859, 865, 866, 869, 871, 874, 878, 880, 896, 898, 899, 902, 904, 905, 906, 909, 922, 923, 926, 928, 931, 934, 937, 940, 947, 950, 953, 956, 958, 961, 963, 966, 968, 971, 974, 975, 983, 986, 993, 1008, 1012, 1020, 1024, 1025, 1029, 1030, 1036, 1040, 1041, 1042, 1047, 1050, 1053, 1056, 1057, 1059, 1062, 1065, 1066, 1069, 1070, 1073, 1074, 1075, 1079, 1080, 1082, 1086, 1087, 1091, 1092, 1093, 1105, 1108, 1127, 1130, 1132, 1135, 1139, 1142, 1149, 1152, 1154, 1157, 1159, 1160, 1163, 1165, 1168, 1170, 1173, 1176, 1179, 1181, 1184, 1185, 1187, 1188, 1191, 1193, 1196, 1198, 1201, 1203, 1206, 1208, 1210, 1212, 1215, 1217, 1220, 1222, 1225, 1227, 1230, 1232, 1235, 1237, 1240, 1242, 1245, 1247, 1251, 1252, 1256, 1257, 1261, 1262, 1266, 1267, 1271, 1272, 1276, 1277, 1281, 1282, 1286, 1287, 1288, 1291, 1293, 1296, 1298, 1301, 1303, 1304, 1307, 1309, 1312, 1314, 1317, 1319, 1322, 1324, 1327, 1329, 1332, 1334, 1337, 1339, 1342, 1344, 1347, 1349, 1352, 1354, 1357, 1359, 1362, 1364, 1368, 1369, 1373, 1374, 1378, 1379, 1383, 1384, 1385, 1386, 1387, 1388, 1389, 1390, 1391, 1394, 1398, 1399, 1400, 1401, 1404, 1406, 1407, 1410, 1411, 1412, 1415, 1417, 1420, 1422, 1425, 1427, 1430, 1438, 1439, 1442, 1444, 1447, 1454, 1457, 1459, 1463, 1464, 1465, 1469, 1470, 1474, 1475, 1479, 1480, 1484, 1485, 1486, 1489, 1491, 1494, 1496, 1499, 1501, 1502, 1505, 1507, 1510, 1512, 1515, 1516, 1519, 1520, 1523, 1524, 1527, 1528, 1531, 1532, 1535, 1536, 1540, 1541, 1545, 1546, 1547, 1550, 1552, 1555, 1557, 1558], "fals": [1, 2, 4, 6, 7, 8, 12, 14, 38, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 66, 67, 70, 71, 76, 77, 80, 81, 82, 83, 84, 85, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 140, 143, 145, 147, 152, 153, 154, 155, 159, 162, 163, 164, 228, 257, 269, 272, 310, 313, 316, 328, 331, 333, 339, 341, 343, 362, 363, 364, 367, 374, 377, 379, 382, 384, 385, 401, 406, 407, 410, 416, 417, 420, 421, 425, 432, 434, 435, 481, 484, 536, 539, 566, 569, 571, 574, 576, 579, 581, 584, 586, 589, 591, 594, 596, 599, 601, 604, 631, 634, 636, 639, 641, 644, 646, 649, 651, 654, 656, 659, 671, 674, 849, 850, 853, 857, 859, 878, 880, 896, 898, 899, 902, 917, 918, 919, 922, 923, 926, 931, 934, 947, 950, 953, 956, 958, 961, 968, 971, 974, 988, 989, 992, 994, 996, 997, 1008, 1012, 1031, 1032, 1033, 1035, 1036, 1040, 1042, 1051, 1057, 1059, 1070, 1073, 1074, 1075, 1079, 1080, 1092, 1093, 1094, 1159, 1160, 1163, 1193, 1196, 1198, 1201, 1203, 1206, 1247, 1251, 1267, 1271, 1277, 1281, 1303, 1339, 1342, 1349, 1352, 1374, 1378, 1384, 1385, 1386, 1387, 1388, 1389, 1390, 1394, 1398, 1399, 1400, 1401, 1411, 1412, 1415, 1438, 1439, 1442, 1444, 1447, 1454, 1457, 1459, 1463, 1464, 1465, 1469, 1470, 1474, 1475, 1479, 1480, 1484, 1485, 1486, 1489, 1496, 1499, 1501, 1502, 1505, 1507, 1510, 1516, 1519, 1520, 1523, 1524, 1527, 1528, 1531, 1532, 1535, 1536, 1540, 1541, 1545, 1546, 1547, 1550, 1552, 1555], "sourc": [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 27, 28, 29, 30, 31, 32, 34, 35, 36, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 138, 139, 141, 142, 153, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 189, 190, 193, 195, 198, 200, 203, 205, 208, 210, 213, 215, 218, 220, 223, 225, 226, 228, 229, 230, 231, 233, 235, 237, 238, 239, 240, 242, 243, 244, 247, 249, 250, 252, 255, 257, 258, 261, 263, 264, 266, 267, 269, 272, 274, 277, 279, 282, 284, 285, 287, 290, 292, 296, 297, 301, 302, 304, 305, 309, 310, 311, 312, 313, 316, 318, 321, 323, 326, 328, 331, 333, 334, 335, 336, 337, 339, 340, 341, 343, 345, 346, 349, 351, 352, 354, 355, 357, 360, 362, 363, 364, 367, 369, 372, 374, 377, 379, 382, 384, 385, 386, 389, 391, 392, 393, 394, 395, 396, 397, 398, 399, 400, 401, 402, 403, 404, 405, 406, 407, 410, 412, 413, 414, 415, 416, 417, 418, 419, 420, 421, 422, 423, 424, 425, 426, 430, 431, 432, 433, 434, 435, 436, 439, 441, 444, 446, 449, 451, 454, 456, 459, 461, 464, 466, 469, 471, 474, 476, 479, 481, 484, 486, 489, 491, 494, 496, 499, 501, 504, 506, 509, 511, 514, 516, 519, 521, 524, 526, 529, 531, 534, 536, 539, 541, 544, 546, 549, 551, 554, 556, 559, 561, 564, 566, 569, 571, 574, 576, 579, 581, 584, 586, 589, 591, 594, 596, 599, 601, 604, 606, 609, 611, 614, 616, 619, 621, 624, 626, 629, 631, 634, 636, 639, 641, 644, 646, 649, 651, 654, 656, 659, 661, 664, 666, 669, 671, 674, 676, 679, 681, 684, 686, 689, 691, 694, 696, 699, 701, 704, 706, 709, 711, 714, 716, 719, 721, 724, 726, 729, 731, 735, 736, 740, 741, 745, 746, 750, 751, 755, 849, 850, 853, 855, 856, 857, 859, 860, 863, 865, 866, 869, 871, 874, 876, 877, 878, 880, 881, 884, 886, 889, 891, 894, 896, 898, 899, 902, 904, 905, 906, 909, 911, 914, 916, 917, 918, 919, 920, 921, 922, 923, 926, 928, 929, 930, 931, 934, 936, 937, 940, 942, 945, 947, 950, 952, 953, 956, 958, 961, 963, 966, 968, 971, 973, 974, 975, 976, 977, 978, 981, 983, 986, 988, 989, 990, 991, 992, 993, 994, 995, 996, 997, 998, 1001, 1003, 1006, 1008, 1012, 1013, 1014, 1018, 1019, 1020, 1024, 1025, 1029, 1030, 1031, 1032, 1033, 1034, 1035, 1036, 1040, 1041, 1042, 1043, 1046, 1047, 1050, 1051, 1052, 1053, 1056, 1057, 1059, 1061, 1062, 1065, 1066, 1069, 1070, 1073, 1074, 1075, 1079, 1080, 1081, 1082, 1086, 1087, 1091, 1092, 1093, 1094, 1095, 1098, 1100, 1103, 1105, 1108, 1110, 1112, 1114, 1117, 1119, 1122, 1124, 1125, 1126, 1127, 1130, 1132, 1135, 1137, 1138, 1139, 1142, 1144, 1147, 1149, 1152, 1154, 1157, 1159, 1160, 1163, 1165, 1168, 1170, 1173, 1175, 1176, 1179, 1181, 1184, 1185, 1187, 1188, 1191, 1193, 1196, 1198, 1201, 1203, 1206, 1208, 1210, 1212, 1215, 1217, 1220, 1222, 1225, 1227, 1230, 1232, 1235, 1237, 1240, 1242, 1245, 1247, 1251, 1252, 1256, 1257, 1261, 1262, 1266, 1267, 1271, 1272, 1276, 1277, 1281, 1282, 1286, 1287, 1288, 1291, 1293, 1296, 1298, 1301, 1303, 1304, 1307, 1309, 1312, 1314, 1317, 1319, 1322, 1324, 1327, 1329, 1332, 1334, 1337, 1339, 1342, 1344, 1347, 1349, 1352, 1354, 1357, 1359, 1362, 1364, 1368, 1369, 1373, 1374, 1378, 1379, 1383, 1384, 1385, 1386, 1387, 1388, 1389, 1390, 1391, 1392, 1393, 1394, 1395, 1396, 1397, 1398, 1399, 1400, 1401, 1402, 1403, 1404, 1405, 1406, 1407, 1410, 1411, 1412, 1415, 1417, 1420, 1422, 1425, 1427, 1430, 1432, 1433, 1436, 1438, 1439, 1442, 1444, 1447, 1449, 1452, 1454, 1457, 1459, 1463, 1464, 1465, 1469, 1470, 1474, 1475, 1479, 1480, 1484, 1485, 1486, 1489, 1491, 1494, 1496, 1499, 1501, 1502, 1505, 1507, 1510, 1512, 1515, 1516, 1519, 1520, 1523, 1524, 1527, 1528, 1531, 1532, 1535, 1536, 1540, 1541, 1545, 1546, 1547, 1550, 1552, 1555, 1558, 1606, 1607], "check_all_or_any_fn": 1, "fn": [1, 3, 99, 100, 147, 153, 159, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 228, 237, 238, 239, 310, 351, 352, 354, 355, 401, 413, 414, 849, 855, 904, 905, 1030, 1388, 1389, 1394, 1395, 1396, 1398, 1399, 1400], "type": [1, 3, 17, 23, 25, 31, 34, 35, 36, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 141, 142, 144, 145, 146, 148, 149, 151, 152, 154, 155, 156, 157, 159, 161, 162, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 189, 195, 198, 200, 203, 205, 208, 210, 213, 215, 218, 220, 223, 225, 226, 228, 230, 231, 233, 235, 237, 238, 239, 240, 242, 243, 244, 247, 249, 250, 252, 255, 257, 258, 261, 263, 264, 266, 267, 269, 272, 274, 277, 279, 282, 284, 285, 287, 290, 292, 296, 297, 301, 302, 304, 305, 309, 311, 312, 313, 316, 318, 321, 323, 326, 328, 331, 333, 334, 335, 336, 337, 339, 340, 341, 343, 345, 346, 349, 351, 352, 354, 355, 357, 360, 362, 363, 364, 367, 369, 372, 374, 377, 379, 382, 384, 385, 386, 389, 391, 395, 400, 401, 403, 404, 405, 406, 407, 410, 412, 413, 414, 415, 416, 417, 418, 419, 420, 421, 422, 423, 424, 425, 426, 430, 431, 432, 433, 434, 435, 436, 439, 441, 444, 446, 449, 451, 454, 456, 459, 461, 464, 466, 469, 471, 474, 476, 479, 481, 484, 486, 489, 491, 494, 496, 499, 501, 504, 506, 509, 511, 514, 516, 519, 521, 524, 526, 529, 531, 534, 536, 539, 541, 544, 546, 549, 551, 554, 556, 559, 561, 564, 566, 569, 571, 574, 576, 579, 581, 584, 586, 589, 591, 594, 596, 599, 601, 604, 606, 609, 611, 614, 616, 619, 621, 624, 626, 629, 631, 634, 636, 639, 641, 644, 646, 649, 651, 654, 656, 659, 661, 664, 666, 669, 671, 674, 676, 679, 681, 684, 686, 689, 691, 694, 696, 699, 701, 704, 706, 709, 711, 714, 716, 719, 721, 724, 726, 729, 731, 735, 736, 740, 741, 745, 746, 750, 751, 755, 849, 850, 853, 855, 857, 859, 860, 863, 865, 866, 869, 871, 874, 877, 878, 880, 881, 884, 886, 889, 891, 894, 896, 898, 899, 902, 904, 905, 906, 909, 911, 914, 917, 918, 919, 920, 921, 922, 923, 926, 928, 931, 934, 937, 940, 942, 945, 947, 950, 953, 956, 958, 961, 963, 966, 968, 971, 973, 974, 978, 981, 983, 986, 988, 989, 990, 991, 992, 994, 996, 997, 998, 1001, 1003, 1006, 1008, 1012, 1013, 1014, 1018, 1019, 1020, 1024, 1025, 1029, 1030, 1031, 1032, 1033, 1034, 1035, 1036, 1040, 1041, 1042, 1043, 1046, 1047, 1050, 1053, 1056, 1057, 1059, 1062, 1065, 1066, 1069, 1070, 1073, 1075, 1079, 1082, 1086, 1087, 1091, 1092, 1093, 1094, 1095, 1098, 1100, 1103, 1105, 1108, 1110, 1112, 1114, 1117, 1119, 1122, 1124, 1125, 1127, 1130, 1132, 1135, 1139, 1142, 1144, 1147, 1149, 1152, 1154, 1157, 1159, 1160, 1163, 1165, 1168, 1170, 1173, 1176, 1179, 1181, 1184, 1185, 1187, 1188, 1191, 1193, 1196, 1198, 1201, 1203, 1206, 1208, 1210, 1212, 1215, 1217, 1220, 1222, 1225, 1227, 1230, 1232, 1235, 1237, 1240, 1242, 1245, 1247, 1251, 1252, 1256, 1257, 1261, 1262, 1266, 1267, 1271, 1272, 1276, 1277, 1281, 1282, 1286, 1287, 1288, 1291, 1293, 1296, 1298, 1301, 1303, 1304, 1307, 1309, 1312, 1314, 1317, 1319, 1322, 1324, 1327, 1329, 1332, 1334, 1337, 1339, 1342, 1344, 1347, 1349, 1352, 1354, 1357, 1359, 1362, 1364, 1368, 1369, 1373, 1374, 1378, 1379, 1383, 1384, 1385, 1386, 1387, 1388, 1389, 1390, 1391, 1394, 1398, 1399, 1400, 1405, 1406, 1407, 1410, 1411, 1412, 1415, 1417, 1420, 1422, 1425, 1427, 1430, 1432, 1433, 1436, 1438, 1439, 1442, 1444, 1447, 1449, 1452, 1454, 1457, 1459, 1463, 1464, 1465, 1469, 1470, 1474, 1475, 1479, 1480, 1484, 1485, 1486, 1489, 1491, 1494, 1496, 1499, 1501, 1502, 1505, 1507, 1510, 1512, 1515, 1516, 1519, 1520, 1523, 1524, 1527, 1528, 1531, 1532, 1535, 1536, 1540, 1541, 1545, 1546, 1547, 1550, 1552, 1555, 1558], "all": [1, 3, 4, 27, 28, 29, 30, 31, 32, 34, 35, 36, 43, 44, 45, 46, 47, 48, 49, 58, 59, 66, 67, 70, 71, 74, 75, 84, 85, 86, 87, 91, 92, 95, 96, 103, 104, 107, 108, 115, 116, 119, 120, 123, 124, 133, 134, 135, 136, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 161, 162, 163, 164, 175, 176, 177, 187, 225, 226, 228, 230, 231, 279, 282, 292, 296, 297, 301, 401, 415, 421, 849, 850, 853, 857, 859, 916, 977, 1020, 1024, 1041, 1042, 1051, 1093, 1144, 1147, 1159, 1212, 1215, 1242, 1245, 1257, 1261, 1277, 1281, 1303, 1324, 1327, 1344, 1347, 1354, 1357, 1384, 1385, 1386, 1387, 1388, 1389, 1390, 1399, 1400, 1401, 1411, 1412, 1415, 1427, 1430, 1438, 1449, 1452, 1546, 1557, 1558], "limit": [1, 3, 36, 88, 91, 92, 93, 94, 145, 147, 148, 153, 155, 157, 162, 176, 310, 346, 349, 357, 360, 849, 866, 869, 871, 874, 1303, 1304, 1307], "0": [1, 3, 17, 20, 36, 38, 39, 40, 41, 42, 48, 49, 50, 51, 54, 55, 56, 57, 58, 59, 60, 61, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 138, 140, 141, 143, 145, 146, 147, 153, 154, 155, 156, 159, 161, 162, 163, 164, 176, 189, 190, 193, 195, 198, 200, 203, 205, 208, 210, 213, 215, 218, 220, 223, 228, 230, 231, 240, 242, 249, 250, 257, 258, 261, 263, 264, 266, 267, 279, 282, 287, 290, 292, 296, 297, 301, 302, 304, 305, 309, 310, 313, 316, 318, 321, 323, 326, 328, 331, 341, 343, 346, 349, 357, 360, 362, 374, 377, 401, 403, 406, 412, 415, 419, 420, 421, 422, 423, 424, 425, 431, 433, 434, 435, 436, 439, 441, 444, 446, 449, 451, 454, 456, 459, 461, 464, 466, 469, 471, 474, 476, 479, 481, 484, 491, 494, 501, 504, 506, 509, 511, 514, 516, 519, 521, 524, 526, 529, 531, 534, 536, 539, 546, 549, 551, 554, 556, 559, 561, 564, 566, 569, 571, 574, 576, 579, 581, 584, 586, 589, 596, 599, 606, 609, 611, 614, 616, 619, 621, 624, 636, 639, 641, 644, 646, 649, 651, 654, 656, 659, 661, 664, 666, 669, 671, 674, 676, 679, 681, 684, 686, 689, 696, 699, 701, 704, 706, 709, 711, 714, 716, 719, 721, 724, 726, 729, 736, 740, 741, 745, 746, 750, 751, 755, 849, 850, 853, 857, 859, 865, 866, 869, 871, 874, 886, 889, 896, 898, 906, 909, 911, 914, 919, 923, 926, 928, 929, 931, 934, 937, 940, 942, 945, 958, 961, 968, 971, 974, 983, 986, 993, 996, 998, 1001, 1008, 1012, 1014, 1018, 1020, 1024, 1025, 1029, 1034, 1036, 1040, 1041, 1042, 1043, 1046, 1047, 1050, 1052, 1053, 1056, 1057, 1059, 1061, 1062, 1065, 1066, 1069, 1070, 1073, 1075, 1079, 1081, 1082, 1086, 1093, 1095, 1098, 1105, 1108, 1114, 1117, 1119, 1122, 1127, 1130, 1139, 1142, 1154, 1157, 1159, 1160, 1163, 1165, 1168, 1170, 1173, 1175, 1176, 1179, 1193, 1196, 1198, 1201, 1203, 1206, 1212, 1215, 1227, 1230, 1237, 1240, 1247, 1251, 1252, 1256, 1257, 1261, 1262, 1266, 1267, 1271, 1277, 1281, 1287, 1288, 1291, 1293, 1296, 1298, 1301, 1303, 1304, 1307, 1309, 1312, 1314, 1317, 1319, 1322, 1324, 1327, 1329, 1332, 1334, 1337, 1339, 1342, 1344, 1347, 1349, 1352, 1354, 1357, 1359, 1362, 1364, 1368, 1369, 1373, 1374, 1378, 1388, 1390, 1391, 1394, 1396, 1399, 1400, 1404, 1405, 1406, 1407, 1410, 1411, 1412, 1415, 1417, 1420, 1422, 1425, 1427, 1430, 1432, 1433, 1436, 1438, 1439, 1442, 1444, 1447, 1454, 1457, 1459, 1463, 1464, 1465, 1469, 1470, 1474, 1475, 1479, 1480, 1484, 1485, 1486, 1489, 1491, 1494, 1496, 1499, 1501, 1502, 1505, 1507, 1510, 1512, 1515, 1516, 1519, 1520, 1523, 1524, 1527, 1528, 1531, 1532, 1535, 1536, 1540, 1541, 1545, 1546, 1547, 1550, 1552, 1555, 1558], "must": [1, 3, 8, 16, 27, 29, 31, 33, 34, 35, 36, 38, 41, 42, 48, 49, 50, 51, 54, 55, 56, 57, 58, 59, 60, 61, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 138, 139, 143, 144, 145, 146, 147, 149, 150, 153, 156, 157, 159, 163, 164, 189, 190, 193, 195, 198, 200, 203, 205, 208, 210, 213, 215, 218, 220, 223, 228, 230, 231, 233, 235, 240, 242, 243, 244, 247, 249, 250, 252, 255, 257, 258, 261, 263, 264, 266, 267, 269, 272, 279, 282, 284, 285, 287, 290, 292, 296, 297, 301, 302, 304, 305, 309, 310, 313, 316, 318, 321, 323, 326, 401, 425, 426, 430, 435, 436, 439, 441, 444, 446, 449, 451, 454, 456, 459, 461, 464, 466, 469, 471, 474, 476, 479, 481, 484, 486, 489, 491, 494, 496, 499, 501, 504, 506, 509, 511, 514, 516, 519, 521, 524, 526, 529, 531, 534, 536, 539, 541, 544, 546, 549, 551, 554, 556, 559, 561, 564, 566, 569, 571, 574, 576, 579, 581, 584, 586, 589, 591, 594, 596, 599, 601, 604, 606, 609, 611, 614, 616, 619, 621, 624, 626, 629, 631, 634, 636, 639, 641, 644, 646, 649, 651, 654, 656, 659, 661, 664, 666, 669, 671, 674, 676, 679, 681, 684, 686, 689, 691, 694, 696, 699, 701, 704, 706, 709, 711, 714, 716, 719, 721, 724, 726, 729, 731, 735, 736, 740, 741, 745, 746, 750, 751, 755, 849, 866, 869, 871, 874, 881, 884, 886, 889, 891, 894, 906, 909, 911, 914, 978, 981, 983, 986, 1041, 1042, 1043, 1046, 1047, 1050, 1053, 1056, 1062, 1065, 1066, 1069, 1070, 1073, 1075, 1079, 1093, 1095, 1098, 1100, 1103, 1105, 1108, 1110, 1112, 1114, 1117, 1119, 1122, 1124, 1125, 1127, 1130, 1132, 1135, 1139, 1142, 1149, 1152, 1154, 1157, 1159, 1160, 1163, 1165, 1168, 1170, 1173, 1176, 1179, 1181, 1184, 1185, 1187, 1188, 1191, 1193, 1196, 1198, 1201, 1203, 1206, 1208, 1210, 1212, 1215, 1217, 1220, 1222, 1225, 1227, 1230, 1232, 1235, 1242, 1245, 1247, 1251, 1252, 1256, 1257, 1261, 1262, 1266, 1272, 1276, 1277, 1281, 1282, 1286, 1287, 1288, 1291, 1293, 1296, 1298, 1301, 1303, 1304, 1307, 1309, 1312, 1314, 1317, 1319, 1322, 1324, 1327, 1329, 1332, 1334, 1337, 1339, 1342, 1344, 1347, 1354, 1357, 1359, 1362, 1364, 1368, 1369, 1373, 1379, 1383, 1406, 1407, 1410, 1411, 1412, 1415, 1417, 1420, 1422, 1425, 1427, 1430, 1432, 1433, 1436, 1438, 1439, 1442, 1444, 1447, 1449, 1452, 1454, 1457, 1459, 1463, 1464, 1465, 1469, 1470, 1474, 1475, 1479, 1480, 1484, 1485, 1486, 1489, 1491, 1494, 1496, 1499, 1501, 1502, 1505, 1507, 1510, 1516, 1519, 1520, 1523, 1524, 1527, 1528, 1531, 1532, 1535, 1536, 1540, 1541, 1545, 1546, 1547, 1550, 1552, 1555], "exist": [1, 3, 27, 28, 32, 34, 35, 58, 59, 70, 71, 91, 92, 119, 120, 138, 140, 145, 146, 150, 151, 152, 153, 155, 157, 159, 176, 849, 878, 880, 1303, 1309, 1312, 1339, 1342, 1557], "accord": [1, 3, 32, 34, 35, 50, 51, 58, 59, 82, 83, 99, 100, 131, 132, 138, 143, 150, 153, 155, 310, 328, 331, 340, 346, 349, 435, 451, 454, 501, 504, 661, 664, 849, 906, 909, 919, 978, 981, 983, 986, 1159, 1272, 1276, 1303, 1314, 1317, 1379, 1383, 1501, 1532, 1535, 1541, 1545], "given": [1, 3, 28, 29, 32, 34, 35, 36, 38, 58, 59, 68, 69, 70, 71, 74, 75, 88, 91, 92, 107, 108, 109, 110, 117, 118, 119, 120, 123, 124, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 160, 161, 163, 175, 189, 225, 227, 228, 230, 231, 243, 263, 264, 266, 267, 310, 340, 385, 401, 412, 420, 422, 423, 424, 425, 431, 434, 435, 756, 849, 911, 914, 978, 981, 983, 986, 994, 1042, 1043, 1046, 1047, 1050, 1053, 1056, 1062, 1065, 1066, 1069, 1070, 1073, 1093, 1095, 1098, 1100, 1103, 1105, 1108, 1110, 1112, 1114, 1117, 1119, 1122, 1124, 1125, 1127, 1130, 1159, 1282, 1286, 1287, 1288, 1291, 1293, 1296, 1298, 1301, 1303, 1304, 1307, 1319, 1322, 1324, 1327, 1334, 1337, 1344, 1347, 1349, 1352, 1369, 1373, 1374, 1378, 1384, 1388, 1395, 1396, 1406, 1411, 1417, 1420, 1422, 1425, 1427, 1430, 1433, 1436, 1438, 1485, 1491, 1494, 1496, 1499, 1501, 1502, 1505, 1507, 1510, 1546, 1566, 1569, 1571, 1581, 1593, 1595, 1597, 1603], "check_ani": 1, "ar": [1, 4, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 38, 41, 42, 43, 44, 45, 54, 55, 56, 57, 58, 59, 66, 67, 70, 71, 74, 75, 76, 77, 88, 91, 92, 93, 94, 97, 98, 103, 104, 105, 106, 107, 108, 115, 116, 119, 120, 123, 124, 125, 126, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 175, 176, 177, 187, 228, 230, 231, 401, 415, 419, 421, 425, 435, 516, 519, 526, 529, 636, 639, 641, 644, 686, 689, 701, 704, 711, 714, 736, 740, 849, 850, 853, 857, 859, 860, 863, 865, 916, 922, 936, 952, 976, 977, 992, 1008, 1012, 1033, 1042, 1051, 1074, 1080, 1092, 1093, 1139, 1142, 1159, 1165, 1168, 1181, 1184, 1185, 1187, 1198, 1201, 1203, 1206, 1212, 1215, 1227, 1230, 1247, 1251, 1252, 1256, 1267, 1271, 1272, 1276, 1303, 1304, 1307, 1309, 1312, 1324, 1327, 1344, 1347, 1354, 1357, 1388, 1390, 1394, 1399, 1400, 1411, 1417, 1420, 1422, 1425, 1427, 1430, 1438, 1439, 1442, 1444, 1447, 1449, 1452, 1454, 1457, 1464, 1465, 1469, 1475, 1479, 1557, 1558], "check_elem_in_list": [1, 153], "elem": [1, 5], "list": [1, 5, 32, 33, 34, 35, 43, 44, 45, 46, 47, 48, 49, 50, 51, 56, 57, 58, 59, 64, 65, 70, 71, 72, 73, 86, 87, 89, 90, 91, 92, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 138, 141, 143, 144, 145, 148, 149, 153, 154, 155, 156, 159, 162, 163, 164, 176, 228, 230, 231, 233, 235, 269, 272, 274, 277, 310, 318, 321, 401, 406, 425, 849, 856, 974, 1014, 1018, 1030, 1041, 1042, 1074, 1080, 1092, 1093, 1095, 1098, 1100, 1103, 1105, 1108, 1110, 1112, 1114, 1117, 1119, 1122, 1124, 1125, 1127, 1130, 1159, 1237, 1240, 1257, 1261, 1303, 1309, 1312, 1349, 1352, 1359, 1362, 1374, 1378, 1388, 1389, 1390, 1391, 1394, 1396, 1399, 1400, 1404, 1405, 1406, 1407, 1410, 1438, 1454, 1457, 1464, 1470, 1474, 1475, 1479, 1558], "check_equ": [1, 153], "x1": [1, 6, 12, 14, 15, 38, 41, 42, 50, 51, 54, 55, 56, 57, 66, 67, 76, 77, 99, 100, 103, 104, 105, 106, 107, 108, 115, 116, 125, 126, 129, 130, 138, 143, 145, 147, 149, 153, 228, 305, 309, 310, 318, 321, 341, 343, 385, 395, 401, 419, 435, 451, 454, 471, 474, 481, 484, 491, 494, 496, 499, 501, 504, 506, 509, 531, 534, 536, 539, 561, 564, 566, 569, 571, 574, 596, 599, 601, 604, 626, 629, 631, 634, 641, 644, 646, 649, 651, 654, 656, 659, 661, 664, 671, 674, 681, 684, 696, 699, 731, 735, 751, 755, 849, 850, 853, 857, 859, 1093, 1114, 1117, 1159, 1165, 1168, 1188, 1191, 1198, 1201, 1222, 1225, 1242, 1245, 1257, 1261, 1272, 1276, 1438, 1459, 1463, 1485, 1491, 1494], "x2": [1, 6, 12, 14, 15, 50, 51, 54, 55, 56, 57, 58, 59, 66, 67, 76, 77, 99, 100, 103, 104, 105, 106, 107, 108, 115, 116, 125, 126, 138, 143, 145, 147, 149, 153, 228, 305, 309, 310, 318, 321, 385, 395, 401, 419, 435, 451, 454, 471, 474, 481, 484, 491, 494, 496, 499, 501, 504, 506, 509, 531, 534, 536, 539, 561, 564, 566, 569, 571, 574, 596, 599, 601, 604, 626, 629, 631, 634, 641, 644, 646, 649, 651, 654, 656, 659, 661, 664, 671, 674, 681, 684, 696, 699, 731, 735, 751, 755, 849, 850, 853, 857, 859, 1093, 1114, 1117, 1159, 1165, 1168, 1188, 1191, 1198, 1201, 1222, 1225, 1242, 1245, 1257, 1261, 1272, 1276, 1438, 1459, 1463], "invers": [1, 6, 7, 54, 55, 103, 104, 115, 116, 175, 435, 441, 444, 446, 449, 456, 459, 461, 464, 466, 469, 471, 474, 476, 479, 1159, 1193, 1196, 1208, 1210, 1227, 1230], "check_exist": 1, "x": [1, 7, 13, 17, 20, 25, 32, 38, 39, 40, 41, 42, 43, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 78, 79, 80, 81, 82, 83, 84, 85, 88, 89, 90, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 140, 141, 143, 145, 146, 147, 148, 149, 150, 152, 153, 154, 155, 156, 157, 159, 161, 162, 163, 164, 189, 190, 193, 195, 198, 200, 203, 205, 208, 210, 213, 215, 218, 220, 223, 228, 233, 235, 240, 242, 244, 247, 252, 255, 257, 258, 261, 269, 272, 274, 277, 279, 282, 287, 290, 292, 296, 297, 301, 302, 304, 305, 309, 310, 313, 316, 323, 326, 328, 331, 333, 339, 340, 341, 343, 345, 346, 349, 357, 360, 362, 369, 372, 374, 377, 386, 389, 401, 406, 407, 410, 415, 419, 420, 421, 424, 426, 430, 431, 434, 435, 436, 439, 441, 444, 446, 449, 451, 454, 456, 459, 461, 464, 466, 469, 471, 474, 476, 479, 481, 484, 486, 489, 496, 499, 506, 509, 511, 514, 516, 519, 521, 524, 526, 529, 541, 544, 546, 549, 551, 554, 556, 559, 566, 569, 571, 574, 576, 579, 581, 584, 586, 589, 591, 594, 596, 599, 601, 604, 606, 609, 611, 614, 616, 619, 621, 624, 626, 629, 631, 634, 636, 639, 641, 644, 646, 649, 651, 654, 656, 659, 666, 669, 676, 679, 686, 689, 691, 694, 701, 704, 706, 709, 711, 714, 716, 719, 721, 724, 726, 729, 731, 735, 736, 740, 741, 745, 746, 750, 849, 850, 853, 856, 857, 859, 860, 863, 865, 866, 869, 871, 874, 878, 880, 881, 884, 886, 889, 891, 894, 896, 898, 899, 902, 906, 909, 911, 914, 919, 920, 921, 923, 926, 931, 934, 937, 940, 942, 945, 947, 950, 953, 956, 958, 961, 963, 966, 968, 971, 973, 974, 990, 991, 993, 996, 998, 1001, 1008, 1012, 1014, 1018, 1020, 1024, 1025, 1029, 1030, 1036, 1040, 1041, 1042, 1051, 1052, 1057, 1059, 1061, 1075, 1079, 1081, 1082, 1086, 1087, 1091, 1093, 1094, 1095, 1098, 1100, 1103, 1105, 1108, 1110, 1112, 1114, 1117, 1119, 1122, 1124, 1125, 1127, 1130, 1132, 1135, 1138, 1139, 1142, 1144, 1147, 1149, 1152, 1154, 1157, 1159, 1160, 1163, 1165, 1168, 1170, 1173, 1175, 1176, 1179, 1181, 1184, 1185, 1187, 1193, 1196, 1198, 1201, 1203, 1206, 1208, 1210, 1212, 1215, 1217, 1220, 1222, 1225, 1227, 1230, 1232, 1235, 1237, 1240, 1247, 1251, 1252, 1256, 1257, 1261, 1262, 1266, 1267, 1271, 1277, 1281, 1287, 1288, 1291, 1293, 1296, 1298, 1301, 1303, 1304, 1307, 1309, 1312, 1314, 1317, 1319, 1322, 1324, 1327, 1329, 1332, 1334, 1337, 1339, 1342, 1344, 1347, 1349, 1352, 1354, 1357, 1359, 1362, 1364, 1368, 1369, 1373, 1374, 1378, 1379, 1383, 1388, 1389, 1391, 1394, 1396, 1398, 1399, 1400, 1404, 1405, 1406, 1407, 1410, 1411, 1417, 1420, 1422, 1425, 1427, 1430, 1433, 1436, 1438, 1439, 1442, 1444, 1447, 1449, 1452, 1454, 1457, 1459, 1463, 1464, 1465, 1469, 1470, 1474, 1475, 1479, 1480, 1484, 1485, 1486, 1489, 1491, 1494, 1496, 1499, 1501, 1502, 1505, 1507, 1510, 1512, 1515, 1516, 1519, 1520, 1523, 1524, 1527, 1528, 1531, 1532, 1535, 1536, 1540, 1541, 1545, 1546, 1547, 1550, 1552, 1555, 1558], "check_fals": 1, "express": [1, 8, 16, 54, 55, 56, 57, 103, 104, 105, 106, 146, 148, 153, 159, 164, 435, 441, 444, 456, 459, 466, 469, 471, 474, 516, 519, 526, 529, 686, 689, 711, 714, 736, 740], "check_fill_value_and_dtype_are_compat": 1, "fill_valu": [1, 9, 48, 49, 76, 77, 97, 98, 125, 126, 143, 154, 156, 228, 257, 258, 261, 435, 571, 574, 601, 604, 1438, 1454, 1457], "dtype": [1, 9, 38, 41, 42, 48, 49, 50, 51, 64, 65, 66, 67, 74, 75, 76, 77, 82, 83, 97, 98, 99, 100, 105, 106, 107, 108, 113, 114, 115, 116, 123, 124, 125, 126, 131, 132, 138, 140, 143, 144, 145, 148, 150, 151, 153, 154, 155, 156, 159, 161, 228, 230, 231, 233, 235, 243, 244, 247, 249, 250, 257, 258, 261, 263, 264, 266, 267, 274, 277, 279, 282, 284, 285, 287, 290, 302, 304, 305, 309, 310, 311, 312, 313, 316, 318, 321, 328, 331, 334, 335, 336, 337, 339, 340, 345, 346, 349, 351, 352, 354, 355, 357, 360, 362, 363, 364, 367, 369, 372, 374, 377, 379, 382, 384, 385, 386, 389, 391, 392, 393, 394, 396, 399, 400, 401, 421, 435, 616, 619, 849, 904, 905, 1020, 1024, 1093, 1105, 1108, 1132, 1135, 1159, 1203, 1206, 1411, 1417, 1420, 1422, 1425, 1427, 1430, 1438, 1439, 1442, 1444, 1447, 1485, 1496, 1499, 1501, 1502, 1505, 1507, 1510, 1528, 1531, 1536, 1540, 1546, 1547, 1550, 1552, 1555, 1558], "check_gather_input_valid": 1, "param": [1, 10, 11, 88, 91, 92, 93, 94, 107, 108, 164, 849, 855, 906, 909, 911, 914], "indic": [1, 10, 11, 32, 48, 49, 56, 57, 58, 59, 64, 65, 70, 71, 72, 73, 76, 77, 78, 79, 80, 81, 91, 92, 97, 98, 99, 100, 105, 106, 107, 108, 113, 114, 115, 116, 119, 120, 121, 122, 125, 126, 127, 128, 129, 130, 142, 148, 149, 164, 189, 200, 203, 215, 218, 228, 233, 235, 279, 282, 435, 706, 709, 849, 906, 909, 911, 914, 919, 978, 981, 983, 986, 1041, 1042, 1051, 1093, 1095, 1098, 1100, 1103, 1105, 1108, 1110, 1112, 1114, 1117, 1119, 1122, 1124, 1125, 1127, 1130, 1159, 1277, 1281, 1303, 1339, 1342, 1344, 1347, 1388, 1389, 1391, 1393, 1395, 1396, 1397, 1399, 1402, 1403, 1404, 1405, 1406, 1407, 1410, 1411, 1412, 1415, 1438, 1439, 1442, 1444, 1447, 1449, 1452, 1454, 1457, 1464, 1465, 1469, 1475, 1479, 1485, 1486, 1489, 1491, 1494, 1496, 1499, 1558], "axi": [1, 10, 39, 40, 48, 49, 56, 57, 58, 59, 66, 67, 68, 69, 70, 71, 76, 77, 80, 81, 82, 83, 84, 85, 89, 90, 91, 92, 97, 98, 105, 106, 107, 108, 115, 116, 117, 118, 119, 120, 125, 126, 129, 130, 131, 132, 133, 134, 141, 143, 145, 147, 149, 150, 152, 153, 155, 157, 159, 161, 164, 175, 189, 200, 203, 215, 218, 228, 263, 264, 266, 267, 279, 282, 401, 425, 849, 906, 909, 1041, 1093, 1127, 1130, 1159, 1165, 1168, 1176, 1179, 1203, 1206, 1272, 1276, 1277, 1281, 1287, 1293, 1296, 1298, 1301, 1303, 1309, 1312, 1314, 1317, 1319, 1322, 1324, 1327, 1334, 1337, 1344, 1347, 1349, 1352, 1354, 1357, 1359, 1362, 1364, 1368, 1369, 1373, 1374, 1378, 1379, 1383, 1411, 1433, 1436, 1438, 1439, 1442, 1444, 1447, 1485, 1486, 1489, 1496, 1499, 1501, 1502, 1505, 1507, 1510, 1516, 1519, 1520, 1523, 1524, 1527, 1528, 1531, 1532, 1535, 1536, 1540, 1541, 1545, 1546, 1547, 1550, 1552, 1555], "batch_dim": [1, 10, 11, 58, 59, 107, 108, 849, 906, 909, 911, 914], "check_gather_nd_input_valid": 1, "check_great": 1, "allow_equ": [1, 12, 14, 147], "check_isinst": 1, "allowed_typ": [1, 13], "check_less": [1, 147], "check_shap": [1, 91, 92], "check_tru": 1, "true": [1, 16, 38, 39, 40, 41, 42, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 64, 65, 66, 67, 68, 69, 70, 71, 74, 75, 76, 77, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 141, 143, 145, 147, 148, 149, 150, 152, 153, 154, 155, 157, 159, 162, 163, 164, 189, 190, 193, 225, 226, 228, 257, 263, 264, 269, 272, 310, 313, 316, 328, 331, 333, 351, 352, 354, 355, 364, 367, 369, 372, 374, 377, 379, 382, 400, 401, 406, 407, 410, 413, 414, 417, 420, 421, 422, 434, 435, 481, 484, 536, 539, 566, 569, 571, 574, 576, 579, 581, 584, 586, 589, 591, 594, 596, 599, 601, 604, 631, 634, 636, 639, 641, 644, 646, 649, 671, 674, 696, 699, 849, 850, 853, 857, 859, 860, 863, 878, 880, 896, 898, 899, 902, 904, 905, 917, 918, 919, 922, 923, 926, 931, 934, 958, 961, 968, 971, 988, 989, 992, 994, 996, 997, 1014, 1018, 1020, 1024, 1031, 1032, 1033, 1035, 1036, 1040, 1042, 1047, 1050, 1053, 1056, 1057, 1059, 1062, 1065, 1066, 1069, 1070, 1073, 1074, 1075, 1079, 1080, 1092, 1093, 1132, 1135, 1159, 1160, 1163, 1203, 1206, 1247, 1251, 1267, 1271, 1277, 1281, 1287, 1288, 1291, 1293, 1296, 1298, 1301, 1303, 1339, 1342, 1349, 1352, 1374, 1378, 1384, 1385, 1386, 1387, 1388, 1389, 1390, 1394, 1398, 1399, 1401, 1411, 1412, 1415, 1438, 1439, 1442, 1444, 1447, 1454, 1457, 1459, 1463, 1464, 1465, 1469, 1470, 1474, 1475, 1479, 1480, 1484, 1485, 1486, 1489, 1496, 1499, 1501, 1502, 1505, 1507, 1510, 1516, 1519, 1520, 1523, 1524, 1527, 1528, 1531, 1532, 1535, 1536, 1540, 1541, 1545, 1546, 1547, 1550, 1552, 1555], "assert": [2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 91, 92, 137, 138, 148, 153, 155, 156, 161, 162, 849, 860, 863], "support": [2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 27, 28, 29, 31, 35, 40, 42, 44, 45, 46, 47, 49, 51, 53, 55, 57, 58, 59, 60, 61, 63, 65, 67, 69, 71, 73, 75, 77, 79, 81, 83, 85, 87, 90, 92, 94, 96, 98, 100, 101, 102, 104, 106, 107, 108, 109, 110, 112, 114, 115, 116, 118, 120, 122, 124, 126, 128, 130, 132, 134, 136, 138, 139, 141, 144, 145, 146, 149, 150, 151, 152, 154, 155, 157, 158, 159, 161, 162, 164, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 226, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 334, 335, 336, 337, 338, 339, 340, 341, 342, 343, 344, 345, 346, 347, 348, 349, 350, 351, 352, 353, 354, 355, 356, 357, 358, 359, 360, 361, 362, 363, 364, 365, 366, 367, 368, 369, 370, 371, 372, 373, 374, 375, 376, 377, 378, 379, 380, 381, 382, 383, 384, 385, 386, 387, 388, 389, 390, 391, 392, 393, 394, 395, 396, 397, 398, 399, 400, 401, 402, 403, 404, 405, 406, 407, 408, 409, 410, 411, 412, 413, 414, 415, 416, 417, 418, 419, 420, 421, 422, 423, 424, 425, 426, 427, 428, 429, 430, 431, 432, 433, 434, 435, 436, 437, 438, 439, 440, 441, 442, 443, 444, 445, 446, 447, 448, 449, 450, 451, 452, 453, 454, 455, 456, 457, 458, 459, 460, 461, 462, 463, 464, 465, 466, 467, 468, 469, 470, 471, 472, 473, 474, 475, 476, 477, 478, 479, 480, 481, 482, 483, 484, 485, 486, 487, 488, 489, 490, 491, 492, 493, 494, 495, 496, 497, 498, 499, 500, 501, 502, 503, 504, 505, 506, 507, 508, 509, 510, 511, 512, 513, 514, 515, 516, 517, 518, 519, 520, 521, 522, 523, 524, 525, 526, 527, 528, 529, 530, 531, 532, 533, 534, 535, 536, 537, 538, 539, 540, 541, 542, 543, 544, 545, 546, 547, 548, 549, 550, 551, 552, 553, 554, 555, 556, 557, 558, 559, 560, 561, 562, 563, 564, 565, 566, 567, 568, 569, 570, 571, 572, 573, 574, 575, 576, 577, 578, 579, 580, 581, 582, 583, 584, 585, 586, 587, 588, 589, 590, 591, 592, 593, 594, 595, 596, 597, 598, 599, 600, 601, 602, 603, 604, 605, 606, 607, 608, 609, 610, 611, 612, 613, 614, 615, 616, 617, 618, 619, 620, 621, 622, 623, 624, 625, 626, 627, 628, 629, 630, 631, 632, 633, 634, 635, 636, 637, 638, 639, 640, 641, 642, 643, 644, 645, 646, 647, 648, 649, 650, 651, 652, 653, 654, 655, 656, 657, 658, 659, 660, 661, 662, 663, 664, 665, 666, 667, 668, 669, 670, 671, 672, 673, 674, 675, 676, 677, 678, 679, 680, 681, 682, 683, 684, 685, 686, 687, 688, 689, 690, 691, 692, 693, 694, 695, 696, 697, 698, 699, 700, 701, 702, 703, 704, 705, 706, 707, 708, 709, 710, 711, 712, 713, 714, 715, 716, 717, 718, 719, 720, 721, 722, 723, 724, 725, 726, 727, 728, 729, 730, 731, 732, 733, 734, 735, 736, 737, 738, 739, 740, 741, 742, 743, 744, 745, 746, 747, 748, 749, 750, 751, 752, 753, 754, 755, 764, 765, 766, 767, 768, 769, 770, 771, 772, 773, 774, 775, 776, 777, 778, 779, 780, 781, 782, 783, 786, 787, 788, 789, 790, 791, 792, 793, 794, 795, 796, 797, 798, 799, 800, 802, 803, 804, 805, 806, 810, 811, 812, 813, 814, 815, 816, 817, 818, 819, 821, 822, 823, 824, 825, 826, 827, 828, 829, 832, 833, 834, 835, 836, 840, 841, 842, 843, 844, 848, 849, 850, 851, 852, 853, 854, 855, 856, 857, 858, 859, 860, 861, 862, 863, 864, 865, 866, 867, 868, 869, 870, 871, 872, 873, 874, 875, 876, 877, 878, 879, 880, 881, 882, 883, 884, 885, 886, 887, 888, 889, 890, 891, 892, 893, 894, 895, 896, 897, 898, 899, 900, 901, 902, 903, 904, 905, 906, 907, 908, 909, 910, 911, 912, 913, 914, 915, 916, 917, 918, 919, 920, 921, 922, 923, 924, 925, 926, 927, 928, 929, 930, 931, 932, 933, 934, 935, 936, 937, 938, 939, 940, 941, 942, 943, 944, 945, 946, 947, 948, 949, 950, 951, 952, 953, 954, 955, 956, 957, 958, 959, 960, 961, 962, 963, 964, 965, 966, 967, 968, 969, 970, 971, 972, 973, 974, 975, 976, 977, 978, 979, 980, 981, 982, 983, 984, 985, 986, 987, 988, 989, 990, 991, 992, 993, 994, 995, 996, 997, 998, 999, 1000, 1001, 1002, 1003, 1004, 1005, 1006, 1007, 1008, 1009, 1010, 1011, 1012, 1013, 1014, 1015, 1016, 1017, 1018, 1019, 1020, 1021, 1022, 1023, 1024, 1025, 1026, 1027, 1028, 1029, 1030, 1031, 1032, 1033, 1034, 1035, 1036, 1037, 1038, 1039, 1040, 1041, 1042, 1043, 1044, 1045, 1046, 1047, 1048, 1049, 1050, 1051, 1052, 1053, 1054, 1055, 1056, 1057, 1058, 1059, 1060, 1061, 1062, 1063, 1064, 1065, 1066, 1067, 1068, 1069, 1070, 1071, 1072, 1073, 1074, 1075, 1076, 1077, 1078, 1079, 1080, 1081, 1082, 1083, 1084, 1085, 1086, 1087, 1088, 1089, 1090, 1091, 1092, 1093, 1094, 1095, 1096, 1097, 1098, 1099, 1100, 1101, 1102, 1103, 1104, 1105, 1106, 1107, 1108, 1109, 1110, 1111, 1112, 1113, 1114, 1115, 1116, 1117, 1118, 1119, 1120, 1121, 1122, 1123, 1124, 1125, 1126, 1127, 1128, 1129, 1130, 1131, 1132, 1133, 1134, 1135, 1136, 1137, 1138, 1139, 1140, 1141, 1142, 1143, 1144, 1145, 1146, 1147, 1148, 1149, 1150, 1151, 1152, 1153, 1154, 1155, 1156, 1157, 1158, 1159, 1160, 1161, 1162, 1163, 1164, 1165, 1166, 1167, 1168, 1169, 1170, 1171, 1172, 1173, 1174, 1175, 1176, 1177, 1178, 1179, 1180, 1181, 1182, 1183, 1184, 1185, 1186, 1187, 1188, 1189, 1190, 1191, 1192, 1193, 1194, 1195, 1196, 1197, 1198, 1199, 1200, 1201, 1202, 1203, 1204, 1205, 1206, 1207, 1208, 1209, 1210, 1211, 1212, 1213, 1214, 1215, 1216, 1217, 1218, 1219, 1220, 1221, 1222, 1223, 1224, 1225, 1226, 1227, 1228, 1229, 1230, 1231, 1232, 1233, 1234, 1235, 1236, 1237, 1238, 1239, 1240, 1241, 1242, 1243, 1244, 1245, 1246, 1247, 1248, 1249, 1250, 1251, 1252, 1253, 1254, 1255, 1256, 1257, 1258, 1259, 1260, 1261, 1262, 1263, 1264, 1265, 1266, 1267, 1268, 1269, 1270, 1271, 1272, 1273, 1274, 1275, 1276, 1277, 1278, 1279, 1280, 1281, 1282, 1283, 1284, 1285, 1286, 1288, 1289, 1290, 1291, 1292, 1293, 1294, 1295, 1296, 1297, 1298, 1299, 1300, 1301, 1302, 1304, 1305, 1306, 1307, 1308, 1309, 1310, 1311, 1312, 1313, 1314, 1315, 1316, 1317, 1318, 1319, 1320, 1321, 1322, 1323, 1324, 1325, 1326, 1327, 1328, 1329, 1330, 1331, 1332, 1333, 1334, 1335, 1336, 1337, 1338, 1339, 1340, 1341, 1342, 1343, 1344, 1345, 1346, 1347, 1348, 1349, 1350, 1351, 1352, 1353, 1354, 1355, 1356, 1357, 1358, 1359, 1360, 1361, 1362, 1363, 1364, 1365, 1366, 1367, 1368, 1369, 1370, 1371, 1372, 1373, 1374, 1375, 1376, 1377, 1378, 1379, 1380, 1381, 1382, 1383, 1385, 1386, 1387, 1389, 1390, 1391, 1392, 1393, 1394, 1395, 1396, 1397, 1398, 1399, 1400, 1401, 1402, 1403, 1404, 1405, 1407, 1408, 1409, 1410, 1412, 1413, 1414, 1415, 1416, 1417, 1418, 1419, 1420, 1421, 1422, 1423, 1424, 1425, 1426, 1427, 1428, 1429, 1430, 1431, 1432, 1433, 1434, 1435, 1436, 1437, 1439, 1440, 1441, 1442, 1443, 1444, 1445, 1446, 1447, 1448, 1449, 1450, 1451, 1452, 1453, 1454, 1455, 1456, 1457, 1458, 1459, 1460, 1461, 1462, 1463, 1465, 1466, 1467, 1468, 1469, 1470, 1471, 1472, 1473, 1474, 1475, 1476, 1477, 1478, 1479, 1480, 1481, 1482, 1483, 1484, 1486, 1487, 1488, 1489, 1490, 1491, 1492, 1493, 1494, 1495, 1496, 1497, 1498, 1499, 1500, 1502, 1503, 1504, 1505, 1506, 1507, 1508, 1509, 1510, 1511, 1512, 1513, 1514, 1515, 1516, 1517, 1518, 1519, 1520, 1521, 1522, 1523, 1524, 1525, 1526, 1527, 1528, 1529, 1530, 1531, 1532, 1533, 1534, 1535, 1536, 1537, 1538, 1539, 1540, 1541, 1542, 1543, 1544, 1545, 1547, 1548, 1549, 1550, 1551, 1552, 1553, 1554, 1555, 1556, 1557, 1558, 1562, 1563, 1564, 1567, 1568, 1570, 1572, 1573, 1574, 1575, 1576, 1577, 1578, 1579, 1580, 1582, 1583, 1584, 1585, 1586, 1587, 1588, 1589, 1590, 1591, 1592, 1594, 1596, 1598, 1599, 1600, 1601, 1602, 1604, 1605, 1607], "framework": [2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 27, 28, 29, 34, 35, 40, 42, 43, 44, 45, 46, 47, 49, 51, 53, 55, 57, 58, 59, 60, 61, 63, 65, 67, 69, 71, 73, 75, 77, 79, 81, 83, 85, 87, 90, 92, 94, 96, 98, 100, 102, 104, 106, 108, 109, 110, 112, 114, 116, 118, 120, 122, 124, 126, 128, 130, 132, 134, 136, 137, 138, 139, 140, 143, 144, 145, 149, 150, 151, 153, 154, 155, 156, 157, 158, 159, 161, 164, 175, 176, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 334, 335, 336, 337, 338, 339, 340, 341, 342, 343, 344, 345, 346, 347, 348, 349, 350, 351, 352, 353, 354, 355, 356, 357, 358, 359, 360, 361, 362, 363, 364, 365, 366, 367, 368, 369, 370, 371, 372, 373, 374, 375, 376, 377, 378, 379, 380, 381, 382, 383, 384, 385, 386, 387, 388, 389, 390, 391, 392, 393, 394, 395, 396, 397, 398, 399, 400, 401, 402, 403, 404, 405, 406, 407, 408, 409, 410, 411, 412, 413, 414, 415, 416, 417, 418, 419, 420, 421, 422, 423, 424, 425, 426, 427, 428, 429, 430, 431, 432, 433, 434, 436, 437, 438, 439, 440, 441, 442, 443, 444, 445, 446, 447, 448, 449, 450, 451, 452, 453, 454, 455, 456, 457, 458, 459, 460, 461, 462, 463, 464, 465, 466, 467, 468, 469, 470, 471, 472, 473, 474, 475, 476, 477, 478, 479, 480, 481, 482, 483, 484, 485, 486, 487, 488, 489, 490, 491, 492, 493, 494, 495, 496, 497, 498, 499, 500, 501, 502, 503, 504, 505, 506, 507, 508, 509, 510, 511, 512, 513, 514, 515, 516, 517, 518, 519, 520, 521, 522, 523, 524, 525, 526, 527, 528, 529, 530, 531, 532, 533, 534, 535, 536, 537, 538, 539, 540, 541, 542, 543, 544, 545, 546, 547, 548, 549, 550, 551, 552, 553, 554, 555, 556, 557, 558, 559, 560, 561, 562, 563, 564, 565, 566, 567, 568, 569, 570, 571, 572, 573, 574, 575, 576, 577, 578, 579, 580, 581, 582, 583, 584, 585, 586, 587, 588, 589, 590, 591, 592, 593, 594, 595, 596, 597, 598, 599, 600, 601, 602, 603, 604, 605, 606, 607, 608, 609, 610, 611, 612, 613, 614, 615, 616, 617, 618, 619, 620, 621, 622, 623, 624, 625, 626, 627, 628, 629, 630, 631, 632, 633, 634, 635, 636, 637, 638, 639, 640, 641, 642, 643, 644, 645, 646, 647, 648, 649, 650, 651, 652, 653, 654, 655, 656, 657, 658, 659, 660, 661, 662, 663, 664, 665, 666, 667, 668, 669, 670, 671, 672, 673, 674, 675, 676, 677, 678, 679, 680, 681, 682, 683, 684, 685, 686, 687, 688, 689, 690, 691, 692, 693, 694, 695, 696, 697, 698, 699, 700, 701, 702, 703, 704, 705, 706, 707, 708, 709, 710, 711, 712, 713, 714, 715, 716, 717, 718, 719, 720, 721, 722, 723, 724, 725, 726, 727, 728, 729, 730, 731, 732, 733, 734, 735, 736, 737, 738, 739, 740, 741, 742, 743, 744, 745, 746, 747, 748, 749, 750, 751, 752, 753, 754, 755, 764, 765, 766, 767, 768, 769, 770, 771, 772, 773, 774, 775, 776, 777, 778, 779, 780, 781, 782, 783, 786, 787, 788, 789, 790, 791, 792, 793, 794, 795, 796, 797, 798, 799, 800, 802, 803, 804, 805, 806, 810, 811, 812, 813, 814, 815, 816, 817, 818, 819, 821, 822, 823, 824, 825, 826, 827, 828, 829, 832, 833, 834, 835, 836, 840, 841, 842, 843, 844, 848, 849, 850, 851, 852, 853, 854, 855, 856, 857, 858, 859, 860, 861, 862, 863, 864, 865, 866, 867, 868, 869, 870, 871, 872, 873, 874, 875, 876, 877, 878, 879, 880, 881, 882, 883, 884, 885, 886, 887, 888, 889, 890, 891, 892, 893, 894, 895, 896, 897, 898, 899, 900, 901, 902, 903, 904, 905, 906, 907, 908, 909, 910, 911, 912, 913, 914, 915, 916, 917, 918, 919, 920, 921, 922, 923, 924, 925, 926, 927, 928, 929, 930, 931, 932, 933, 934, 935, 936, 937, 938, 939, 940, 941, 942, 943, 944, 945, 946, 947, 948, 949, 950, 951, 952, 953, 954, 955, 956, 957, 958, 959, 960, 961, 962, 963, 964, 965, 966, 967, 968, 969, 970, 971, 972, 973, 974, 975, 976, 977, 978, 979, 980, 981, 982, 983, 984, 985, 986, 987, 988, 989, 990, 991, 992, 993, 994, 995, 996, 997, 998, 999, 1000, 1001, 1002, 1003, 1004, 1005, 1006, 1007, 1008, 1009, 1010, 1011, 1012, 1013, 1014, 1015, 1016, 1017, 1018, 1019, 1020, 1021, 1022, 1023, 1024, 1025, 1026, 1027, 1028, 1029, 1030, 1031, 1032, 1033, 1034, 1035, 1036, 1037, 1038, 1039, 1040, 1041, 1042, 1043, 1044, 1045, 1046, 1047, 1048, 1049, 1050, 1051, 1052, 1053, 1054, 1055, 1056, 1057, 1058, 1059, 1060, 1061, 1062, 1063, 1064, 1065, 1066, 1067, 1068, 1069, 1070, 1071, 1072, 1073, 1074, 1075, 1076, 1077, 1078, 1079, 1080, 1081, 1082, 1083, 1084, 1085, 1086, 1087, 1088, 1089, 1090, 1091, 1092, 1094, 1095, 1096, 1097, 1098, 1099, 1100, 1101, 1102, 1103, 1104, 1105, 1106, 1107, 1108, 1109, 1110, 1111, 1112, 1113, 1114, 1115, 1116, 1117, 1118, 1119, 1120, 1121, 1122, 1123, 1124, 1125, 1126, 1127, 1128, 1129, 1130, 1131, 1132, 1133, 1134, 1135, 1136, 1137, 1138, 1139, 1140, 1141, 1142, 1143, 1144, 1145, 1146, 1147, 1148, 1149, 1150, 1151, 1152, 1153, 1154, 1155, 1156, 1157, 1158, 1160, 1161, 1162, 1163, 1164, 1165, 1166, 1167, 1168, 1169, 1170, 1171, 1172, 1173, 1174, 1175, 1176, 1177, 1178, 1179, 1180, 1181, 1182, 1183, 1184, 1185, 1186, 1187, 1188, 1189, 1190, 1191, 1192, 1193, 1194, 1195, 1196, 1197, 1198, 1199, 1200, 1201, 1202, 1203, 1204, 1205, 1206, 1207, 1208, 1209, 1210, 1211, 1212, 1213, 1214, 1215, 1216, 1217, 1218, 1219, 1220, 1221, 1222, 1223, 1224, 1225, 1226, 1227, 1228, 1229, 1230, 1231, 1232, 1233, 1234, 1235, 1236, 1237, 1238, 1239, 1240, 1241, 1242, 1243, 1244, 1245, 1246, 1247, 1248, 1249, 1250, 1251, 1252, 1253, 1254, 1255, 1256, 1257, 1258, 1259, 1260, 1261, 1262, 1263, 1264, 1265, 1266, 1267, 1268, 1269, 1270, 1271, 1272, 1273, 1274, 1275, 1276, 1277, 1278, 1279, 1280, 1281, 1282, 1283, 1284, 1285, 1286, 1288, 1289, 1290, 1291, 1292, 1293, 1294, 1295, 1296, 1297, 1298, 1299, 1300, 1301, 1302, 1304, 1305, 1306, 1307, 1308, 1309, 1310, 1311, 1312, 1313, 1314, 1315, 1316, 1317, 1318, 1319, 1320, 1321, 1322, 1323, 1324, 1325, 1326, 1327, 1328, 1329, 1330, 1331, 1332, 1333, 1334, 1335, 1336, 1337, 1338, 1339, 1340, 1341, 1342, 1343, 1344, 1345, 1346, 1347, 1348, 1349, 1350, 1351, 1352, 1353, 1354, 1355, 1356, 1357, 1358, 1359, 1360, 1361, 1362, 1363, 1364, 1365, 1366, 1367, 1368, 1369, 1370, 1371, 1372, 1373, 1374, 1375, 1376, 1377, 1378, 1379, 1380, 1381, 1382, 1383, 1385, 1386, 1387, 1389, 1390, 1391, 1392, 1393, 1394, 1395, 1396, 1397, 1398, 1399, 1400, 1401, 1402, 1403, 1404, 1405, 1407, 1408, 1409, 1410, 1412, 1413, 1414, 1415, 1416, 1417, 1418, 1419, 1420, 1421, 1422, 1423, 1424, 1425, 1426, 1427, 1428, 1429, 1430, 1431, 1432, 1433, 1434, 1435, 1436, 1437, 1439, 1440, 1441, 1442, 1443, 1444, 1445, 1446, 1447, 1448, 1449, 1450, 1451, 1452, 1453, 1454, 1455, 1456, 1457, 1458, 1459, 1460, 1461, 1462, 1463, 1465, 1466, 1467, 1468, 1469, 1470, 1471, 1472, 1473, 1474, 1475, 1476, 1477, 1478, 1479, 1480, 1481, 1482, 1483, 1484, 1486, 1487, 1488, 1489, 1490, 1491, 1492, 1493, 1494, 1495, 1496, 1497, 1498, 1499, 1500, 1502, 1503, 1504, 1505, 1506, 1507, 1508, 1509, 1510, 1511, 1512, 1513, 1514, 1515, 1516, 1517, 1518, 1519, 1520, 1521, 1522, 1523, 1524, 1525, 1526, 1527, 1528, 1529, 1530, 1531, 1532, 1533, 1534, 1535, 1536, 1537, 1538, 1539, 1540, 1541, 1542, 1543, 1544, 1545, 1547, 1548, 1549, 1550, 1551, 1552, 1553, 1554, 1555, 1556, 1557, 1558, 1562, 1563, 1564, 1567, 1568, 1570, 1572, 1573, 1574, 1575, 1576, 1577, 1578, 1579, 1580, 1582, 1583, 1584, 1585, 1586, 1587, 1588, 1589, 1590, 1591, 1592, 1594, 1596, 1598, 1599, 1600, 1601, 1602, 1604, 1605, 1607], "class": [17, 23, 25, 32, 34, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 139, 141, 143, 144, 145, 146, 149, 154, 155, 157, 159, 160, 162, 163, 164, 174, 175, 176, 228, 229, 305, 309, 310, 357, 360, 401, 402, 849, 856, 947, 950, 974, 1008, 1012, 1042, 1087, 1091, 1159, 1203, 1206, 1237, 1240, 1388, 1390, 1400, 1438, 1454, 1457, 1464, 1475, 1479, 1557, 1558], "backend_handl": [17, 18, 19, 20, 21, 22, 23, 24, 25, 140, 159, 1558], "contextmanag": 17, "modul": [17, 20, 22, 24, 29, 32, 35, 86, 87, 88, 91, 92, 93, 94, 135, 136, 139, 140, 148, 150, 152, 153, 155, 159, 160, 162, 164, 175, 176, 849, 975, 1558], "base": [17, 36, 38, 39, 40, 41, 42, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 88, 89, 90, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 141, 142, 143, 147, 149, 151, 154, 155, 156, 159, 175, 228, 229, 266, 267, 310, 385, 401, 402, 435, 546, 549, 606, 609, 611, 614, 616, 619, 621, 624, 681, 684, 849, 920, 990, 1003, 1006, 1042, 1303, 1319, 1322, 1464, 1465, 1469, 1470, 1474, 1475, 1479, 1480, 1484, 1501, 1512, 1515], "object": [17, 74, 75, 88, 91, 92, 93, 94, 95, 96, 101, 102, 103, 104, 107, 108, 123, 124, 141, 151, 153, 155, 161, 164, 228, 252, 255, 310, 333, 346, 349, 385, 401, 426, 430, 1042, 1388, 1391, 1393, 1395, 1396, 1397, 1402, 1403, 1404, 1405, 1411, 1433, 1436], "__init__": [17, 20, 22, 34, 38, 41, 42, 88, 91, 92, 93, 94, 140, 143, 147, 153, 156, 159, 161, 162, 163, 164, 228, 229, 310, 401, 402, 1042, 1558], "choose_random_backend": 17, "exclud": [17, 18, 82, 83, 131, 132, 145, 159, 228, 230, 231, 1411, 1427, 1430], "none": [17, 18, 22, 25, 31, 39, 40, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 138, 140, 141, 143, 144, 145, 147, 148, 149, 150, 152, 153, 154, 155, 156, 157, 159, 161, 163, 164, 189, 190, 193, 195, 198, 200, 203, 205, 208, 210, 213, 215, 218, 220, 223, 225, 226, 227, 228, 230, 231, 233, 235, 240, 242, 243, 244, 247, 249, 250, 252, 255, 257, 258, 261, 263, 264, 266, 267, 274, 277, 279, 282, 284, 285, 287, 290, 292, 296, 297, 301, 302, 304, 305, 309, 310, 313, 316, 323, 326, 335, 336, 337, 339, 340, 346, 349, 357, 360, 363, 400, 401, 405, 406, 421, 422, 423, 424, 425, 426, 430, 433, 435, 436, 439, 441, 444, 446, 449, 451, 454, 456, 459, 461, 464, 466, 469, 471, 474, 476, 479, 481, 484, 486, 489, 491, 494, 496, 499, 501, 504, 506, 509, 511, 514, 516, 519, 521, 524, 526, 529, 531, 534, 536, 539, 541, 544, 546, 549, 551, 554, 556, 559, 561, 564, 566, 569, 571, 574, 576, 579, 581, 584, 586, 589, 591, 594, 596, 599, 601, 604, 606, 609, 611, 614, 616, 619, 621, 624, 626, 629, 631, 634, 636, 639, 641, 644, 646, 649, 651, 654, 656, 659, 661, 664, 666, 669, 671, 674, 676, 679, 681, 684, 686, 689, 691, 694, 696, 699, 701, 704, 706, 709, 711, 714, 716, 719, 721, 724, 726, 729, 731, 735, 736, 740, 741, 745, 746, 750, 751, 755, 849, 855, 866, 869, 871, 874, 878, 880, 881, 884, 886, 889, 891, 894, 896, 898, 906, 909, 911, 914, 929, 936, 952, 975, 978, 981, 983, 986, 988, 989, 990, 991, 992, 994, 998, 1001, 1003, 1006, 1030, 1031, 1032, 1033, 1034, 1035, 1041, 1042, 1043, 1046, 1047, 1050, 1051, 1053, 1056, 1062, 1065, 1066, 1069, 1070, 1073, 1074, 1075, 1079, 1080, 1092, 1093, 1094, 1095, 1098, 1100, 1103, 1105, 1108, 1110, 1112, 1114, 1117, 1119, 1122, 1124, 1125, 1127, 1130, 1132, 1135, 1139, 1142, 1144, 1147, 1149, 1152, 1154, 1157, 1159, 1160, 1163, 1165, 1168, 1170, 1173, 1175, 1176, 1179, 1181, 1184, 1185, 1187, 1188, 1191, 1193, 1196, 1198, 1201, 1203, 1206, 1208, 1210, 1212, 1215, 1217, 1220, 1222, 1225, 1227, 1230, 1242, 1245, 1252, 1256, 1257, 1261, 1262, 1266, 1267, 1271, 1272, 1276, 1277, 1281, 1282, 1286, 1287, 1288, 1291, 1293, 1296, 1298, 1301, 1303, 1304, 1307, 1309, 1312, 1314, 1317, 1319, 1322, 1324, 1327, 1329, 1332, 1334, 1337, 1339, 1342, 1344, 1347, 1349, 1352, 1354, 1357, 1359, 1362, 1364, 1368, 1369, 1373, 1379, 1383, 1384, 1385, 1386, 1387, 1388, 1389, 1394, 1399, 1400, 1401, 1406, 1407, 1410, 1411, 1412, 1415, 1417, 1420, 1422, 1425, 1427, 1430, 1432, 1433, 1436, 1438, 1439, 1442, 1444, 1447, 1449, 1452, 1454, 1457, 1459, 1463, 1464, 1480, 1484, 1485, 1486, 1489, 1491, 1494, 1496, 1499, 1501, 1502, 1505, 1507, 1510, 1512, 1515, 1516, 1519, 1520, 1523, 1524, 1527, 1528, 1531, 1532, 1535, 1536, 1540, 1541, 1545, 1546, 1547, 1550, 1552, 1555], "clear_backend_stack": 17, "current_backend": [17, 147, 150, 153, 156, 159], "kwarg": [17, 20, 43, 44, 45, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 147, 153, 159, 163, 228, 229, 849, 974, 1030], "return": [17, 20, 21, 22, 24, 25, 35, 36, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 139, 141, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 159, 161, 162, 163, 164, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 189, 190, 193, 195, 198, 200, 203, 205, 208, 210, 213, 215, 218, 220, 223, 225, 226, 228, 230, 231, 233, 235, 237, 238, 239, 240, 242, 243, 244, 247, 249, 250, 252, 255, 257, 258, 261, 263, 264, 266, 267, 269, 272, 274, 277, 279, 282, 284, 285, 287, 290, 292, 296, 297, 301, 302, 304, 305, 309, 310, 311, 312, 313, 316, 318, 321, 323, 326, 328, 331, 333, 334, 335, 336, 337, 339, 340, 341, 343, 345, 346, 349, 351, 352, 354, 355, 357, 360, 362, 363, 364, 367, 369, 372, 374, 377, 379, 382, 384, 385, 386, 389, 395, 400, 401, 403, 404, 405, 406, 407, 410, 412, 413, 414, 415, 416, 417, 418, 419, 420, 421, 422, 423, 424, 425, 426, 430, 431, 432, 433, 434, 435, 436, 439, 441, 444, 446, 449, 451, 454, 456, 459, 461, 464, 466, 469, 471, 474, 476, 479, 481, 484, 486, 489, 491, 494, 496, 499, 501, 504, 506, 509, 511, 514, 516, 519, 521, 524, 526, 529, 531, 534, 536, 539, 541, 544, 546, 549, 551, 554, 556, 559, 561, 564, 566, 569, 571, 574, 576, 579, 581, 584, 586, 589, 591, 594, 596, 599, 601, 604, 606, 609, 611, 614, 616, 619, 621, 624, 626, 629, 631, 634, 636, 639, 641, 644, 646, 649, 651, 654, 656, 659, 661, 664, 666, 669, 671, 674, 676, 679, 681, 684, 686, 689, 691, 694, 696, 699, 701, 704, 706, 709, 711, 714, 716, 719, 721, 724, 726, 729, 731, 735, 736, 740, 741, 745, 746, 750, 751, 755, 849, 850, 853, 855, 856, 857, 859, 860, 863, 865, 866, 869, 871, 874, 876, 877, 878, 880, 881, 884, 886, 889, 891, 894, 896, 898, 899, 902, 904, 905, 906, 909, 911, 914, 917, 918, 919, 920, 921, 922, 923, 926, 928, 930, 931, 934, 936, 937, 940, 942, 945, 947, 950, 952, 953, 956, 958, 961, 963, 966, 968, 971, 973, 974, 975, 976, 978, 981, 983, 986, 988, 989, 990, 991, 992, 994, 996, 997, 998, 1001, 1003, 1006, 1008, 1012, 1013, 1014, 1018, 1019, 1020, 1024, 1025, 1029, 1030, 1031, 1032, 1033, 1034, 1035, 1036, 1040, 1041, 1042, 1043, 1046, 1047, 1050, 1051, 1052, 1053, 1056, 1057, 1059, 1061, 1062, 1065, 1066, 1069, 1070, 1073, 1074, 1075, 1079, 1080, 1081, 1082, 1086, 1087, 1091, 1092, 1093, 1094, 1095, 1098, 1100, 1103, 1105, 1108, 1110, 1112, 1114, 1117, 1119, 1122, 1124, 1125, 1127, 1130, 1132, 1135, 1139, 1142, 1144, 1147, 1149, 1152, 1154, 1157, 1159, 1160, 1163, 1165, 1168, 1170, 1173, 1176, 1179, 1181, 1184, 1185, 1187, 1188, 1191, 1193, 1196, 1198, 1201, 1203, 1206, 1208, 1210, 1212, 1215, 1217, 1220, 1222, 1225, 1227, 1230, 1232, 1235, 1237, 1240, 1242, 1245, 1247, 1251, 1252, 1256, 1257, 1261, 1262, 1266, 1267, 1271, 1272, 1276, 1277, 1281, 1282, 1286, 1287, 1288, 1291, 1293, 1296, 1298, 1301, 1303, 1304, 1307, 1309, 1312, 1314, 1317, 1319, 1322, 1324, 1327, 1329, 1332, 1334, 1337, 1339, 1342, 1344, 1347, 1349, 1352, 1354, 1357, 1359, 1362, 1364, 1368, 1369, 1373, 1374, 1378, 1379, 1383, 1384, 1385, 1386, 1387, 1388, 1389, 1390, 1391, 1394, 1398, 1399, 1400, 1401, 1405, 1406, 1407, 1410, 1411, 1412, 1415, 1417, 1420, 1422, 1425, 1427, 1430, 1432, 1433, 1436, 1438, 1439, 1442, 1444, 1447, 1449, 1452, 1454, 1457, 1459, 1463, 1464, 1465, 1469, 1470, 1474, 1475, 1479, 1480, 1484, 1485, 1486, 1489, 1491, 1494, 1496, 1499, 1501, 1502, 1505, 1507, 1510, 1512, 1515, 1516, 1519, 1520, 1523, 1524, 1527, 1528, 1531, 1532, 1535, 1536, 1540, 1541, 1545, 1546, 1547, 1550, 1552, 1555, 1558], "current": [17, 20, 21, 22, 25, 29, 32, 34, 35, 36, 58, 59, 88, 91, 92, 93, 94, 138, 140, 141, 143, 144, 147, 150, 151, 153, 154, 157, 159, 164, 175, 176, 310, 340, 351, 352, 354, 355, 363, 396, 399, 400, 401, 412, 413, 414, 415, 419, 421, 434, 849, 904, 905, 916, 917, 918, 922, 936, 952, 976, 977, 997, 1008, 1012, 1042, 1074, 1092, 1388, 1389, 1398, 1399, 1558], "prioriti": [17, 20, 36, 91, 92, 152], "global_backend": [17, 20], "argument": [17, 20, 22, 27, 34, 43, 44, 45, 46, 47, 54, 55, 58, 59, 88, 91, 92, 93, 94, 95, 96, 103, 104, 107, 108, 137, 138, 139, 140, 141, 145, 146, 148, 150, 151, 154, 155, 156, 157, 159, 161, 162, 225, 226, 228, 230, 231, 233, 235, 243, 244, 247, 249, 250, 252, 255, 257, 258, 261, 263, 264, 266, 267, 269, 272, 284, 285, 287, 290, 292, 296, 297, 301, 302, 304, 305, 309, 310, 328, 331, 364, 367, 374, 377, 386, 389, 435, 436, 439, 441, 444, 446, 449, 451, 454, 456, 459, 461, 464, 466, 469, 471, 474, 476, 479, 481, 484, 486, 489, 491, 494, 501, 504, 506, 509, 511, 514, 516, 519, 521, 524, 531, 534, 536, 539, 551, 554, 556, 559, 561, 564, 566, 569, 571, 574, 576, 579, 581, 584, 586, 589, 601, 604, 611, 614, 616, 619, 621, 624, 626, 629, 631, 634, 636, 639, 641, 644, 646, 649, 661, 664, 666, 669, 671, 674, 676, 679, 681, 684, 696, 699, 701, 704, 706, 709, 711, 714, 716, 719, 721, 724, 726, 729, 731, 735, 736, 740, 741, 745, 746, 750, 849, 855, 856, 865, 878, 880, 906, 909, 923, 926, 931, 934, 937, 940, 974, 983, 986, 1008, 1012, 1025, 1029, 1030, 1041, 1042, 1057, 1059, 1075, 1079, 1082, 1086, 1087, 1091, 1093, 1105, 1108, 1127, 1130, 1139, 1142, 1154, 1157, 1159, 1160, 1163, 1165, 1168, 1170, 1173, 1176, 1179, 1181, 1184, 1185, 1187, 1193, 1196, 1198, 1201, 1203, 1206, 1208, 1210, 1212, 1215, 1217, 1220, 1222, 1225, 1227, 1230, 1232, 1235, 1237, 1240, 1242, 1245, 1247, 1251, 1252, 1256, 1257, 1261, 1272, 1276, 1277, 1281, 1282, 1286, 1303, 1304, 1307, 1309, 1312, 1314, 1317, 1319, 1322, 1324, 1327, 1329, 1332, 1334, 1337, 1339, 1342, 1344, 1347, 1349, 1352, 1354, 1357, 1359, 1362, 1364, 1368, 1369, 1373, 1374, 1378, 1379, 1383, 1388, 1394, 1406, 1407, 1410, 1438, 1439, 1442, 1444, 1447, 1454, 1457, 1459, 1463, 1464, 1465, 1469, 1470, 1474, 1475, 1479, 1480, 1484, 1485, 1486, 1489, 1496, 1499, 1501, 1516, 1519, 1520, 1523, 1524, 1527, 1528, 1531, 1532, 1535, 1536, 1540, 1541, 1545, 1546, 1547, 1550, 1552, 1555, 1557], "": [17, 20, 22, 23, 25, 28, 29, 30, 31, 32, 34, 35, 36, 48, 49, 58, 59, 60, 61, 66, 67, 82, 83, 105, 106, 107, 108, 109, 110, 115, 116, 131, 132, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 151, 152, 153, 154, 155, 156, 157, 159, 161, 162, 163, 164, 175, 176, 227, 228, 269, 272, 292, 296, 297, 301, 310, 351, 352, 354, 355, 401, 406, 413, 414, 424, 435, 696, 699, 849, 904, 905, 1008, 1012, 1042, 1047, 1050, 1052, 1053, 1056, 1061, 1062, 1065, 1070, 1073, 1159, 1212, 1215, 1247, 1251, 1252, 1256, 1388, 1400, 1501, 1532, 1535, 1541, 1545, 1557, 1558], "paramet": [17, 20, 21, 22, 24, 34, 38, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 54, 55, 56, 57, 58, 59, 60, 61, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 146, 147, 149, 151, 155, 156, 159, 161, 162, 175, 189, 190, 193, 195, 198, 200, 203, 205, 208, 210, 213, 215, 218, 220, 223, 225, 226, 228, 230, 231, 233, 235, 240, 242, 243, 244, 247, 249, 250, 252, 255, 257, 258, 261, 263, 264, 266, 267, 269, 272, 274, 277, 279, 282, 284, 285, 287, 290, 292, 296, 297, 301, 302, 304, 305, 309, 310, 311, 312, 313, 316, 318, 321, 323, 326, 328, 331, 333, 334, 335, 336, 337, 339, 340, 341, 343, 345, 346, 349, 351, 352, 354, 355, 357, 360, 362, 363, 364, 367, 369, 372, 374, 377, 379, 382, 384, 386, 389, 391, 392, 393, 394, 395, 400, 401, 402, 403, 404, 405, 406, 407, 410, 412, 413, 414, 415, 417, 419, 420, 421, 422, 423, 424, 425, 426, 430, 431, 434, 435, 436, 439, 441, 444, 446, 449, 451, 454, 456, 459, 461, 464, 466, 469, 471, 474, 476, 479, 481, 484, 486, 489, 491, 494, 496, 499, 501, 504, 506, 509, 511, 514, 516, 519, 521, 524, 526, 529, 531, 534, 536, 539, 541, 544, 546, 549, 551, 554, 556, 559, 561, 564, 566, 569, 571, 574, 576, 579, 581, 584, 586, 589, 591, 594, 596, 599, 601, 604, 606, 609, 611, 614, 616, 619, 621, 624, 626, 629, 631, 634, 636, 639, 641, 644, 646, 649, 651, 654, 656, 659, 661, 664, 666, 669, 671, 674, 676, 679, 681, 684, 686, 689, 691, 694, 696, 699, 701, 704, 706, 709, 711, 714, 716, 719, 721, 724, 726, 729, 731, 735, 736, 740, 741, 745, 746, 750, 751, 755, 849, 850, 853, 855, 856, 857, 859, 860, 863, 865, 866, 869, 871, 874, 878, 880, 881, 884, 886, 889, 891, 894, 896, 898, 899, 902, 904, 905, 906, 909, 911, 914, 919, 923, 926, 929, 931, 934, 936, 937, 940, 942, 945, 947, 950, 952, 953, 956, 958, 961, 963, 966, 968, 971, 974, 975, 978, 981, 983, 986, 990, 991, 993, 995, 996, 998, 1001, 1003, 1006, 1008, 1012, 1013, 1014, 1018, 1019, 1020, 1024, 1025, 1029, 1030, 1036, 1040, 1041, 1042, 1043, 1046, 1047, 1050, 1051, 1052, 1053, 1056, 1057, 1059, 1061, 1062, 1065, 1066, 1069, 1070, 1073, 1074, 1075, 1079, 1081, 1082, 1086, 1087, 1091, 1092, 1093, 1095, 1098, 1100, 1103, 1105, 1108, 1110, 1112, 1114, 1117, 1119, 1122, 1124, 1125, 1127, 1130, 1132, 1135, 1139, 1142, 1144, 1147, 1149, 1152, 1154, 1157, 1159, 1160, 1163, 1165, 1168, 1170, 1173, 1176, 1179, 1181, 1184, 1185, 1187, 1188, 1191, 1193, 1196, 1198, 1201, 1203, 1206, 1208, 1210, 1212, 1215, 1217, 1220, 1222, 1225, 1227, 1230, 1232, 1235, 1237, 1240, 1242, 1245, 1247, 1251, 1252, 1256, 1257, 1261, 1262, 1266, 1267, 1271, 1272, 1276, 1277, 1281, 1282, 1286, 1287, 1288, 1291, 1293, 1296, 1298, 1301, 1303, 1304, 1307, 1309, 1312, 1314, 1317, 1319, 1322, 1324, 1327, 1329, 1332, 1334, 1337, 1339, 1342, 1344, 1347, 1349, 1352, 1354, 1357, 1359, 1362, 1364, 1368, 1369, 1373, 1374, 1378, 1379, 1383, 1384, 1385, 1386, 1387, 1388, 1389, 1390, 1391, 1393, 1394, 1395, 1396, 1397, 1398, 1399, 1400, 1401, 1402, 1403, 1404, 1405, 1406, 1407, 1410, 1411, 1412, 1415, 1417, 1420, 1422, 1425, 1427, 1430, 1432, 1433, 1436, 1438, 1439, 1442, 1444, 1447, 1449, 1452, 1454, 1457, 1459, 1463, 1464, 1465, 1469, 1470, 1474, 1475, 1479, 1480, 1484, 1485, 1486, 1489, 1491, 1494, 1496, 1499, 1501, 1502, 1505, 1507, 1510, 1512, 1515, 1516, 1519, 1520, 1523, 1524, 1527, 1528, 1531, 1532, 1535, 1536, 1540, 1541, 1545, 1546, 1547, 1550, 1552, 1555], "from": [17, 20, 22, 23, 27, 28, 29, 30, 32, 33, 34, 35, 36, 43, 44, 45, 46, 47, 48, 49, 50, 51, 54, 55, 58, 59, 60, 61, 64, 65, 66, 67, 70, 71, 74, 75, 76, 77, 82, 83, 84, 85, 86, 87, 88, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 103, 104, 107, 108, 109, 110, 113, 114, 115, 116, 119, 120, 123, 124, 125, 126, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 151, 152, 153, 154, 155, 156, 157, 159, 160, 161, 162, 163, 164, 175, 176, 228, 230, 231, 244, 247, 252, 255, 257, 258, 261, 269, 272, 274, 277, 287, 290, 305, 309, 310, 328, 331, 385, 386, 389, 401, 406, 415, 419, 424, 425, 435, 526, 529, 686, 689, 721, 724, 849, 865, 878, 880, 906, 909, 911, 914, 919, 977, 993, 1014, 1018, 1041, 1042, 1047, 1050, 1062, 1065, 1080, 1093, 1127, 1130, 1132, 1135, 1149, 1152, 1159, 1176, 1179, 1247, 1251, 1267, 1271, 1272, 1276, 1303, 1309, 1312, 1324, 1327, 1339, 1342, 1354, 1357, 1384, 1385, 1386, 1387, 1388, 1390, 1400, 1401, 1411, 1412, 1415, 1417, 1420, 1422, 1425, 1427, 1430, 1438, 1444, 1447, 1459, 1463, 1464, 1465, 1469, 1475, 1479, 1501, 1502, 1505, 1507, 1510, 1528, 1531, 1532, 1535, 1536, 1540, 1541, 1545, 1546, 1547, 1550, 1552, 1555, 1557, 1558, 1564], "which": [17, 20, 21, 22, 24, 27, 28, 29, 32, 33, 34, 35, 36, 48, 49, 50, 51, 56, 57, 58, 59, 60, 61, 66, 67, 68, 69, 70, 71, 74, 75, 76, 77, 80, 81, 82, 83, 84, 85, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 113, 114, 115, 116, 117, 118, 119, 120, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 161, 162, 163, 164, 175, 176, 189, 200, 203, 215, 218, 225, 226, 227, 228, 230, 231, 233, 235, 243, 244, 247, 249, 250, 257, 258, 261, 263, 264, 266, 267, 274, 277, 279, 282, 284, 285, 287, 290, 292, 296, 297, 301, 302, 304, 305, 309, 310, 328, 331, 334, 341, 343, 346, 349, 357, 360, 363, 400, 401, 407, 410, 415, 419, 421, 423, 424, 425, 435, 696, 699, 849, 855, 878, 880, 906, 909, 911, 914, 916, 919, 947, 950, 976, 977, 983, 986, 1041, 1042, 1047, 1050, 1051, 1052, 1053, 1056, 1061, 1062, 1065, 1066, 1069, 1070, 1073, 1075, 1079, 1081, 1082, 1086, 1087, 1091, 1093, 1149, 1152, 1159, 1165, 1168, 1176, 1179, 1203, 1206, 1242, 1245, 1247, 1251, 1272, 1276, 1277, 1281, 1287, 1293, 1296, 1298, 1301, 1303, 1309, 1312, 1319, 1322, 1324, 1327, 1334, 1337, 1344, 1347, 1349, 1352, 1359, 1362, 1374, 1378, 1388, 1393, 1394, 1395, 1396, 1401, 1402, 1403, 1404, 1405, 1411, 1412, 1415, 1417, 1420, 1422, 1425, 1427, 1430, 1438, 1439, 1442, 1444, 1447, 1449, 1452, 1454, 1457, 1459, 1463, 1464, 1465, 1469, 1470, 1474, 1475, 1479, 1480, 1484, 1485, 1486, 1489, 1496, 1499, 1501, 1502, 1505, 1507, 1510, 1516, 1519, 1520, 1523, 1524, 1527, 1528, 1531, 1532, 1535, 1536, 1540, 1541, 1545, 1546, 1547, 1550, 1552, 1555, 1557, 1558], "try": [17, 20, 26, 28, 29, 32, 34, 35, 36, 91, 92, 139, 141, 143, 147, 148, 159, 161, 176, 849, 1030, 1558], "infer": [17, 20, 21, 48, 49, 58, 59, 70, 71, 97, 98, 107, 108, 119, 120, 137, 140, 143, 144, 151, 159, 164, 225, 226, 228, 230, 231, 244, 247, 257, 258, 261, 274, 277, 287, 290, 305, 309, 310, 339, 340, 849, 923, 926, 996, 1303, 1339, 1342], "when": [17, 20, 27, 28, 30, 31, 33, 34, 35, 36, 48, 49, 50, 51, 66, 67, 68, 69, 74, 75, 76, 77, 82, 83, 88, 91, 92, 93, 94, 97, 98, 99, 100, 115, 116, 117, 118, 123, 124, 125, 126, 131, 132, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 159, 161, 162, 164, 176, 228, 279, 282, 310, 313, 316, 435, 451, 454, 551, 554, 616, 619, 681, 684, 849, 947, 950, 993, 1003, 1006, 1159, 1212, 1215, 1287, 1288, 1291, 1293, 1296, 1298, 1301, 1388, 1399, 1411, 1417, 1420, 1422, 1425, 1427, 1430, 1438, 1439, 1442, 1444, 1447, 1454, 1457, 1459, 1463, 1501, 1516, 1519, 1524, 1527, 1532, 1535, 1541, 1545], "global": [17, 20, 22, 23, 25, 58, 59, 72, 73, 88, 91, 92, 93, 94, 107, 108, 121, 122, 140, 143, 144, 147, 150, 153, 159, 310, 335, 336, 337, 339, 340, 401, 423, 424, 425, 849, 920, 921, 928, 990, 991, 993, 998, 1001, 1003, 1006, 1034, 1042, 1074, 1080, 1092, 1406, 1407, 1410], "set": [17, 20, 22, 23, 25, 27, 30, 36, 43, 46, 47, 56, 57, 58, 59, 60, 61, 66, 67, 76, 77, 79, 80, 81, 82, 83, 91, 92, 105, 106, 107, 108, 109, 110, 115, 116, 125, 126, 128, 129, 130, 131, 132, 137, 138, 139, 141, 143, 144, 145, 150, 151, 152, 153, 154, 155, 156, 159, 161, 162, 310, 340, 391, 394, 401, 406, 422, 423, 424, 425, 435, 471, 474, 849, 850, 853, 988, 989, 990, 991, 992, 993, 994, 995, 1008, 1012, 1042, 1057, 1059, 1159, 1165, 1168, 1203, 1206, 1212, 1215, 1227, 1230, 1242, 1245, 1247, 1251, 1388, 1389, 1398, 1399, 1400, 1404, 1405, 1411, 1432, 1438, 1439, 1442, 1465, 1469, 1470, 1474, 1475, 1479, 1480, 1484, 1485, 1486, 1489, 1496, 1499, 1501, 1532, 1535, 1541, 1545], "ret": [17, 20, 22, 25, 38, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 54, 55, 56, 57, 58, 59, 60, 61, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 82, 83, 84, 85, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 146, 152, 153, 154, 156, 159, 164, 189, 190, 193, 195, 198, 200, 203, 205, 208, 210, 213, 215, 218, 220, 223, 225, 226, 228, 230, 231, 233, 235, 240, 242, 243, 244, 247, 249, 250, 252, 255, 257, 258, 261, 263, 264, 266, 267, 269, 272, 274, 277, 279, 282, 284, 285, 287, 290, 292, 296, 297, 301, 302, 304, 305, 309, 310, 311, 312, 313, 316, 318, 321, 323, 326, 328, 331, 333, 334, 341, 343, 345, 346, 349, 351, 352, 354, 355, 357, 360, 363, 364, 367, 369, 372, 374, 377, 379, 382, 384, 386, 389, 400, 401, 403, 404, 406, 407, 410, 412, 413, 414, 415, 416, 417, 418, 419, 420, 424, 425, 426, 430, 431, 432, 434, 435, 436, 439, 441, 444, 446, 449, 451, 454, 456, 459, 461, 464, 466, 469, 471, 474, 476, 479, 481, 484, 486, 489, 491, 494, 496, 499, 501, 504, 506, 509, 511, 514, 516, 519, 521, 524, 526, 529, 531, 534, 536, 539, 541, 544, 546, 549, 551, 554, 556, 559, 561, 564, 566, 569, 571, 574, 576, 579, 581, 584, 586, 589, 591, 594, 596, 599, 601, 604, 606, 609, 611, 614, 616, 619, 621, 624, 626, 629, 631, 634, 636, 639, 641, 644, 646, 649, 651, 654, 656, 659, 661, 664, 666, 669, 671, 674, 676, 679, 681, 684, 686, 689, 691, 694, 696, 699, 701, 704, 706, 709, 711, 714, 716, 719, 721, 724, 726, 729, 731, 735, 736, 740, 741, 745, 746, 750, 751, 755, 849, 850, 853, 855, 856, 857, 859, 860, 863, 865, 866, 869, 871, 874, 876, 877, 878, 880, 881, 884, 886, 889, 891, 894, 896, 898, 899, 902, 904, 905, 906, 909, 911, 914, 919, 920, 921, 923, 926, 928, 930, 931, 934, 936, 937, 940, 942, 945, 947, 950, 952, 953, 956, 958, 961, 963, 966, 968, 971, 974, 975, 978, 981, 983, 986, 996, 998, 1001, 1003, 1006, 1008, 1012, 1013, 1014, 1018, 1019, 1020, 1024, 1025, 1029, 1036, 1040, 1041, 1042, 1043, 1046, 1047, 1050, 1051, 1052, 1053, 1056, 1057, 1059, 1061, 1062, 1065, 1066, 1069, 1070, 1073, 1074, 1075, 1079, 1080, 1081, 1082, 1086, 1087, 1091, 1092, 1093, 1095, 1098, 1100, 1103, 1105, 1108, 1110, 1112, 1114, 1117, 1119, 1122, 1124, 1125, 1127, 1130, 1132, 1135, 1139, 1142, 1144, 1147, 1149, 1152, 1154, 1157, 1159, 1160, 1163, 1165, 1168, 1170, 1173, 1176, 1179, 1181, 1184, 1185, 1187, 1188, 1191, 1193, 1196, 1198, 1201, 1203, 1206, 1208, 1210, 1212, 1215, 1217, 1220, 1222, 1225, 1227, 1230, 1232, 1235, 1237, 1240, 1242, 1245, 1247, 1251, 1252, 1256, 1257, 1261, 1262, 1266, 1267, 1271, 1272, 1276, 1277, 1281, 1282, 1286, 1287, 1288, 1291, 1293, 1296, 1298, 1301, 1303, 1304, 1307, 1309, 1312, 1314, 1317, 1319, 1322, 1324, 1327, 1329, 1332, 1334, 1337, 1339, 1342, 1344, 1347, 1349, 1352, 1354, 1357, 1359, 1362, 1364, 1368, 1374, 1378, 1379, 1383, 1384, 1385, 1386, 1387, 1388, 1389, 1390, 1391, 1394, 1398, 1399, 1400, 1406, 1407, 1410, 1411, 1412, 1415, 1417, 1420, 1422, 1425, 1427, 1430, 1433, 1436, 1438, 1439, 1442, 1444, 1447, 1449, 1452, 1454, 1457, 1459, 1463, 1464, 1465, 1469, 1470, 1474, 1475, 1479, 1480, 1484, 1485, 1486, 1489, 1491, 1494, 1496, 1499, 1501, 1502, 1505, 1507, 1510, 1512, 1515, 1516, 1519, 1520, 1523, 1524, 1527, 1528, 1531, 1532, 1535, 1536, 1540, 1541, 1545, 1546, 1547, 1550, 1552, 1555], "exampl": [17, 20, 22, 23, 25, 29, 34, 35, 36, 38, 39, 40, 41, 42, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 93, 94, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 143, 144, 146, 147, 148, 150, 151, 152, 153, 155, 156, 159, 161, 162, 163, 164, 175, 176, 189, 190, 193, 195, 198, 200, 203, 205, 208, 210, 213, 215, 218, 220, 223, 225, 226, 228, 240, 242, 257, 258, 261, 269, 272, 284, 285, 287, 290, 302, 304, 305, 309, 310, 313, 316, 318, 321, 323, 326, 328, 331, 334, 339, 340, 341, 343, 345, 346, 349, 351, 352, 354, 355, 357, 360, 362, 363, 369, 372, 374, 377, 379, 382, 386, 389, 391, 394, 396, 399, 400, 401, 406, 407, 410, 412, 415, 416, 417, 418, 419, 420, 421, 422, 423, 424, 426, 430, 431, 432, 433, 434, 435, 436, 439, 441, 444, 446, 449, 451, 454, 456, 459, 461, 464, 466, 469, 471, 474, 476, 479, 481, 484, 486, 489, 496, 499, 501, 504, 506, 509, 511, 514, 516, 519, 521, 524, 526, 529, 531, 534, 536, 539, 546, 549, 551, 554, 556, 559, 561, 564, 566, 569, 571, 574, 576, 579, 581, 584, 586, 589, 591, 594, 596, 599, 601, 604, 606, 609, 611, 614, 616, 619, 626, 629, 631, 634, 636, 639, 641, 644, 646, 649, 651, 654, 656, 659, 661, 664, 666, 669, 671, 674, 676, 679, 686, 689, 696, 699, 701, 704, 706, 709, 711, 714, 716, 719, 721, 724, 726, 729, 731, 735, 736, 740, 741, 745, 751, 755, 849, 850, 853, 856, 857, 859, 865, 866, 869, 871, 874, 878, 880, 886, 889, 891, 894, 896, 898, 906, 909, 911, 914, 917, 918, 919, 920, 921, 922, 923, 926, 928, 931, 934, 937, 940, 942, 945, 958, 961, 968, 971, 974, 983, 986, 988, 989, 990, 991, 992, 993, 994, 996, 997, 998, 1001, 1008, 1012, 1014, 1018, 1020, 1024, 1025, 1029, 1030, 1031, 1032, 1033, 1034, 1035, 1036, 1040, 1041, 1042, 1043, 1046, 1052, 1053, 1056, 1057, 1059, 1061, 1062, 1065, 1070, 1073, 1074, 1075, 1079, 1080, 1081, 1082, 1086, 1092, 1093, 1095, 1098, 1105, 1108, 1114, 1117, 1119, 1122, 1127, 1130, 1139, 1142, 1154, 1157, 1159, 1160, 1163, 1165, 1168, 1170, 1173, 1176, 1179, 1193, 1196, 1198, 1201, 1203, 1206, 1212, 1215, 1222, 1225, 1227, 1230, 1237, 1240, 1247, 1251, 1252, 1256, 1257, 1261, 1262, 1266, 1267, 1271, 1287, 1288, 1291, 1293, 1296, 1298, 1301, 1303, 1304, 1307, 1309, 1312, 1319, 1322, 1324, 1327, 1329, 1332, 1334, 1337, 1339, 1342, 1344, 1347, 1349, 1352, 1354, 1357, 1359, 1362, 1364, 1368, 1369, 1373, 1374, 1378, 1388, 1390, 1391, 1394, 1396, 1399, 1404, 1405, 1406, 1407, 1410, 1411, 1412, 1415, 1417, 1420, 1422, 1425, 1427, 1430, 1432, 1433, 1436, 1438, 1439, 1442, 1444, 1447, 1454, 1457, 1459, 1463, 1464, 1465, 1469, 1470, 1474, 1475, 1479, 1485, 1486, 1489, 1491, 1494, 1496, 1499, 1501, 1502, 1505, 1507, 1510, 1512, 1515, 1516, 1519, 1520, 1523, 1524, 1527, 1532, 1535, 1536, 1540, 1541, 1545, 1546, 1547, 1550, 1552, 1555, 1558], "If": [17, 20, 22, 23, 27, 30, 31, 32, 34, 35, 36, 38, 43, 46, 47, 48, 49, 50, 51, 54, 55, 56, 57, 60, 61, 66, 67, 68, 69, 70, 71, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 88, 89, 90, 91, 92, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 113, 114, 115, 116, 117, 118, 119, 120, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 161, 162, 164, 176, 189, 225, 227, 228, 230, 231, 233, 235, 243, 244, 247, 249, 250, 257, 258, 261, 263, 264, 266, 267, 269, 272, 284, 285, 287, 290, 292, 296, 297, 301, 302, 304, 305, 309, 310, 313, 316, 323, 326, 340, 386, 389, 401, 406, 424, 435, 436, 439, 441, 444, 446, 449, 451, 454, 456, 459, 461, 464, 466, 469, 471, 474, 511, 514, 516, 519, 521, 524, 546, 549, 551, 554, 556, 559, 591, 594, 606, 609, 611, 614, 616, 619, 621, 624, 626, 629, 636, 639, 641, 644, 651, 654, 656, 659, 661, 664, 681, 684, 696, 699, 701, 704, 706, 709, 711, 714, 716, 719, 721, 724, 736, 740, 741, 745, 746, 750, 756, 849, 947, 950, 1008, 1012, 1041, 1042, 1051, 1074, 1092, 1093, 1159, 1160, 1163, 1165, 1168, 1203, 1206, 1208, 1210, 1212, 1215, 1227, 1230, 1232, 1235, 1242, 1245, 1247, 1251, 1267, 1271, 1272, 1276, 1277, 1281, 1287, 1288, 1291, 1293, 1296, 1298, 1301, 1303, 1309, 1312, 1319, 1322, 1324, 1327, 1339, 1342, 1344, 1347, 1349, 1352, 1354, 1357, 1359, 1362, 1384, 1385, 1386, 1388, 1400, 1401, 1406, 1411, 1417, 1420, 1422, 1425, 1427, 1430, 1438, 1439, 1442, 1444, 1447, 1454, 1457, 1464, 1465, 1469, 1470, 1474, 1475, 1479, 1480, 1484, 1485, 1486, 1489, 1491, 1494, 1496, 1499, 1501, 1502, 1505, 1507, 1510, 1516, 1519, 1520, 1523, 1524, 1527, 1528, 1531, 1532, 1535, 1536, 1540, 1541, 1545, 1546, 1547, 1550, 1552, 1555, 1558, 1566, 1569, 1571, 1581, 1593, 1595, 1597, 1603], "import": [17, 20, 21, 28, 31, 33, 34, 35, 36, 86, 87, 135, 136, 138, 139, 140, 141, 143, 144, 145, 146, 148, 152, 153, 154, 156, 159, 161, 162, 164, 176, 401, 422, 423, 1558, 1564], "numpi": [17, 20, 22, 23, 27, 28, 33, 34, 35, 36, 58, 59, 107, 108, 138, 140, 142, 143, 144, 147, 149, 152, 154, 155, 156, 157, 159, 161, 164, 849, 1008, 1012, 1020, 1024, 1501, 1512, 1515, 1557, 1558], "np": [17, 20, 34, 103, 104, 107, 108, 139, 143, 144, 149, 152, 153, 154, 155, 156, 157, 159, 161, 162, 164, 435, 591, 594, 849, 998, 1001, 1388, 1394, 1557, 1558], "arrai": [17, 20, 34, 35, 36, 39, 40, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 137, 140, 141, 143, 144, 145, 146, 147, 148, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 162, 163, 164, 176, 177, 187, 189, 190, 193, 195, 198, 200, 203, 205, 208, 210, 213, 215, 218, 220, 223, 227, 228, 230, 231, 233, 235, 240, 242, 243, 244, 247, 249, 250, 252, 255, 257, 258, 261, 263, 264, 266, 267, 269, 272, 274, 277, 279, 282, 284, 285, 287, 290, 292, 296, 297, 301, 302, 304, 305, 309, 310, 313, 316, 318, 321, 323, 326, 328, 331, 339, 340, 341, 343, 346, 349, 357, 360, 362, 364, 367, 369, 372, 374, 377, 379, 382, 384, 385, 386, 389, 395, 401, 406, 407, 410, 415, 419, 421, 425, 426, 430, 435, 436, 439, 441, 444, 446, 449, 451, 454, 456, 459, 461, 464, 466, 469, 471, 474, 476, 479, 481, 484, 486, 489, 491, 494, 496, 499, 501, 504, 506, 509, 511, 514, 516, 519, 521, 524, 526, 529, 531, 534, 536, 539, 541, 544, 546, 549, 551, 554, 556, 559, 561, 564, 566, 569, 571, 574, 576, 579, 581, 584, 586, 589, 591, 594, 596, 599, 601, 604, 606, 609, 611, 614, 616, 619, 621, 624, 626, 629, 631, 634, 636, 639, 641, 644, 646, 649, 651, 654, 656, 659, 661, 664, 666, 669, 671, 674, 676, 679, 681, 684, 686, 689, 691, 694, 696, 699, 701, 704, 706, 709, 711, 714, 716, 719, 721, 724, 726, 729, 731, 735, 736, 740, 741, 745, 746, 750, 751, 755, 849, 850, 853, 857, 859, 860, 863, 866, 869, 871, 874, 878, 880, 881, 884, 886, 889, 891, 894, 896, 898, 899, 902, 906, 909, 911, 914, 916, 919, 923, 926, 931, 934, 936, 937, 940, 942, 945, 947, 950, 953, 956, 958, 961, 968, 971, 974, 976, 977, 978, 981, 983, 986, 988, 989, 994, 996, 998, 1001, 1003, 1006, 1008, 1012, 1014, 1018, 1020, 1024, 1025, 1029, 1030, 1031, 1035, 1036, 1040, 1041, 1042, 1043, 1046, 1047, 1050, 1051, 1052, 1053, 1056, 1057, 1059, 1061, 1062, 1065, 1066, 1069, 1070, 1073, 1075, 1079, 1081, 1082, 1086, 1087, 1091, 1093, 1094, 1095, 1098, 1100, 1103, 1105, 1108, 1110, 1112, 1114, 1117, 1119, 1122, 1124, 1125, 1127, 1130, 1132, 1135, 1139, 1142, 1144, 1147, 1149, 1152, 1154, 1157, 1159, 1160, 1163, 1165, 1168, 1170, 1173, 1176, 1179, 1181, 1184, 1185, 1187, 1188, 1191, 1193, 1196, 1198, 1201, 1203, 1206, 1208, 1210, 1212, 1215, 1217, 1220, 1222, 1225, 1227, 1230, 1232, 1235, 1237, 1240, 1242, 1245, 1247, 1251, 1252, 1256, 1257, 1261, 1262, 1266, 1267, 1271, 1272, 1276, 1277, 1281, 1282, 1286, 1287, 1288, 1291, 1293, 1296, 1298, 1301, 1303, 1304, 1307, 1309, 1312, 1314, 1317, 1319, 1322, 1324, 1327, 1329, 1332, 1334, 1337, 1339, 1342, 1344, 1347, 1349, 1352, 1354, 1357, 1359, 1362, 1364, 1368, 1369, 1373, 1374, 1378, 1379, 1383, 1384, 1385, 1386, 1387, 1388, 1390, 1391, 1394, 1396, 1400, 1401, 1404, 1405, 1406, 1407, 1410, 1411, 1412, 1415, 1417, 1420, 1422, 1425, 1427, 1430, 1433, 1436, 1438, 1439, 1442, 1444, 1447, 1449, 1452, 1454, 1457, 1459, 1463, 1464, 1465, 1469, 1470, 1474, 1475, 1479, 1480, 1484, 1485, 1486, 1489, 1491, 1494, 1496, 1499, 1501, 1502, 1505, 1507, 1510, 1512, 1515, 1516, 1519, 1520, 1523, 1524, 1527, 1528, 1531, 1532, 1535, 1536, 1540, 1541, 1545, 1546, 1547, 1550, 1552, 1555, 1557, 1558], "2": [17, 20, 32, 34, 35, 36, 38, 39, 40, 41, 42, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 78, 79, 80, 81, 82, 83, 84, 85, 88, 89, 90, 93, 94, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 127, 128, 129, 130, 131, 132, 133, 134, 138, 140, 141, 143, 145, 147, 149, 152, 153, 154, 155, 158, 159, 161, 162, 163, 164, 176, 189, 190, 193, 195, 198, 200, 203, 205, 208, 210, 213, 215, 218, 220, 223, 227, 228, 257, 258, 261, 269, 272, 284, 285, 287, 290, 305, 309, 310, 313, 316, 318, 321, 323, 326, 328, 331, 341, 343, 346, 349, 369, 372, 374, 377, 401, 406, 407, 410, 412, 415, 417, 419, 421, 423, 426, 430, 435, 436, 439, 446, 449, 451, 454, 456, 459, 461, 464, 466, 469, 471, 474, 481, 484, 486, 489, 496, 499, 501, 504, 506, 509, 511, 514, 516, 519, 521, 524, 526, 529, 531, 534, 536, 539, 546, 549, 551, 554, 556, 559, 561, 564, 566, 569, 571, 574, 581, 584, 586, 589, 596, 599, 601, 604, 606, 609, 616, 619, 621, 624, 626, 629, 636, 639, 641, 644, 646, 649, 651, 654, 656, 659, 661, 664, 666, 669, 671, 674, 676, 679, 686, 689, 696, 699, 701, 704, 706, 709, 711, 714, 716, 719, 721, 724, 726, 729, 731, 735, 736, 740, 741, 745, 751, 755, 849, 850, 853, 857, 859, 865, 866, 869, 871, 874, 878, 880, 886, 889, 891, 894, 896, 898, 906, 909, 911, 914, 919, 923, 926, 931, 934, 937, 940, 942, 945, 958, 961, 968, 971, 974, 983, 986, 996, 998, 1001, 1008, 1012, 1014, 1018, 1030, 1041, 1042, 1043, 1046, 1052, 1053, 1056, 1057, 1059, 1061, 1062, 1065, 1070, 1073, 1075, 1079, 1081, 1082, 1086, 1093, 1094, 1095, 1098, 1105, 1108, 1110, 1112, 1114, 1117, 1119, 1122, 1124, 1125, 1127, 1130, 1137, 1139, 1142, 1154, 1157, 1159, 1160, 1163, 1165, 1168, 1170, 1173, 1176, 1179, 1193, 1196, 1198, 1201, 1203, 1206, 1212, 1215, 1222, 1225, 1227, 1230, 1232, 1235, 1237, 1240, 1247, 1251, 1252, 1256, 1257, 1261, 1262, 1266, 1267, 1271, 1277, 1281, 1287, 1288, 1291, 1298, 1301, 1303, 1304, 1307, 1309, 1312, 1319, 1322, 1324, 1327, 1329, 1332, 1334, 1337, 1339, 1342, 1344, 1347, 1349, 1352, 1354, 1357, 1359, 1362, 1364, 1368, 1369, 1373, 1374, 1378, 1388, 1390, 1391, 1394, 1396, 1399, 1404, 1405, 1406, 1407, 1410, 1411, 1412, 1415, 1417, 1420, 1422, 1425, 1427, 1430, 1433, 1436, 1438, 1439, 1442, 1444, 1447, 1454, 1457, 1459, 1463, 1464, 1465, 1469, 1470, 1474, 1475, 1479, 1485, 1486, 1489, 1491, 1494, 1496, 1499, 1501, 1502, 1505, 1507, 1510, 1512, 1515, 1516, 1519, 1520, 1523, 1524, 1527, 1528, 1531, 1536, 1540, 1541, 1545, 1546, 1547, 1550, 1552, 1555, 1558], "print": [17, 20, 22, 23, 25, 35, 36, 38, 39, 40, 41, 42, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 141, 145, 155, 159, 161, 162, 163, 189, 195, 198, 200, 203, 205, 208, 210, 213, 215, 218, 220, 223, 228, 240, 242, 257, 258, 261, 269, 272, 284, 285, 287, 290, 302, 304, 305, 309, 310, 313, 316, 318, 321, 323, 326, 328, 331, 334, 341, 343, 345, 351, 352, 354, 355, 363, 369, 372, 374, 377, 386, 389, 400, 401, 407, 410, 415, 416, 417, 418, 419, 420, 421, 424, 431, 432, 434, 435, 436, 439, 441, 444, 446, 449, 451, 454, 456, 459, 461, 464, 466, 469, 471, 474, 476, 479, 481, 484, 486, 489, 496, 499, 501, 504, 506, 509, 511, 514, 516, 519, 521, 524, 526, 529, 531, 534, 536, 539, 546, 549, 556, 559, 561, 564, 566, 569, 571, 574, 576, 579, 581, 584, 586, 589, 591, 594, 596, 599, 601, 604, 606, 609, 611, 614, 616, 619, 626, 629, 631, 634, 636, 639, 641, 644, 646, 649, 651, 654, 656, 659, 661, 664, 666, 669, 671, 674, 676, 679, 686, 689, 696, 699, 701, 704, 706, 709, 711, 714, 716, 719, 721, 724, 726, 729, 731, 735, 736, 740, 741, 745, 751, 755, 849, 850, 853, 856, 857, 859, 865, 866, 869, 871, 874, 878, 880, 886, 889, 891, 894, 896, 898, 906, 909, 911, 914, 919, 920, 921, 923, 926, 928, 931, 934, 937, 940, 942, 945, 974, 977, 983, 986, 990, 991, 993, 996, 998, 1001, 1008, 1012, 1014, 1018, 1020, 1024, 1025, 1029, 1030, 1034, 1036, 1040, 1041, 1042, 1043, 1046, 1052, 1053, 1056, 1057, 1059, 1061, 1062, 1065, 1070, 1073, 1074, 1075, 1079, 1080, 1081, 1082, 1086, 1092, 1093, 1095, 1098, 1105, 1108, 1114, 1117, 1119, 1122, 1127, 1130, 1139, 1142, 1154, 1157, 1159, 1160, 1163, 1165, 1168, 1170, 1173, 1176, 1179, 1193, 1196, 1198, 1201, 1203, 1206, 1222, 1225, 1227, 1230, 1237, 1240, 1247, 1251, 1252, 1256, 1257, 1261, 1262, 1266, 1287, 1288, 1291, 1293, 1296, 1298, 1301, 1303, 1304, 1307, 1319, 1322, 1324, 1327, 1329, 1332, 1334, 1337, 1339, 1342, 1344, 1347, 1349, 1352, 1354, 1357, 1364, 1368, 1369, 1373, 1374, 1378, 1388, 1390, 1391, 1394, 1396, 1399, 1404, 1405, 1406, 1407, 1410, 1411, 1412, 1415, 1417, 1420, 1433, 1436, 1438, 1439, 1442, 1444, 1447, 1454, 1457, 1459, 1463, 1464, 1465, 1469, 1470, 1474, 1475, 1479, 1485, 1486, 1489, 1491, 1494, 1496, 1499, 1501, 1502, 1505, 1507, 1510, 1512, 1515, 1516, 1519, 1520, 1523, 1524, 1527, 1528, 1531, 1532, 1535, 1536, 1540, 1541, 1545, 1546, 1547, 1550, 1552, 1555, 1558], "function": [17, 20, 21, 22, 23, 24, 27, 32, 36, 38, 39, 40, 41, 42, 43, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 89, 90, 91, 92, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 142, 145, 146, 148, 152, 154, 157, 158, 160, 161, 162, 163, 174, 175, 189, 190, 193, 195, 198, 200, 203, 205, 208, 210, 213, 215, 218, 220, 223, 225, 226, 227, 228, 229, 230, 231, 233, 235, 237, 238, 239, 240, 242, 243, 244, 247, 249, 250, 252, 255, 257, 258, 261, 263, 264, 266, 267, 269, 272, 274, 277, 279, 282, 284, 285, 287, 290, 292, 296, 297, 301, 302, 304, 305, 309, 310, 311, 312, 313, 316, 318, 321, 323, 326, 328, 331, 333, 334, 335, 336, 337, 339, 340, 341, 343, 345, 346, 349, 351, 352, 354, 355, 357, 360, 362, 363, 364, 367, 369, 372, 374, 377, 379, 382, 384, 385, 386, 389, 391, 392, 393, 394, 395, 396, 397, 398, 399, 400, 401, 402, 403, 404, 405, 406, 407, 410, 412, 413, 414, 415, 416, 417, 418, 419, 420, 421, 422, 423, 424, 425, 426, 430, 431, 432, 433, 434, 435, 436, 439, 441, 444, 446, 449, 451, 454, 456, 459, 461, 464, 466, 469, 471, 474, 476, 479, 481, 484, 486, 489, 491, 494, 496, 499, 501, 504, 506, 509, 511, 514, 516, 519, 521, 524, 526, 529, 531, 534, 536, 539, 541, 544, 546, 549, 551, 554, 556, 559, 561, 564, 566, 569, 571, 574, 576, 579, 581, 584, 586, 589, 591, 594, 596, 599, 601, 604, 606, 609, 611, 614, 616, 619, 621, 624, 626, 629, 631, 634, 636, 639, 641, 644, 646, 649, 651, 654, 656, 659, 661, 664, 666, 669, 671, 674, 676, 679, 681, 684, 686, 689, 691, 694, 696, 699, 701, 704, 706, 709, 711, 714, 716, 719, 721, 724, 726, 729, 731, 735, 736, 740, 741, 745, 746, 750, 751, 755, 849, 850, 853, 855, 856, 857, 859, 860, 863, 865, 866, 869, 871, 874, 876, 877, 878, 880, 881, 884, 886, 889, 891, 894, 896, 898, 899, 902, 904, 905, 906, 909, 911, 914, 916, 917, 918, 919, 920, 921, 922, 923, 926, 928, 929, 930, 931, 934, 936, 937, 940, 942, 945, 947, 950, 952, 953, 956, 958, 961, 963, 966, 968, 971, 973, 974, 975, 976, 977, 978, 981, 983, 986, 988, 989, 990, 991, 992, 993, 994, 995, 996, 997, 998, 1001, 1003, 1006, 1008, 1012, 1013, 1014, 1018, 1019, 1020, 1024, 1025, 1029, 1030, 1031, 1032, 1033, 1034, 1035, 1036, 1040, 1041, 1042, 1043, 1046, 1047, 1050, 1051, 1052, 1053, 1056, 1057, 1059, 1061, 1062, 1065, 1066, 1069, 1070, 1073, 1074, 1075, 1079, 1080, 1081, 1082, 1086, 1087, 1091, 1092, 1093, 1094, 1095, 1098, 1100, 1103, 1105, 1108, 1110, 1112, 1114, 1117, 1119, 1122, 1124, 1125, 1126, 1127, 1130, 1132, 1135, 1137, 1138, 1139, 1142, 1144, 1147, 1149, 1152, 1154, 1157, 1159, 1160, 1163, 1165, 1168, 1170, 1173, 1175, 1176, 1179, 1181, 1184, 1185, 1187, 1188, 1191, 1193, 1196, 1198, 1201, 1203, 1206, 1208, 1210, 1212, 1215, 1217, 1220, 1222, 1225, 1227, 1230, 1232, 1235, 1237, 1240, 1242, 1245, 1247, 1251, 1252, 1256, 1257, 1261, 1262, 1266, 1267, 1271, 1272, 1276, 1277, 1281, 1282, 1286, 1287, 1288, 1291, 1293, 1296, 1298, 1301, 1303, 1304, 1307, 1309, 1312, 1314, 1317, 1319, 1322, 1324, 1327, 1329, 1332, 1334, 1337, 1339, 1342, 1344, 1347, 1349, 1352, 1354, 1357, 1359, 1362, 1364, 1368, 1369, 1373, 1374, 1378, 1379, 1383, 1384, 1385, 1386, 1387, 1388, 1389, 1390, 1391, 1392, 1393, 1394, 1395, 1396, 1397, 1398, 1399, 1400, 1401, 1402, 1403, 1404, 1405, 1406, 1407, 1410, 1411, 1412, 1415, 1417, 1420, 1422, 1425, 1427, 1430, 1432, 1433, 1436, 1438, 1439, 1442, 1444, 1447, 1449, 1452, 1454, 1457, 1459, 1463, 1464, 1465, 1469, 1470, 1474, 1475, 1479, 1480, 1484, 1485, 1486, 1489, 1491, 1494, 1496, 1499, 1501, 1502, 1505, 1507, 1510, 1512, 1515, 1516, 1519, 1520, 1523, 1524, 1527, 1528, 1531, 1532, 1535, 1536, 1540, 1541, 1545, 1546, 1547, 1550, 1552, 1555, 1557, 1558], "py": [17, 20, 22, 34, 35, 36, 138, 140, 142, 143, 144, 146, 147, 148, 149, 150, 153, 154, 155, 156, 159, 161, 163, 164], "noqa": [17, 20, 22, 54, 55, 103, 104, 228, 230, 231, 233, 235, 243, 244, 247, 249, 250, 252, 255, 257, 258, 261, 263, 264, 269, 272, 284, 285, 287, 290, 292, 296, 297, 301, 302, 304, 305, 309, 310, 328, 331, 346, 349, 357, 360, 386, 389, 435, 436, 439, 441, 444, 446, 449, 451, 454, 456, 459, 461, 464, 466, 469, 471, 474, 476, 479, 481, 484, 486, 489, 491, 494, 501, 504, 506, 509, 511, 514, 516, 519, 521, 524, 531, 534, 536, 539, 551, 554, 556, 559, 561, 564, 566, 569, 571, 574, 581, 584, 586, 589, 601, 604, 611, 614, 616, 619, 621, 624, 626, 629, 631, 634, 636, 639, 641, 644, 646, 649, 661, 664, 666, 669, 671, 674, 676, 679, 681, 684, 696, 699, 701, 704, 706, 709, 711, 714, 716, 719, 721, 724, 726, 729, 731, 735, 736, 740, 741, 745, 746, 750, 849, 1041, 1159, 1160, 1163, 1165, 1168, 1170, 1173, 1176, 1179, 1181, 1184, 1185, 1187, 1193, 1196, 1198, 1201, 1203, 1206, 1208, 1210, 1212, 1215, 1217, 1220, 1222, 1225, 1227, 1230, 1232, 1235, 1237, 1240, 1242, 1245, 1247, 1251, 1252, 1256, 1257, 1261, 1272, 1276, 1277, 1281, 1303, 1309, 1312, 1319, 1322, 1324, 1327, 1329, 1332, 1339, 1342, 1344, 1347, 1354, 1357, 1359, 1362, 1438, 1439, 1442, 1444, 1447, 1454, 1457, 1459, 1463, 1464, 1465, 1469, 1470, 1474, 1475, 1479, 1480, 1484, 1485, 1486, 1489, 1496, 1499, 1501, 1516, 1519, 1524, 1527, 1528, 1531, 1532, 1535, 1536, 1540, 1541, 1545, 1546, 1547, 1550, 1552, 1555], "The": [17, 20, 22, 24, 26, 27, 29, 30, 31, 32, 34, 35, 38, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 54, 55, 56, 57, 58, 59, 60, 61, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 154, 155, 156, 157, 158, 159, 162, 163, 164, 175, 189, 190, 193, 195, 198, 200, 203, 215, 218, 220, 223, 225, 226, 228, 230, 231, 252, 255, 266, 267, 279, 282, 292, 296, 297, 301, 310, 311, 312, 313, 316, 334, 345, 351, 352, 354, 355, 363, 369, 372, 379, 382, 384, 394, 395, 400, 401, 402, 403, 404, 405, 406, 412, 413, 414, 415, 419, 420, 421, 422, 423, 424, 425, 431, 434, 435, 436, 439, 441, 444, 446, 449, 451, 454, 456, 459, 461, 464, 466, 469, 471, 474, 476, 479, 481, 484, 486, 489, 491, 494, 496, 499, 501, 504, 506, 509, 511, 514, 516, 519, 521, 524, 531, 534, 536, 539, 541, 544, 546, 549, 551, 554, 556, 559, 561, 564, 566, 569, 571, 574, 576, 579, 581, 584, 586, 589, 591, 594, 596, 599, 601, 604, 606, 609, 611, 614, 616, 619, 621, 624, 626, 629, 631, 634, 636, 639, 641, 644, 646, 649, 661, 664, 671, 674, 681, 684, 696, 699, 706, 709, 711, 714, 716, 719, 721, 724, 736, 740, 741, 745, 746, 750, 751, 755, 849, 855, 857, 859, 865, 866, 869, 877, 878, 880, 899, 902, 904, 905, 906, 909, 911, 914, 928, 930, 937, 940, 942, 945, 947, 950, 953, 956, 958, 961, 963, 966, 968, 971, 975, 978, 981, 983, 986, 990, 991, 993, 998, 1001, 1003, 1006, 1013, 1019, 1036, 1040, 1042, 1043, 1046, 1047, 1050, 1053, 1056, 1062, 1065, 1066, 1069, 1070, 1073, 1075, 1079, 1087, 1091, 1093, 1095, 1098, 1100, 1103, 1105, 1108, 1110, 1112, 1114, 1117, 1119, 1122, 1124, 1125, 1127, 1130, 1132, 1135, 1139, 1142, 1149, 1152, 1154, 1157, 1159, 1160, 1163, 1165, 1168, 1170, 1173, 1176, 1179, 1181, 1184, 1185, 1187, 1188, 1191, 1193, 1196, 1203, 1206, 1208, 1210, 1212, 1215, 1217, 1220, 1222, 1225, 1227, 1230, 1232, 1235, 1242, 1245, 1247, 1251, 1252, 1256, 1257, 1261, 1262, 1266, 1267, 1271, 1272, 1276, 1277, 1281, 1287, 1288, 1291, 1293, 1296, 1298, 1301, 1303, 1309, 1312, 1314, 1317, 1324, 1327, 1329, 1332, 1334, 1337, 1349, 1352, 1369, 1373, 1384, 1385, 1386, 1387, 1388, 1389, 1390, 1391, 1393, 1394, 1395, 1396, 1397, 1398, 1399, 1400, 1401, 1402, 1403, 1404, 1405, 1406, 1407, 1410, 1411, 1412, 1415, 1422, 1425, 1438, 1439, 1442, 1444, 1447, 1454, 1457, 1464, 1465, 1469, 1470, 1474, 1475, 1479, 1480, 1484, 1485, 1486, 1489, 1491, 1494, 1496, 1499, 1501, 1512, 1515, 1516, 1519, 1520, 1523, 1524, 1527, 1528, 1531, 1532, 1535, 1536, 1540, 1541, 1545, 1546, 1547, 1550, 1552, 1555, 1557, 1558], "set_backend": [17, 20, 22, 25, 138, 140, 143, 150, 151, 159, 161, 164, 310, 354, 355, 401, 422, 423, 1558], "ha": [17, 20, 22, 27, 28, 29, 34, 36, 66, 67, 70, 71, 78, 79, 82, 83, 91, 92, 99, 100, 107, 108, 115, 116, 119, 120, 127, 128, 131, 132, 138, 140, 143, 144, 145, 146, 148, 150, 151, 152, 153, 154, 155, 156, 157, 159, 160, 161, 163, 164, 175, 176, 228, 269, 272, 401, 406, 435, 436, 439, 591, 594, 661, 664, 681, 684, 701, 704, 1042, 1074, 1092, 1159, 1198, 1201, 1242, 1245, 1247, 1251, 1262, 1266, 1303, 1319, 1322, 1354, 1357, 1464, 1465, 1469, 1470, 1474, 1475, 1479, 1480, 1484, 1501, 1502, 1505, 1507, 1510, 1520, 1523, 1528, 1531, 1532, 1535, 1536, 1540, 1541, 1545], "over": [17, 20, 27, 29, 35, 36, 56, 57, 66, 67, 82, 83, 84, 85, 86, 87, 99, 100, 105, 106, 115, 116, 131, 132, 133, 134, 135, 136, 140, 145, 146, 152, 155, 159, 161, 176, 849, 1041, 1159, 1203, 1206, 1257, 1261, 1272, 1276, 1277, 1281, 1406, 1407, 1410, 1411, 1427, 1430, 1501, 1516, 1519, 1520, 1523, 1524, 1527, 1528, 1531, 1532, 1535, 1536, 1540, 1541, 1545, 1546, 1547, 1550, 1552, 1555], "ani": [17, 20, 25, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 38, 43, 44, 45, 48, 49, 54, 55, 58, 59, 84, 85, 86, 87, 88, 101, 102, 103, 104, 107, 108, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 159, 160, 161, 162, 163, 164, 175, 176, 189, 225, 226, 227, 228, 230, 231, 233, 235, 243, 244, 247, 249, 250, 252, 255, 257, 258, 261, 263, 264, 266, 267, 269, 272, 274, 277, 284, 285, 287, 290, 292, 296, 297, 301, 302, 304, 305, 309, 310, 328, 331, 333, 364, 367, 374, 377, 385, 401, 426, 430, 435, 436, 439, 441, 444, 446, 449, 451, 454, 456, 459, 461, 464, 466, 469, 471, 474, 476, 479, 481, 484, 486, 489, 491, 494, 501, 504, 506, 509, 511, 514, 516, 519, 521, 524, 531, 534, 536, 539, 551, 554, 556, 559, 561, 564, 566, 569, 571, 574, 576, 579, 581, 584, 586, 589, 601, 604, 611, 614, 616, 619, 621, 624, 626, 629, 631, 634, 636, 639, 641, 644, 646, 649, 661, 664, 666, 669, 671, 674, 676, 679, 681, 684, 696, 699, 701, 704, 706, 709, 711, 714, 716, 719, 721, 724, 726, 729, 731, 735, 736, 740, 741, 745, 746, 750, 756, 849, 850, 853, 878, 880, 881, 884, 886, 889, 891, 894, 896, 898, 906, 909, 923, 926, 931, 934, 937, 940, 953, 956, 963, 966, 1003, 1006, 1025, 1029, 1030, 1041, 1042, 1057, 1059, 1075, 1079, 1082, 1086, 1087, 1091, 1093, 1105, 1108, 1127, 1130, 1139, 1142, 1154, 1157, 1159, 1160, 1163, 1165, 1168, 1170, 1173, 1176, 1179, 1181, 1184, 1185, 1187, 1193, 1196, 1198, 1201, 1203, 1206, 1208, 1210, 1212, 1215, 1217, 1220, 1222, 1225, 1227, 1230, 1232, 1235, 1237, 1240, 1242, 1245, 1247, 1251, 1252, 1256, 1257, 1261, 1272, 1276, 1277, 1281, 1282, 1286, 1287, 1303, 1304, 1307, 1309, 1312, 1314, 1317, 1319, 1322, 1324, 1327, 1329, 1332, 1334, 1337, 1339, 1342, 1344, 1347, 1349, 1352, 1354, 1357, 1359, 1362, 1364, 1368, 1369, 1373, 1374, 1378, 1379, 1383, 1384, 1385, 1386, 1387, 1388, 1391, 1394, 1398, 1404, 1405, 1406, 1407, 1410, 1411, 1427, 1430, 1438, 1439, 1442, 1444, 1447, 1454, 1457, 1459, 1463, 1464, 1465, 1469, 1470, 1474, 1475, 1479, 1480, 1484, 1485, 1486, 1489, 1496, 1499, 1501, 1516, 1519, 1520, 1523, 1524, 1527, 1528, 1531, 1532, 1535, 1536, 1540, 1541, 1545, 1546, 1547, 1550, 1557, 1558, 1566, 1569, 1571, 1581, 1593, 1595, 1597, 1603], "pass": [17, 20, 34, 36, 86, 87, 88, 91, 92, 93, 94, 135, 136, 138, 139, 140, 141, 143, 145, 146, 148, 149, 150, 151, 152, 153, 154, 155, 156, 176, 310, 334, 385, 401, 425, 435, 471, 474, 849, 947, 950, 1042, 1087, 1091, 1384, 1385, 1386], "jax": [17, 20, 22, 23, 28, 29, 33, 34, 35, 36, 60, 61, 109, 110, 138, 140, 142, 143, 144, 149, 152, 153, 154, 155, 156, 157, 159, 161, 164, 176, 849, 1041, 1042, 1057, 1059, 1464, 1465, 1469, 1470, 1474, 1475, 1479, 1480, 1484, 1558], "fn_name_from_version_specific_fn_nam": 17, "name": [17, 21, 24, 32, 34, 35, 36, 78, 79, 127, 128, 140, 143, 145, 146, 148, 149, 153, 154, 155, 156, 157, 159, 162, 164, 225, 226, 849, 855, 856, 1159, 1181, 1184, 1232, 1235, 1247, 1251, 1267, 1271, 1464, 1465, 1469, 1470, 1474, 1475, 1479], "specif": [17, 21, 24, 27, 34, 36, 58, 59, 101, 102, 107, 108, 138, 139, 140, 141, 142, 143, 144, 147, 149, 150, 152, 153, 154, 155, 156, 157, 159, 160, 161, 163, 164, 175, 176, 310, 386, 389, 401, 423, 426, 430, 435, 636, 639, 641, 644, 849, 881, 884, 886, 889, 891, 894, 975, 1159, 1181, 1184, 1185, 1187, 1257, 1261, 1303, 1359, 1362, 1384, 1385, 1386, 1387, 1411, 1412, 1415, 1485, 1491, 1494, 1501, 1516, 1519, 1520, 1523, 1524, 1527, 1532, 1535, 1557, 1558, 1564], "provid": [17, 21, 24, 27, 35, 36, 48, 49, 58, 59, 60, 61, 76, 77, 82, 83, 84, 85, 91, 92, 97, 98, 107, 108, 125, 126, 131, 132, 133, 134, 139, 140, 141, 142, 143, 144, 145, 146, 147, 149, 150, 152, 153, 155, 157, 161, 163, 175, 176, 225, 226, 228, 269, 272, 279, 282, 310, 335, 336, 337, 339, 340, 363, 386, 389, 400, 401, 406, 849, 865, 878, 880, 983, 986, 1159, 1208, 1210, 1272, 1276, 1303, 1319, 1322, 1324, 1327, 1359, 1362, 1438, 1439, 1442, 1501, 1532, 1535, 1541, 1545, 1546, 1547, 1550, 1552, 1555], "origin": [17, 21, 24, 29, 34, 36, 38, 41, 42, 56, 57, 66, 67, 70, 71, 82, 83, 88, 91, 92, 93, 94, 105, 106, 115, 116, 119, 120, 131, 132, 140, 143, 151, 152, 153, 159, 435, 471, 474, 1159, 1203, 1206, 1303, 1339, 1342, 1344, 1347, 1501, 1507, 1510], "point": [17, 21, 24, 29, 34, 36, 50, 51, 54, 55, 56, 57, 66, 67, 74, 75, 82, 83, 99, 100, 103, 104, 105, 106, 115, 116, 123, 124, 131, 132, 138, 139, 142, 145, 146, 149, 152, 153, 155, 156, 157, 159, 161, 162, 175, 227, 228, 230, 231, 233, 235, 243, 249, 250, 257, 284, 285, 302, 304, 310, 313, 316, 346, 349, 362, 369, 372, 386, 389, 435, 441, 444, 446, 449, 451, 454, 456, 459, 461, 464, 466, 469, 471, 474, 476, 479, 506, 509, 511, 514, 516, 519, 521, 524, 531, 534, 546, 549, 551, 554, 556, 559, 606, 609, 611, 614, 616, 619, 621, 624, 626, 629, 661, 664, 681, 684, 696, 699, 701, 704, 711, 714, 716, 719, 721, 724, 736, 740, 741, 745, 746, 750, 751, 755, 1159, 1160, 1163, 1170, 1173, 1181, 1184, 1185, 1187, 1193, 1196, 1203, 1206, 1208, 1210, 1212, 1215, 1227, 1230, 1232, 1235, 1237, 1240, 1242, 1245, 1247, 1251, 1277, 1281, 1411, 1422, 1425, 1427, 1430, 1464, 1465, 1469, 1470, 1474, 1475, 1479, 1480, 1484, 1485, 1491, 1494, 1501, 1502, 1505, 1507, 1510, 1516, 1519, 1520, 1523, 1524, 1527, 1528, 1531, 1532, 1535, 1536, 1540, 1541, 1545], "get_backend": [17, 140, 150], "specifi": [17, 22, 36, 48, 49, 50, 51, 56, 57, 58, 59, 66, 67, 68, 69, 70, 71, 74, 75, 76, 77, 82, 83, 84, 85, 89, 90, 91, 92, 99, 100, 107, 108, 115, 116, 117, 118, 119, 120, 123, 124, 125, 126, 131, 132, 133, 134, 137, 143, 144, 149, 150, 152, 153, 154, 155, 157, 159, 162, 163, 228, 230, 231, 243, 257, 263, 264, 266, 267, 284, 285, 292, 296, 297, 301, 302, 304, 310, 313, 316, 323, 326, 401, 415, 419, 421, 424, 425, 426, 430, 435, 696, 699, 849, 855, 906, 909, 911, 914, 919, 931, 934, 1041, 1159, 1176, 1179, 1203, 1206, 1257, 1261, 1262, 1266, 1267, 1271, 1272, 1276, 1277, 1281, 1287, 1288, 1291, 1293, 1296, 1298, 1301, 1303, 1304, 1307, 1309, 1312, 1314, 1317, 1319, 1322, 1324, 1327, 1344, 1347, 1354, 1357, 1359, 1362, 1374, 1378, 1379, 1383, 1388, 1393, 1395, 1396, 1402, 1403, 1404, 1405, 1411, 1417, 1420, 1422, 1425, 1427, 1430, 1438, 1439, 1442, 1444, 1447, 1454, 1457, 1464, 1465, 1469, 1470, 1474, 1475, 1479, 1480, 1484, 1485, 1486, 1489, 1501, 1502, 1505, 1507, 1510, 1512, 1515, 1528, 1531, 1536, 1540, 1546, 1547, 1550, 1552, 1555], "isn": [17, 22, 36, 107, 108, 151, 162, 176, 849, 1008, 1012], "t": [17, 22, 24, 28, 29, 31, 32, 34, 35, 36, 38, 41, 42, 86, 87, 107, 108, 135, 136, 137, 140, 142, 143, 145, 151, 152, 155, 157, 159, 161, 162, 163, 164, 176, 849, 1008, 1012, 1042, 1051, 1093, 1139, 1142, 1144, 1147, 1388, 1396], "associ": [17, 22, 36, 66, 67, 115, 116, 143, 150, 151, 153, 154, 155, 176, 435, 451, 454, 661, 664, 1159, 1212, 1215, 1227, 1230, 1282, 1286], "option": [17, 22, 34, 35, 36, 38, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 54, 55, 56, 57, 58, 59, 60, 61, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 82, 83, 84, 85, 89, 90, 91, 92, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 141, 143, 144, 145, 146, 147, 148, 149, 150, 152, 153, 154, 155, 156, 157, 159, 164, 176, 189, 190, 193, 195, 198, 200, 203, 205, 208, 210, 213, 215, 218, 220, 223, 225, 226, 228, 230, 231, 233, 235, 240, 242, 243, 244, 247, 249, 250, 252, 255, 257, 258, 261, 263, 264, 266, 267, 274, 277, 279, 282, 284, 285, 287, 290, 292, 296, 297, 301, 302, 304, 305, 309, 310, 313, 316, 323, 326, 334, 335, 336, 337, 339, 340, 363, 400, 401, 406, 423, 424, 425, 426, 430, 435, 436, 439, 441, 444, 446, 449, 451, 454, 456, 459, 461, 464, 466, 469, 471, 474, 476, 479, 481, 484, 486, 489, 491, 494, 496, 499, 501, 504, 506, 509, 511, 514, 516, 519, 521, 524, 526, 529, 531, 534, 536, 539, 541, 544, 546, 549, 551, 554, 556, 559, 561, 564, 566, 569, 571, 574, 576, 579, 581, 584, 586, 589, 591, 594, 596, 599, 606, 609, 611, 614, 616, 619, 621, 624, 626, 629, 631, 634, 636, 639, 641, 644, 646, 649, 651, 654, 656, 659, 661, 664, 666, 669, 671, 674, 676, 679, 681, 684, 686, 689, 691, 694, 696, 699, 701, 704, 706, 709, 711, 714, 716, 719, 721, 724, 726, 729, 731, 735, 736, 740, 741, 745, 746, 750, 751, 755, 849, 855, 866, 869, 871, 874, 877, 881, 884, 886, 889, 891, 894, 906, 909, 911, 914, 958, 961, 975, 978, 981, 983, 986, 998, 1001, 1003, 1006, 1030, 1036, 1040, 1041, 1042, 1043, 1046, 1047, 1050, 1053, 1056, 1062, 1065, 1066, 1069, 1070, 1073, 1075, 1079, 1092, 1093, 1095, 1098, 1100, 1103, 1105, 1108, 1110, 1112, 1114, 1117, 1119, 1122, 1124, 1125, 1127, 1130, 1132, 1135, 1139, 1142, 1144, 1147, 1149, 1152, 1154, 1157, 1159, 1160, 1163, 1165, 1168, 1170, 1173, 1176, 1179, 1185, 1187, 1188, 1191, 1193, 1196, 1198, 1201, 1203, 1206, 1212, 1215, 1217, 1220, 1222, 1225, 1227, 1230, 1242, 1245, 1252, 1256, 1257, 1261, 1262, 1266, 1267, 1271, 1272, 1276, 1277, 1281, 1282, 1286, 1287, 1288, 1291, 1293, 1296, 1298, 1301, 1303, 1304, 1307, 1309, 1312, 1314, 1317, 1319, 1322, 1324, 1327, 1329, 1332, 1334, 1337, 1339, 1342, 1344, 1347, 1349, 1352, 1354, 1357, 1359, 1362, 1364, 1368, 1369, 1373, 1379, 1383, 1384, 1385, 1386, 1387, 1388, 1389, 1394, 1399, 1400, 1406, 1407, 1410, 1411, 1412, 1415, 1417, 1420, 1422, 1425, 1427, 1430, 1433, 1436, 1438, 1439, 1442, 1444, 1447, 1449, 1452, 1454, 1457, 1459, 1463, 1464, 1480, 1484, 1485, 1486, 1489, 1491, 1494, 1496, 1499, 1501, 1502, 1505, 1507, 1510, 1512, 1515, 1516, 1519, 1520, 1523, 1524, 1527, 1528, 1531, 1532, 1535, 1536, 1540, 1541, 1545, 1546, 1547, 1550, 1552, 1555], "str": [17, 22, 43, 44, 45, 56, 57, 58, 59, 64, 65, 89, 90, 91, 92, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 113, 114, 115, 116, 117, 118, 119, 120, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 143, 144, 147, 148, 153, 156, 159, 164, 225, 226, 228, 269, 272, 310, 311, 334, 335, 336, 337, 345, 346, 349, 357, 360, 362, 363, 364, 367, 369, 372, 374, 377, 379, 382, 391, 392, 393, 394, 400, 401, 402, 403, 425, 849, 855, 877, 881, 884, 886, 889, 891, 894, 975, 978, 981, 983, 986, 1093, 1095, 1098, 1100, 1103, 1105, 1108, 1110, 1112, 1114, 1117, 1119, 1122, 1124, 1125, 1127, 1130, 1159, 1232, 1235, 1384, 1385, 1386, 1387, 1388, 1394, 1404, 1501, 1512, 1515], "we": [17, 22, 23, 24, 25, 26, 27, 28, 29, 30, 32, 33, 34, 35, 36, 86, 87, 135, 136, 137, 138, 139, 140, 141, 142, 143, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 156, 157, 159, 160, 161, 162, 163, 164, 175, 176, 849, 1008, 1012, 1042, 1051, 1052, 1061, 1081, 1557, 1558, 1564], "want": [17, 22, 28, 30, 34, 35, 36, 86, 87, 135, 136, 142, 151, 152, 155, 157, 162, 163, 164, 176], "retriev": [17, 22, 36, 153, 849, 855], "e": [17, 22, 28, 29, 30, 31, 32, 34, 35, 36, 38, 41, 42, 60, 61, 66, 67, 74, 75, 80, 81, 82, 83, 115, 116, 123, 124, 129, 130, 131, 132, 137, 138, 141, 147, 155, 159, 162, 176, 227, 228, 269, 272, 310, 312, 386, 389, 401, 403, 435, 436, 439, 471, 474, 491, 494, 501, 504, 511, 514, 546, 549, 556, 559, 561, 564, 576, 579, 606, 609, 616, 619, 651, 654, 656, 659, 666, 669, 681, 684, 696, 699, 1159, 1165, 1168, 1198, 1201, 1203, 1206, 1212, 1215, 1227, 1230, 1242, 1245, 1247, 1251, 1277, 1281, 1303, 1319, 1322, 1359, 1362, 1388, 1391, 1396, 1404, 1405, 1411, 1417, 1420, 1422, 1425, 1427, 1430, 1464, 1465, 1469, 1470, 1474, 1475, 1479, 1480, 1484, 1485, 1486, 1489, 1496, 1499, 1501, 1502, 1505, 1507, 1510, 1516, 1519, 1520, 1523, 1524, 1527, 1528, 1531, 1532, 1535, 1536, 1540, 1541, 1545, 1557], "default": [17, 22, 34, 35, 36, 43, 44, 45, 46, 47, 48, 49, 50, 51, 54, 55, 56, 57, 58, 59, 60, 61, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 140, 143, 144, 145, 146, 147, 149, 150, 151, 153, 155, 157, 159, 163, 189, 190, 193, 195, 198, 200, 203, 205, 208, 210, 213, 215, 218, 220, 223, 225, 226, 228, 230, 231, 233, 235, 240, 242, 243, 244, 247, 249, 250, 252, 255, 257, 258, 261, 263, 264, 266, 267, 269, 272, 274, 277, 279, 282, 284, 285, 287, 290, 292, 296, 297, 301, 302, 304, 305, 309, 310, 313, 316, 323, 326, 335, 336, 337, 339, 340, 341, 343, 351, 352, 354, 355, 362, 384, 391, 394, 396, 399, 401, 406, 407, 410, 413, 414, 417, 420, 421, 422, 423, 424, 425, 426, 430, 433, 434, 435, 436, 439, 441, 444, 446, 449, 451, 454, 456, 459, 461, 464, 466, 469, 471, 474, 476, 479, 481, 484, 486, 489, 491, 494, 496, 499, 501, 504, 506, 509, 511, 514, 516, 519, 521, 524, 526, 529, 531, 534, 536, 539, 541, 544, 546, 549, 551, 554, 556, 559, 561, 564, 566, 569, 571, 574, 576, 579, 581, 584, 586, 589, 591, 594, 596, 599, 606, 609, 611, 614, 616, 619, 621, 624, 626, 629, 631, 634, 636, 639, 641, 644, 646, 649, 651, 654, 656, 659, 666, 669, 671, 674, 676, 679, 681, 684, 686, 689, 691, 694, 696, 699, 701, 704, 706, 709, 711, 714, 716, 719, 721, 724, 726, 729, 731, 735, 736, 740, 741, 745, 746, 750, 751, 755, 849, 850, 853, 855, 865, 866, 869, 871, 874, 881, 884, 886, 889, 891, 894, 899, 902, 904, 905, 906, 909, 911, 914, 922, 923, 926, 928, 929, 931, 934, 936, 947, 950, 952, 953, 956, 958, 961, 968, 971, 974, 975, 978, 981, 983, 986, 993, 996, 998, 1001, 1003, 1006, 1008, 1012, 1020, 1024, 1036, 1040, 1041, 1042, 1043, 1046, 1047, 1050, 1051, 1053, 1056, 1057, 1059, 1062, 1065, 1066, 1069, 1070, 1073, 1074, 1075, 1079, 1080, 1092, 1093, 1095, 1098, 1100, 1103, 1105, 1108, 1110, 1112, 1114, 1117, 1119, 1122, 1124, 1125, 1127, 1130, 1132, 1135, 1139, 1142, 1144, 1147, 1149, 1152, 1154, 1157, 1159, 1160, 1163, 1165, 1168, 1170, 1173, 1176, 1179, 1185, 1187, 1188, 1191, 1193, 1196, 1198, 1201, 1203, 1206, 1212, 1215, 1217, 1220, 1222, 1225, 1227, 1230, 1232, 1235, 1242, 1245, 1247, 1251, 1252, 1256, 1257, 1261, 1262, 1266, 1267, 1271, 1272, 1276, 1277, 1281, 1282, 1286, 1287, 1288, 1291, 1293, 1296, 1298, 1301, 1303, 1304, 1307, 1309, 1312, 1314, 1317, 1319, 1322, 1324, 1327, 1329, 1332, 1334, 1337, 1339, 1342, 1344, 1347, 1349, 1352, 1354, 1357, 1359, 1362, 1364, 1368, 1369, 1373, 1374, 1378, 1379, 1383, 1384, 1385, 1386, 1387, 1388, 1389, 1390, 1394, 1398, 1399, 1400, 1401, 1406, 1407, 1410, 1411, 1412, 1415, 1417, 1420, 1422, 1425, 1427, 1430, 1432, 1433, 1436, 1438, 1439, 1442, 1444, 1447, 1449, 1452, 1454, 1457, 1459, 1463, 1464, 1465, 1469, 1470, 1474, 1475, 1479, 1480, 1484, 1485, 1486, 1489, 1491, 1494, 1496, 1499, 1501, 1502, 1505, 1507, 1510, 1512, 1515, 1516, 1519, 1520, 1523, 1524, 1527, 1528, 1531, 1532, 1535, 1536, 1540, 1541, 1545, 1546, 1547, 1550, 1552, 1555, 1557], "torch": [17, 22, 25, 35, 36, 138, 139, 140, 142, 143, 144, 147, 149, 150, 152, 153, 154, 155, 156, 157, 159, 161, 162, 164, 176, 225, 226, 310, 354, 355, 401, 422, 423, 435, 701, 704, 849, 1008, 1012, 1159, 1247, 1251, 1557, 1558], "tensorflow": [17, 22, 25, 28, 29, 33, 34, 35, 36, 58, 59, 107, 108, 138, 142, 143, 144, 149, 152, 153, 154, 155, 156, 157, 159, 164, 176, 1557, 1558], "either": [17, 22, 25, 32, 34, 35, 36, 54, 55, 58, 59, 91, 92, 103, 104, 107, 108, 140, 141, 143, 144, 145, 146, 150, 152, 153, 154, 155, 157, 159, 162, 176, 228, 252, 255, 435, 451, 454, 471, 474, 581, 584, 606, 609, 611, 614, 621, 624, 626, 629, 661, 664, 696, 699, 706, 709, 711, 714, 736, 740, 849, 878, 880, 953, 956, 974, 975, 1030, 1159, 1198, 1201, 1384, 1385, 1386, 1387, 1501, 1502, 1505, 1507, 1510, 1528, 1531, 1536, 1540], "doesn": [17, 22, 24, 32, 35, 140, 142, 143, 145, 155, 157, 159, 176], "matter": [17, 22, 27, 145], "been": [17, 22, 34, 36, 58, 59, 74, 75, 107, 108, 123, 124, 138, 140, 141, 142, 143, 144, 146, 148, 149, 150, 155, 159, 161, 175, 176, 401, 406, 435, 701, 704, 849, 881, 884, 886, 889, 891, 894, 1411, 1412, 1415, 1557], "ivy_np": [17, 22, 155], "us": [17, 22, 25, 29, 30, 31, 33, 34, 36, 48, 49, 50, 51, 54, 55, 56, 57, 58, 59, 60, 61, 70, 71, 72, 73, 74, 75, 86, 87, 88, 89, 90, 91, 92, 93, 94, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 119, 120, 121, 122, 123, 124, 135, 136, 137, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 163, 164, 175, 176, 189, 210, 213, 215, 218, 220, 223, 227, 228, 266, 267, 310, 313, 316, 345, 346, 349, 351, 352, 354, 355, 384, 385, 401, 402, 413, 414, 416, 420, 423, 424, 425, 426, 430, 432, 434, 435, 456, 459, 521, 524, 571, 574, 641, 644, 651, 654, 656, 659, 666, 669, 671, 674, 721, 724, 849, 865, 904, 905, 920, 921, 974, 990, 991, 998, 1001, 1003, 1006, 1042, 1043, 1046, 1047, 1050, 1062, 1065, 1066, 1069, 1093, 1119, 1122, 1132, 1135, 1139, 1142, 1149, 1152, 1154, 1157, 1159, 1176, 1179, 1193, 1196, 1252, 1256, 1287, 1288, 1291, 1303, 1324, 1327, 1334, 1337, 1344, 1347, 1364, 1368, 1384, 1385, 1386, 1387, 1388, 1389, 1391, 1397, 1398, 1399, 1401, 1406, 1407, 1410, 1411, 1412, 1415, 1417, 1420, 1422, 1425, 1433, 1436, 1438, 1439, 1442, 1444, 1447, 1454, 1457, 1464, 1465, 1469, 1475, 1479, 1501, 1512, 1515, 1557, 1558], "ivy_jax": [17, 22], "subsequ": [17, 23, 35, 139, 145, 149, 150, 152, 155, 157, 163], "call": [17, 23, 25, 28, 32, 36, 88, 93, 94, 99, 100, 139, 140, 141, 143, 144, 145, 146, 149, 150, 151, 152, 153, 155, 156, 157, 159, 161, 162, 163, 164, 176, 401, 402, 425, 849, 928, 993, 1030, 1042, 1051, 1052, 1061, 1388, 1389, 1394, 1398, 1399], "nativ": [17, 23, 38, 41, 42, 43, 45, 46, 47, 48, 49, 58, 59, 95, 96, 107, 108, 143, 147, 151, 152, 153, 154, 155, 161, 162, 228, 274, 277, 310, 311, 312, 334, 339, 340, 385, 401, 403, 404, 405, 406, 407, 410, 420, 431, 434, 849, 947, 950, 953, 956, 968, 971, 977, 1019, 1557], "native_arrai": [17, 23, 25, 48, 49, 50, 51, 54, 55, 70, 71, 97, 98, 101, 102, 103, 104, 107, 108, 129, 130, 151, 154, 155, 189, 190, 193, 195, 198, 200, 203, 205, 208, 210, 213, 215, 218, 220, 223, 228, 258, 261, 269, 272, 305, 309, 310, 313, 316, 318, 321, 323, 326, 328, 331, 341, 343, 346, 349, 357, 360, 374, 377, 386, 389, 401, 407, 410, 419, 435, 436, 439, 456, 459, 461, 464, 471, 474, 481, 484, 501, 504, 506, 509, 511, 514, 526, 529, 531, 534, 536, 539, 551, 554, 556, 559, 561, 564, 566, 569, 571, 574, 576, 579, 591, 594, 596, 599, 606, 609, 611, 614, 616, 619, 631, 634, 636, 639, 641, 644, 661, 664, 666, 669, 671, 674, 676, 679, 686, 689, 696, 699, 701, 704, 706, 709, 711, 714, 716, 719, 721, 724, 726, 729, 741, 745, 849, 850, 853, 857, 859, 866, 869, 871, 874, 896, 898, 931, 934, 937, 940, 942, 945, 958, 961, 968, 971, 1014, 1018, 1020, 1024, 1093, 1095, 1098, 1119, 1122, 1127, 1130, 1154, 1157, 1159, 1170, 1173, 1176, 1179, 1198, 1201, 1212, 1215, 1252, 1256, 1257, 1261, 1262, 1266, 1287, 1288, 1291, 1298, 1301, 1303, 1304, 1307, 1324, 1327, 1334, 1337, 1339, 1342, 1349, 1352, 1359, 1362, 1364, 1368, 1369, 1373, 1411, 1412, 1415, 1438, 1439, 1442, 1444, 1447, 1454, 1457, 1459, 1463, 1464, 1465, 1469, 1470, 1474, 1475, 1479, 1485, 1496, 1499, 1501, 1512, 1515, 1516, 1519, 1520, 1523, 1524, 1527, 1536, 1540, 1541, 1545, 1546, 1547, 1550, 1552, 1555], "1": [17, 23, 25, 28, 29, 31, 32, 34, 35, 36, 38, 39, 40, 41, 42, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 78, 79, 80, 81, 82, 83, 84, 85, 88, 89, 90, 91, 92, 93, 94, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 127, 128, 129, 130, 131, 132, 133, 134, 138, 140, 141, 143, 145, 147, 148, 149, 150, 152, 154, 155, 156, 157, 158, 159, 161, 162, 163, 164, 176, 189, 190, 193, 195, 198, 200, 203, 205, 208, 210, 213, 215, 218, 220, 223, 228, 230, 231, 240, 242, 257, 258, 261, 263, 264, 266, 267, 269, 272, 279, 282, 284, 285, 287, 290, 305, 309, 310, 313, 316, 318, 321, 323, 326, 328, 331, 341, 343, 345, 346, 349, 369, 372, 374, 377, 401, 406, 407, 410, 415, 418, 419, 421, 426, 430, 435, 436, 439, 441, 444, 446, 449, 451, 454, 456, 459, 461, 464, 466, 469, 471, 474, 481, 484, 486, 489, 496, 499, 501, 504, 506, 509, 511, 514, 516, 519, 521, 524, 526, 529, 531, 534, 536, 539, 546, 549, 551, 554, 556, 559, 561, 564, 566, 569, 571, 574, 576, 579, 581, 584, 586, 589, 591, 594, 596, 599, 601, 604, 606, 609, 611, 614, 616, 619, 621, 624, 626, 629, 636, 639, 641, 644, 646, 649, 651, 654, 656, 659, 661, 664, 666, 669, 671, 674, 676, 679, 681, 684, 686, 689, 696, 699, 701, 704, 706, 709, 711, 714, 716, 719, 721, 724, 726, 729, 731, 735, 736, 740, 741, 745, 751, 755, 849, 850, 853, 857, 859, 866, 869, 871, 874, 878, 880, 886, 889, 891, 894, 896, 898, 906, 909, 911, 914, 919, 923, 926, 931, 934, 937, 940, 942, 945, 958, 961, 968, 971, 974, 983, 986, 996, 998, 1001, 1003, 1006, 1008, 1012, 1014, 1018, 1020, 1024, 1025, 1029, 1030, 1041, 1042, 1043, 1046, 1052, 1053, 1056, 1057, 1059, 1061, 1062, 1065, 1070, 1073, 1075, 1079, 1081, 1082, 1086, 1093, 1094, 1095, 1098, 1100, 1103, 1105, 1108, 1110, 1112, 1114, 1117, 1119, 1122, 1124, 1125, 1126, 1127, 1130, 1132, 1135, 1139, 1142, 1154, 1157, 1159, 1160, 1163, 1165, 1168, 1170, 1173, 1176, 1179, 1188, 1191, 1193, 1196, 1198, 1201, 1203, 1206, 1212, 1215, 1222, 1225, 1227, 1230, 1237, 1240, 1242, 1245, 1247, 1251, 1252, 1256, 1257, 1261, 1262, 1266, 1267, 1271, 1272, 1276, 1277, 1281, 1287, 1288, 1291, 1293, 1296, 1298, 1301, 1303, 1304, 1307, 1309, 1312, 1319, 1322, 1324, 1327, 1329, 1332, 1334, 1337, 1339, 1342, 1344, 1347, 1349, 1352, 1354, 1357, 1359, 1362, 1364, 1368, 1369, 1373, 1374, 1378, 1388, 1390, 1391, 1394, 1396, 1399, 1400, 1404, 1405, 1406, 1407, 1410, 1411, 1412, 1415, 1417, 1420, 1422, 1425, 1427, 1430, 1433, 1436, 1438, 1439, 1442, 1444, 1447, 1454, 1457, 1459, 1463, 1464, 1465, 1469, 1470, 1474, 1475, 1479, 1485, 1486, 1489, 1491, 1494, 1496, 1499, 1501, 1502, 1505, 1507, 1510, 1512, 1515, 1516, 1519, 1520, 1523, 1524, 1527, 1528, 1531, 1532, 1535, 1536, 1540, 1541, 1545, 1546, 1547, 1550, 1552, 1555, 1558], "ndarrai": [17, 23, 34, 48, 49, 58, 59, 139, 143, 144, 149, 152, 153, 154, 156, 157, 159, 161, 164, 228, 233, 235, 274, 277, 849, 1020, 1024, 1557], "Or": [17, 23, 162], "jaxlib": [17, 23, 35, 139, 143, 144, 149, 156, 159, 161], "xla_extens": [17, 23, 139, 143, 144, 149, 156, 159, 161], "devicearrai": [17, 23, 139, 154, 159, 161], "set_backend_to_specific_vers": 17, "anyth": [17, 24, 155, 156], "updat": [17, 24, 32, 34, 35, 36, 43, 45, 47, 58, 59, 60, 61, 91, 92, 107, 108, 109, 110, 137, 138, 139, 141, 142, 143, 145, 149, 151, 154, 157, 159, 161, 162, 164, 176, 849, 947, 950, 978, 981, 983, 986, 1042, 1043, 1046, 1047, 1050, 1053, 1056, 1062, 1065, 1066, 1069, 1070, 1073, 1093, 1144, 1147, 1384, 1385, 1386, 1388, 1395, 1396, 1404, 1405], "__dict__": [17, 24, 140, 159], "make": [17, 24, 28, 29, 34, 35, 36, 138, 139, 141, 142, 143, 144, 145, 146, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 159, 161, 162, 164], "unset_backend": [17, 140], "unset": [17, 25, 140, 159], "adjust": [17, 25, 82, 83, 131, 132, 1501, 1532, 1535, 1541, 1545], "dict": [17, 25, 43, 44, 45, 46, 47, 58, 59, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 113, 114, 115, 116, 117, 118, 119, 120, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 141, 148, 162, 163, 401, 406, 849, 855, 881, 884, 886, 889, 891, 894, 904, 905, 974, 1388, 1390, 1391, 1394, 1396, 1397, 1399, 1400, 1401, 1404, 1405, 1557], "previous": [17, 25, 32, 35, 150, 155, 159], "otherwis": [17, 25, 43, 44, 45, 46, 47, 50, 51, 54, 55, 58, 59, 60, 61, 66, 67, 70, 71, 76, 77, 82, 83, 84, 85, 89, 90, 91, 92, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 113, 114, 115, 116, 117, 118, 119, 120, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 139, 141, 142, 143, 144, 145, 155, 159, 228, 230, 231, 263, 264, 310, 313, 316, 328, 331, 333, 335, 336, 337, 339, 340, 364, 367, 374, 377, 385, 401, 406, 435, 576, 579, 581, 584, 586, 589, 591, 594, 849, 860, 863, 1030, 1042, 1057, 1059, 1159, 1160, 1163, 1170, 1173, 1247, 1251, 1272, 1276, 1277, 1281, 1303, 1339, 1342, 1384, 1385, 1386, 1388, 1401, 1438, 1439, 1442, 1444, 1447, 1459, 1463, 1485, 1491, 1494, 1501, 1516, 1519, 1520, 1523, 1524, 1527, 1528, 1531, 1532, 1535, 1536, 1540, 1541, 1545, 1546, 1547, 1550, 1552, 1555], "implement": [17, 25, 34, 50, 51, 80, 81, 99, 100, 101, 102, 129, 130, 137, 138, 139, 140, 141, 142, 143, 144, 146, 149, 150, 151, 152, 153, 154, 155, 156, 157, 159, 161, 162, 163, 164, 175, 176, 310, 313, 316, 386, 389, 401, 426, 430, 435, 436, 439, 441, 444, 446, 449, 456, 459, 461, 464, 466, 469, 471, 474, 516, 519, 521, 524, 546, 549, 551, 554, 606, 609, 611, 614, 616, 619, 621, 624, 661, 664, 681, 684, 696, 699, 711, 714, 716, 719, 736, 740, 741, 745, 1159, 1181, 1184, 1185, 1187, 1464, 1465, 1469, 1470, 1474, 1475, 1479, 1480, 1484, 1485, 1486, 1489, 1496, 1499, 1501, 1516, 1519, 1520, 1523, 1524, 1527, 1532, 1535, 1557, 1558], "wa": [17, 25, 28, 36, 82, 83, 84, 85, 89, 90, 91, 92, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 113, 114, 115, 116, 117, 118, 119, 120, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 138, 145, 153, 159, 161, 849, 1030, 1388, 1401, 1501, 1516, 1519, 1520, 1523, 1524, 1527, 1528, 1531, 1532, 1535, 1536, 1540, 1541, 1545, 1546, 1547, 1550, 1552, 1555], "last": [17, 25, 29, 36, 38, 41, 42, 48, 49, 56, 57, 66, 67, 68, 69, 70, 71, 80, 81, 82, 83, 84, 85, 91, 92, 105, 106, 115, 116, 117, 118, 119, 120, 129, 130, 131, 132, 133, 134, 138, 140, 143, 145, 148, 152, 154, 155, 157, 159, 176, 189, 200, 203, 215, 218, 228, 263, 264, 401, 406, 1042, 1074, 1080, 1092, 1093, 1144, 1147, 1159, 1165, 1168, 1176, 1179, 1262, 1266, 1272, 1276, 1287, 1293, 1296, 1298, 1301, 1303, 1309, 1312, 1324, 1327, 1344, 1347, 1349, 1352, 1359, 1362, 1485, 1486, 1489, 1491, 1494, 1496, 1499, 1501, 1502, 1505, 1507, 1510, 1546, 1547, 1550, 1552, 1555], "henc": [17, 25, 35, 141, 155, 1303, 1319, 1322, 1464, 1465, 1469, 1470, 1474, 1475, 1479, 1480, 1484], "here": [17, 25, 33, 34, 35, 36, 138, 141, 142, 145, 149, 152, 153, 154, 155, 156, 159, 160, 161, 162, 163, 164, 175, 176, 435, 701, 704], "tensor": [17, 25, 27, 48, 49, 54, 55, 56, 57, 58, 59, 70, 71, 74, 75, 91, 92, 97, 98, 103, 104, 107, 108, 119, 120, 123, 124, 139, 140, 143, 144, 149, 150, 152, 153, 154, 155, 156, 157, 159, 161, 162, 164, 176, 228, 263, 264, 266, 267, 279, 282, 310, 341, 343, 385, 435, 651, 654, 656, 659, 849, 983, 986, 1093, 1132, 1135, 1144, 1147, 1159, 1257, 1261, 1303, 1349, 1352, 1411, 1412, 1415, 1557, 1558], "howev": [17, 25, 28, 34, 35, 36, 138, 139, 140, 141, 143, 144, 145, 146, 149, 150, 152, 153, 154, 155, 157, 161, 162, 163, 164, 176, 1159, 1247, 1251], "befor": [17, 25, 34, 35, 36, 70, 71, 91, 92, 138, 139, 143, 144, 146, 147, 148, 149, 151, 152, 153, 154, 155, 156, 159, 162, 176, 401, 402, 425, 435, 746, 750, 1093, 1149, 1152, 1154, 1157, 1303, 1309, 1312, 1384, 1385, 1386, 1388, 1400, 1464, 1465, 1469, 1470, 1474, 1475, 1479, 1480, 1484, 1501, 1502, 1505, 1507, 1510, 1528, 1531, 1536, 1540], "becom": [17, 25, 27, 29, 36, 141, 145, 153, 176, 1303, 1304, 1307], "swap": [17, 25, 1303, 1364, 1368], "python": [17, 25, 26, 27, 28, 32, 33, 35, 36, 74, 75, 123, 124, 138, 147, 148, 153, 155, 157, 159, 161, 162, 176, 228, 230, 231, 401, 420, 434, 435, 696, 699, 849, 1041, 1411, 1412, 1415, 1417, 1420, 1422, 1425, 1433, 1436, 1557, 1558, 1564], "op": [17, 25, 156, 159, 176], "eagertensor": [17, 25], "backend": [20, 22, 23, 24, 25, 27, 33, 34, 35, 36, 43, 45, 47, 58, 59, 60, 61, 91, 92, 107, 108, 137, 138, 139, 142, 144, 145, 146, 147, 149, 150, 151, 152, 153, 154, 155, 157, 158, 160, 161, 164, 310, 351, 352, 354, 355, 363, 400, 401, 413, 414, 416, 418, 432, 849, 904, 905, 936, 947, 950, 952, 975, 1008, 1012, 1019, 1042, 1087, 1091, 1159, 1247, 1251, 1557, 1558, 1564], "ml": [26, 28, 29, 30, 33, 153, 158, 159, 160, 162, 163, 164, 175, 1558, 1564], "explos": [26, 28, 1558], "A": [26, 27, 28, 29, 32, 33, 34, 35, 48, 49, 50, 51, 58, 59, 70, 71, 74, 75, 84, 85, 88, 91, 92, 93, 94, 99, 100, 107, 108, 109, 110, 119, 120, 123, 124, 133, 134, 137, 141, 143, 144, 149, 150, 153, 155, 159, 162, 176, 228, 249, 250, 274, 277, 310, 318, 321, 401, 425, 435, 676, 679, 691, 694, 849, 921, 1014, 1018, 1042, 1081, 1159, 1222, 1225, 1242, 1245, 1247, 1251, 1303, 1349, 1352, 1359, 1362, 1388, 1389, 1391, 1393, 1395, 1396, 1397, 1398, 1399, 1402, 1403, 1404, 1405, 1411, 1412, 1415, 1417, 1420, 1422, 1425, 1433, 1436, 1501, 1512, 1515, 1546, 1547, 1550, 1552, 1555, 1557, 1558], "huge": [26, 28, 162, 1558], "number": [26, 27, 35, 36, 38, 41, 42, 48, 49, 50, 51, 54, 55, 58, 59, 66, 67, 70, 71, 74, 75, 76, 77, 78, 79, 82, 83, 84, 85, 88, 91, 92, 93, 94, 97, 98, 99, 100, 103, 104, 107, 108, 115, 116, 119, 120, 123, 124, 125, 126, 127, 128, 131, 132, 133, 134, 141, 143, 144, 145, 152, 154, 155, 157, 159, 162, 225, 226, 227, 228, 230, 231, 249, 250, 263, 264, 266, 267, 269, 272, 274, 277, 279, 282, 310, 318, 321, 339, 340, 345, 346, 349, 357, 360, 364, 367, 369, 372, 374, 377, 379, 382, 386, 389, 401, 417, 418, 419, 435, 451, 454, 471, 474, 511, 514, 556, 559, 561, 564, 591, 594, 651, 654, 661, 664, 681, 684, 696, 699, 701, 704, 706, 709, 746, 750, 849, 850, 853, 899, 902, 920, 921, 923, 926, 976, 998, 1001, 1003, 1006, 1025, 1029, 1036, 1040, 1041, 1093, 1149, 1152, 1159, 1176, 1179, 1181, 1184, 1185, 1187, 1212, 1215, 1237, 1240, 1247, 1251, 1267, 1271, 1272, 1276, 1303, 1304, 1307, 1314, 1317, 1319, 1322, 1329, 1332, 1334, 1337, 1344, 1347, 1349, 1352, 1359, 1362, 1369, 1373, 1379, 1383, 1384, 1385, 1386, 1387, 1411, 1412, 1415, 1432, 1438, 1454, 1457, 1464, 1465, 1469, 1470, 1474, 1501, 1502, 1505, 1507, 1510, 1516, 1519, 1520, 1523, 1524, 1527, 1528, 1531, 1532, 1535, 1536, 1540, 1541, 1545, 1546, 1547, 1550, 1552, 1555, 1558], "tool": [26, 29, 36, 145, 160, 164, 175, 176, 1558], "have": [26, 27, 28, 29, 31, 32, 34, 35, 36, 38, 41, 42, 48, 49, 50, 51, 54, 55, 56, 57, 58, 59, 60, 61, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 159, 160, 161, 162, 163, 164, 175, 176, 189, 190, 193, 195, 198, 200, 203, 205, 208, 210, 213, 215, 218, 220, 223, 225, 227, 228, 230, 231, 233, 235, 240, 242, 243, 244, 247, 249, 250, 252, 255, 257, 258, 261, 263, 264, 266, 267, 269, 272, 279, 282, 284, 285, 287, 290, 292, 296, 297, 301, 302, 304, 305, 309, 310, 313, 316, 318, 321, 323, 326, 346, 349, 401, 426, 430, 435, 436, 439, 441, 444, 446, 449, 451, 454, 456, 459, 461, 464, 466, 469, 471, 474, 476, 479, 481, 484, 486, 489, 491, 494, 496, 499, 501, 504, 506, 509, 511, 514, 516, 519, 521, 524, 526, 529, 531, 534, 536, 539, 541, 544, 546, 549, 551, 554, 556, 559, 561, 564, 566, 569, 571, 574, 576, 579, 581, 584, 586, 589, 591, 594, 596, 599, 601, 604, 606, 609, 611, 614, 616, 619, 621, 624, 626, 629, 631, 634, 636, 639, 641, 644, 646, 649, 651, 654, 656, 659, 661, 664, 666, 669, 671, 674, 676, 679, 681, 684, 686, 689, 691, 694, 696, 699, 701, 704, 706, 709, 711, 714, 716, 719, 721, 724, 726, 729, 731, 735, 736, 740, 741, 745, 746, 750, 751, 755, 756, 849, 866, 869, 871, 874, 881, 884, 886, 889, 891, 894, 906, 909, 911, 914, 978, 981, 983, 986, 1042, 1043, 1046, 1047, 1050, 1053, 1056, 1057, 1059, 1062, 1065, 1066, 1069, 1070, 1073, 1075, 1079, 1087, 1091, 1093, 1095, 1098, 1100, 1103, 1105, 1108, 1110, 1112, 1114, 1117, 1119, 1122, 1124, 1125, 1127, 1130, 1132, 1135, 1139, 1142, 1149, 1152, 1154, 1157, 1159, 1160, 1163, 1165, 1168, 1170, 1173, 1176, 1179, 1181, 1184, 1185, 1187, 1188, 1191, 1193, 1196, 1198, 1201, 1203, 1206, 1208, 1210, 1212, 1215, 1217, 1220, 1222, 1225, 1227, 1230, 1232, 1235, 1237, 1240, 1242, 1245, 1247, 1251, 1252, 1256, 1257, 1261, 1262, 1266, 1272, 1276, 1277, 1281, 1282, 1286, 1287, 1288, 1291, 1293, 1296, 1298, 1301, 1303, 1304, 1307, 1309, 1312, 1314, 1317, 1319, 1322, 1324, 1327, 1329, 1332, 1334, 1337, 1339, 1342, 1344, 1347, 1354, 1357, 1359, 1362, 1364, 1368, 1369, 1373, 1379, 1383, 1384, 1388, 1406, 1407, 1410, 1411, 1412, 1415, 1417, 1420, 1422, 1425, 1427, 1430, 1433, 1436, 1438, 1439, 1442, 1444, 1447, 1449, 1452, 1454, 1457, 1459, 1463, 1464, 1465, 1469, 1470, 1474, 1475, 1479, 1480, 1484, 1485, 1486, 1489, 1496, 1499, 1501, 1502, 1505, 1507, 1510, 1516, 1519, 1520, 1523, 1524, 1527, 1528, 1531, 1532, 1535, 1536, 1540, 1541, 1545, 1546, 1547, 1550, 1552, 1555, 1557, 1558, 1566, 1569, 1571, 1581, 1593, 1595, 1597, 1603], "explod": [26, 27, 1558], "onto": [26, 27, 1388, 1394, 1400, 1558], "scene": [26, 27, 60, 61, 137, 158, 160, 1558], "b": [26, 29, 30, 38, 41, 42, 54, 55, 58, 59, 64, 65, 88, 89, 90, 93, 94, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 127, 128, 129, 130, 131, 132, 133, 134, 137, 140, 141, 142, 145, 150, 158, 159, 160, 162, 163, 164, 174, 189, 190, 193, 200, 203, 228, 240, 242, 257, 258, 261, 305, 309, 310, 313, 316, 318, 321, 323, 326, 328, 331, 341, 343, 374, 377, 435, 436, 439, 441, 444, 446, 449, 456, 459, 461, 464, 466, 469, 471, 474, 476, 479, 481, 484, 496, 499, 501, 504, 506, 509, 511, 514, 516, 519, 521, 524, 526, 529, 531, 534, 536, 539, 551, 554, 556, 559, 561, 564, 566, 569, 571, 574, 576, 579, 581, 584, 586, 589, 591, 594, 596, 599, 601, 604, 606, 609, 611, 614, 616, 619, 626, 629, 631, 634, 636, 639, 641, 644, 646, 649, 651, 654, 656, 659, 666, 669, 671, 674, 676, 679, 686, 689, 696, 699, 701, 704, 706, 709, 711, 714, 716, 719, 721, 724, 726, 729, 736, 740, 741, 745, 849, 850, 853, 857, 859, 866, 869, 871, 874, 878, 880, 886, 889, 891, 894, 896, 898, 906, 909, 911, 914, 923, 926, 931, 934, 937, 940, 942, 945, 983, 986, 998, 1001, 1008, 1012, 1020, 1024, 1025, 1029, 1042, 1043, 1046, 1053, 1056, 1057, 1059, 1062, 1065, 1070, 1073, 1075, 1079, 1082, 1086, 1093, 1095, 1098, 1105, 1108, 1119, 1122, 1127, 1130, 1139, 1142, 1154, 1157, 1159, 1160, 1163, 1165, 1168, 1170, 1173, 1176, 1179, 1188, 1191, 1193, 1196, 1198, 1201, 1203, 1206, 1212, 1215, 1222, 1225, 1237, 1240, 1242, 1245, 1252, 1256, 1257, 1261, 1262, 1266, 1287, 1288, 1291, 1303, 1304, 1307, 1319, 1322, 1324, 1327, 1329, 1332, 1334, 1337, 1339, 1342, 1344, 1347, 1354, 1357, 1359, 1362, 1364, 1368, 1369, 1373, 1374, 1378, 1388, 1391, 1394, 1396, 1399, 1404, 1405, 1406, 1407, 1410, 1438, 1444, 1447, 1454, 1457, 1459, 1463, 1464, 1470, 1474, 1475, 1479, 1485, 1486, 1489, 1496, 1499, 1501, 1502, 1505, 1507, 1510, 1512, 1515, 1516, 1519, 1520, 1523, 1524, 1527, 1536, 1540, 1541, 1545, 1546, 1547, 1550, 1552, 1555, 1558, 1564], "why": [26, 28, 36, 152, 161, 1558], "unifi": [26, 28, 91, 92, 137, 138, 139, 143, 147, 153, 157, 159, 176, 401, 425, 1558], "should": [26, 28, 31, 32, 34, 35, 36, 38, 41, 42, 48, 49, 54, 55, 56, 57, 58, 59, 60, 61, 66, 67, 70, 71, 74, 75, 76, 77, 82, 83, 88, 89, 90, 91, 92, 93, 94, 97, 98, 103, 104, 105, 106, 109, 110, 115, 116, 119, 120, 123, 124, 125, 126, 129, 130, 131, 132, 135, 136, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 159, 161, 162, 163, 189, 225, 226, 227, 228, 269, 272, 279, 282, 292, 296, 297, 301, 310, 323, 326, 385, 401, 402, 435, 436, 439, 441, 444, 446, 449, 451, 454, 456, 459, 461, 464, 466, 469, 471, 474, 476, 479, 481, 484, 486, 489, 491, 494, 496, 499, 501, 504, 506, 509, 511, 514, 516, 519, 521, 524, 531, 534, 546, 549, 551, 554, 556, 559, 576, 579, 581, 584, 586, 589, 591, 594, 596, 599, 606, 609, 611, 614, 616, 619, 621, 624, 626, 629, 631, 634, 636, 639, 641, 644, 646, 649, 661, 664, 671, 674, 681, 684, 696, 699, 706, 709, 711, 714, 716, 719, 721, 724, 726, 729, 731, 735, 736, 740, 741, 745, 746, 750, 751, 755, 756, 849, 865, 947, 950, 1041, 1042, 1047, 1050, 1053, 1056, 1062, 1065, 1066, 1069, 1070, 1073, 1093, 1154, 1157, 1159, 1160, 1163, 1165, 1168, 1170, 1173, 1176, 1179, 1188, 1191, 1193, 1196, 1198, 1201, 1203, 1206, 1208, 1210, 1212, 1215, 1222, 1225, 1227, 1230, 1232, 1235, 1237, 1240, 1242, 1245, 1247, 1251, 1257, 1261, 1262, 1266, 1272, 1276, 1277, 1281, 1287, 1303, 1384, 1388, 1406, 1411, 1433, 1436, 1438, 1439, 1442, 1444, 1447, 1464, 1465, 1469, 1470, 1474, 1475, 1479, 1480, 1484, 1485, 1501, 1502, 1505, 1507, 1510, 1512, 1515, 1516, 1519, 1520, 1523, 1524, 1527, 1528, 1531, 1532, 1535, 1536, 1540, 1541, 1545, 1546, 1558, 1566, 1569, 1571, 1581, 1593, 1595, 1597, 1603], "them": [26, 27, 28, 29, 34, 36, 138, 139, 140, 141, 147, 151, 152, 153, 154, 155, 159, 161, 162, 163, 176, 849, 865, 977, 1557, 1558], "c": [26, 28, 29, 30, 35, 58, 59, 60, 61, 64, 65, 82, 83, 99, 100, 103, 104, 107, 108, 109, 110, 119, 120, 131, 132, 137, 141, 145, 150, 157, 158, 159, 160, 162, 176, 310, 346, 349, 357, 360, 435, 501, 504, 606, 609, 611, 614, 671, 674, 706, 709, 849, 857, 859, 891, 894, 1025, 1029, 1042, 1043, 1046, 1047, 1050, 1053, 1056, 1062, 1065, 1066, 1069, 1070, 1073, 1093, 1105, 1108, 1119, 1122, 1159, 1193, 1196, 1303, 1359, 1362, 1388, 1391, 1396, 1399, 1404, 1405, 1438, 1454, 1457, 1501, 1507, 1510, 1512, 1515, 1532, 1535, 1541, 1545, 1557, 1558, 1564], "standard": [26, 54, 55, 72, 73, 74, 75, 82, 83, 103, 104, 121, 122, 123, 124, 131, 132, 137, 138, 139, 141, 143, 146, 149, 152, 155, 156, 176, 228, 230, 231, 233, 235, 243, 244, 247, 249, 250, 252, 255, 257, 258, 261, 263, 264, 269, 272, 284, 285, 287, 290, 292, 296, 297, 301, 302, 304, 305, 309, 310, 328, 331, 346, 349, 357, 360, 386, 389, 435, 436, 439, 441, 444, 446, 449, 451, 454, 456, 459, 461, 464, 466, 469, 471, 474, 476, 479, 481, 484, 486, 489, 491, 494, 501, 504, 506, 509, 511, 514, 516, 519, 521, 524, 531, 534, 536, 539, 551, 554, 556, 559, 561, 564, 566, 569, 571, 574, 576, 579, 581, 584, 586, 589, 601, 604, 611, 614, 616, 619, 621, 624, 626, 629, 631, 634, 636, 639, 641, 644, 646, 649, 661, 664, 666, 669, 671, 674, 676, 679, 681, 684, 696, 699, 701, 704, 706, 709, 711, 714, 716, 719, 721, 724, 726, 729, 731, 735, 736, 740, 741, 745, 746, 750, 849, 1041, 1159, 1160, 1163, 1165, 1168, 1170, 1173, 1176, 1179, 1181, 1184, 1185, 1187, 1193, 1196, 1198, 1201, 1203, 1206, 1208, 1210, 1212, 1215, 1217, 1220, 1222, 1225, 1227, 1230, 1232, 1235, 1237, 1240, 1242, 1245, 1247, 1251, 1252, 1256, 1257, 1261, 1272, 1276, 1277, 1281, 1303, 1309, 1312, 1319, 1322, 1324, 1327, 1329, 1332, 1339, 1342, 1344, 1347, 1354, 1357, 1359, 1362, 1406, 1407, 1410, 1411, 1422, 1425, 1438, 1439, 1442, 1444, 1447, 1454, 1457, 1459, 1463, 1464, 1465, 1469, 1470, 1474, 1475, 1479, 1480, 1484, 1485, 1486, 1489, 1496, 1499, 1501, 1516, 1519, 1520, 1523, 1524, 1527, 1528, 1531, 1532, 1535, 1536, 1540, 1541, 1545, 1546, 1547, 1550, 1552, 1555, 1558, 1564], "re": [26, 27, 28, 30, 34, 35, 36, 58, 59, 137, 143, 156, 157, 161, 164, 176, 401, 425, 849, 865, 881, 884, 1159, 1257, 1261, 1303, 1344, 1347, 1438, 1459, 1463, 1558], "collabor": [26, 27, 28, 1558], "consortium": [26, 28, 1558, 1564], "data": [26, 28, 35, 38, 41, 42, 48, 49, 51, 54, 55, 56, 57, 58, 59, 60, 61, 66, 67, 70, 71, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 88, 91, 92, 93, 94, 97, 98, 100, 103, 104, 105, 106, 107, 108, 109, 110, 115, 116, 119, 120, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 137, 138, 141, 144, 146, 149, 150, 151, 152, 154, 156, 157, 159, 161, 228, 230, 231, 233, 235, 243, 244, 247, 249, 250, 252, 255, 257, 258, 261, 263, 264, 266, 267, 269, 272, 274, 277, 279, 282, 284, 285, 287, 290, 292, 296, 297, 301, 302, 304, 305, 309, 311, 312, 313, 316, 323, 326, 328, 331, 334, 341, 343, 345, 346, 349, 351, 352, 354, 355, 357, 360, 362, 363, 364, 367, 369, 372, 374, 377, 379, 382, 384, 391, 395, 400, 401, 402, 403, 435, 436, 439, 441, 444, 446, 449, 451, 454, 456, 459, 461, 464, 466, 469, 471, 474, 476, 479, 481, 484, 486, 489, 491, 494, 496, 499, 501, 504, 506, 509, 511, 514, 516, 519, 521, 524, 531, 534, 536, 539, 546, 549, 551, 554, 556, 559, 561, 564, 566, 569, 571, 574, 576, 579, 581, 584, 586, 589, 591, 594, 596, 599, 601, 604, 606, 609, 611, 614, 616, 619, 621, 624, 626, 629, 631, 634, 636, 639, 641, 644, 646, 649, 661, 664, 671, 674, 681, 684, 696, 699, 706, 709, 711, 714, 716, 719, 721, 724, 726, 729, 731, 735, 736, 740, 741, 745, 746, 750, 751, 755, 849, 953, 956, 958, 961, 968, 971, 1008, 1012, 1042, 1057, 1059, 1087, 1091, 1093, 1139, 1142, 1159, 1160, 1163, 1165, 1168, 1170, 1173, 1176, 1179, 1181, 1184, 1185, 1187, 1188, 1191, 1193, 1196, 1198, 1201, 1203, 1206, 1208, 1210, 1212, 1215, 1217, 1220, 1222, 1225, 1227, 1230, 1232, 1235, 1237, 1240, 1242, 1245, 1247, 1251, 1257, 1261, 1262, 1266, 1272, 1276, 1277, 1281, 1303, 1309, 1312, 1324, 1327, 1329, 1332, 1339, 1342, 1344, 1347, 1354, 1357, 1359, 1362, 1411, 1417, 1420, 1422, 1425, 1427, 1430, 1433, 1436, 1438, 1439, 1442, 1444, 1447, 1454, 1457, 1485, 1486, 1489, 1491, 1494, 1501, 1502, 1505, 1507, 1510, 1516, 1519, 1520, 1523, 1524, 1527, 1528, 1531, 1532, 1535, 1536, 1540, 1541, 1545, 1546, 1547, 1550, 1552, 1555, 1557, 1558, 1564], "api": [26, 27, 35, 36, 54, 55, 103, 104, 137, 139, 143, 144, 145, 146, 147, 149, 150, 151, 152, 153, 154, 155, 157, 158, 160, 162, 176, 228, 230, 231, 233, 235, 243, 244, 247, 249, 250, 252, 255, 257, 258, 261, 263, 264, 269, 272, 284, 285, 287, 290, 292, 296, 297, 301, 302, 304, 305, 309, 310, 328, 331, 346, 349, 357, 360, 384, 386, 389, 435, 436, 439, 441, 444, 446, 449, 451, 454, 456, 459, 461, 464, 466, 469, 471, 474, 476, 479, 481, 484, 486, 489, 491, 494, 501, 504, 506, 509, 511, 514, 516, 519, 521, 524, 531, 534, 536, 539, 551, 554, 556, 559, 561, 564, 566, 569, 571, 574, 576, 579, 581, 584, 586, 589, 601, 604, 611, 614, 616, 619, 621, 624, 626, 629, 631, 634, 636, 639, 641, 644, 646, 649, 661, 664, 666, 669, 671, 674, 676, 679, 681, 684, 696, 699, 701, 704, 706, 709, 711, 714, 716, 719, 721, 724, 726, 729, 731, 735, 736, 740, 741, 745, 746, 750, 1159, 1160, 1163, 1165, 1168, 1170, 1173, 1176, 1179, 1181, 1184, 1185, 1187, 1193, 1196, 1198, 1201, 1203, 1206, 1208, 1210, 1212, 1215, 1217, 1220, 1222, 1225, 1227, 1230, 1232, 1235, 1237, 1240, 1242, 1245, 1247, 1251, 1252, 1256, 1257, 1261, 1272, 1276, 1277, 1281, 1303, 1309, 1312, 1319, 1322, 1324, 1327, 1329, 1332, 1339, 1342, 1344, 1347, 1354, 1357, 1359, 1362, 1438, 1439, 1442, 1444, 1447, 1454, 1457, 1459, 1463, 1464, 1465, 1469, 1470, 1474, 1475, 1479, 1480, 1484, 1485, 1486, 1489, 1496, 1499, 1501, 1516, 1519, 1520, 1523, 1524, 1527, 1528, 1531, 1532, 1535, 1536, 1540, 1541, 1545, 1546, 1547, 1550, 1552, 1555, 1557, 1558, 1564], "open": [27, 28, 29, 30, 32, 35, 36, 74, 75, 123, 124, 142, 143, 146, 153, 154, 157, 175, 228, 230, 231, 1411, 1417, 1420, 1427, 1430, 1558], "project": [27, 28, 29, 32, 35, 36, 140, 155, 163, 175, 176], "grown": 27, "consider": [27, 145, 149, 157], "recent": [27, 28, 35, 36, 155], "year": [27, 29, 138, 176, 1558], "especi": [27, 35, 138, 157], "deep": [27, 30, 33, 34, 36, 91, 92, 141, 143, 154, 158, 161, 162, 1558], "learn": [27, 28, 30, 33, 34, 35, 60, 61, 109, 110, 137, 138, 150, 158, 175, 1042, 1047, 1050, 1053, 1056, 1062, 1065, 1066, 1069, 1070, 1073, 1384, 1385, 1386, 1387, 1557, 1558], "can": [27, 28, 29, 30, 31, 33, 34, 35, 36, 48, 49, 50, 51, 66, 67, 70, 71, 74, 75, 99, 100, 115, 116, 119, 120, 123, 124, 137, 138, 140, 141, 142, 143, 144, 145, 146, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 175, 176, 228, 233, 235, 274, 277, 310, 328, 331, 401, 423, 424, 425, 849, 1041, 1159, 1193, 1196, 1247, 1251, 1303, 1339, 1342, 1411, 1417, 1420, 1422, 1425, 1427, 1430, 1557, 1558, 1564], "seen": [27, 28, 142, 145, 147, 153, 155, 159, 161, 162], "rapidli": 27, "increas": [27, 66, 67, 115, 116, 147, 156, 157, 1159, 1267, 1271, 1303, 1314, 1317, 1379, 1383, 1388, 1400], "github": [27, 31, 33, 34, 36, 138, 143, 145, 146, 155], "repo": [27, 31, 33, 35, 36, 138, 143, 153, 156, 1558, 1564], "contain": [27, 31, 32, 34, 35, 38, 41, 42, 43, 45, 46, 47, 48, 49, 50, 51, 54, 55, 56, 57, 58, 59, 66, 67, 68, 69, 70, 71, 76, 77, 78, 79, 82, 83, 84, 85, 89, 90, 91, 92, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 142, 143, 145, 146, 149, 150, 151, 152, 155, 158, 159, 160, 163, 176, 189, 190, 193, 200, 203, 205, 208, 210, 213, 220, 223, 228, 230, 231, 233, 235, 240, 242, 243, 244, 247, 249, 250, 252, 255, 257, 258, 261, 263, 264, 266, 267, 269, 272, 284, 285, 287, 290, 292, 296, 297, 301, 302, 304, 305, 309, 310, 313, 316, 318, 321, 323, 326, 328, 331, 341, 343, 346, 349, 357, 360, 364, 367, 374, 377, 386, 389, 401, 415, 419, 435, 436, 439, 441, 444, 446, 449, 451, 454, 456, 459, 461, 464, 466, 469, 471, 474, 476, 479, 481, 484, 486, 489, 491, 494, 496, 499, 501, 504, 506, 509, 511, 514, 516, 519, 521, 524, 526, 529, 531, 534, 536, 539, 546, 549, 551, 554, 556, 559, 561, 564, 566, 569, 571, 574, 576, 579, 581, 584, 586, 589, 591, 594, 596, 599, 601, 604, 606, 609, 611, 614, 616, 619, 621, 624, 626, 629, 631, 634, 636, 639, 641, 644, 646, 649, 651, 654, 656, 659, 661, 664, 666, 669, 671, 674, 676, 679, 681, 684, 686, 689, 696, 699, 701, 704, 706, 709, 711, 714, 716, 719, 721, 724, 726, 729, 731, 735, 736, 740, 741, 745, 746, 750, 751, 755, 849, 850, 853, 855, 856, 866, 869, 871, 874, 886, 889, 891, 894, 896, 898, 906, 909, 911, 914, 922, 923, 926, 931, 934, 937, 940, 942, 945, 963, 966, 983, 986, 992, 993, 998, 1001, 1008, 1012, 1014, 1018, 1020, 1024, 1025, 1029, 1033, 1041, 1042, 1043, 1046, 1053, 1056, 1057, 1059, 1062, 1065, 1070, 1073, 1075, 1079, 1082, 1086, 1087, 1091, 1093, 1095, 1098, 1105, 1108, 1119, 1122, 1127, 1130, 1139, 1142, 1154, 1157, 1159, 1160, 1163, 1165, 1168, 1170, 1173, 1176, 1179, 1181, 1184, 1185, 1187, 1188, 1191, 1193, 1196, 1198, 1201, 1203, 1206, 1208, 1210, 1212, 1215, 1217, 1220, 1222, 1225, 1227, 1230, 1232, 1235, 1237, 1240, 1242, 1245, 1247, 1251, 1252, 1256, 1257, 1261, 1262, 1266, 1272, 1276, 1277, 1281, 1282, 1286, 1287, 1288, 1291, 1293, 1296, 1298, 1301, 1303, 1304, 1307, 1309, 1312, 1314, 1317, 1319, 1322, 1324, 1327, 1329, 1332, 1334, 1337, 1339, 1342, 1344, 1347, 1349, 1352, 1354, 1357, 1359, 1362, 1364, 1368, 1369, 1373, 1374, 1378, 1379, 1383, 1384, 1385, 1386, 1387, 1388, 1401, 1404, 1406, 1407, 1410, 1411, 1412, 1415, 1438, 1439, 1442, 1444, 1447, 1454, 1457, 1459, 1463, 1464, 1465, 1469, 1470, 1474, 1475, 1479, 1480, 1484, 1485, 1486, 1489, 1496, 1499, 1501, 1502, 1505, 1507, 1510, 1512, 1515, 1516, 1519, 1520, 1523, 1524, 1527, 1528, 1531, 1532, 1535, 1536, 1540, 1541, 1545, 1546, 1547, 1550, 1552, 1555, 1557, 1558], "term": [27, 36, 141, 159, 1093, 1144, 1147, 1557], "time": [27, 28, 29, 34, 35, 36, 60, 61, 78, 79, 109, 110, 127, 128, 140, 141, 142, 143, 145, 149, 150, 151, 152, 153, 155, 156, 159, 162, 164, 176, 1042, 1047, 1050, 1062, 1065, 1093, 1144, 1147, 1303, 1369, 1373, 1384, 1385, 1386, 1387, 1438, 1439, 1442, 1444, 1447, 1464, 1465, 1469, 1470, 1474], "These": [27, 28, 29, 31, 33, 34, 35, 36, 56, 57, 105, 106, 138, 141, 142, 143, 145, 146, 148, 149, 150, 152, 154, 155, 156, 159, 160, 162, 163, 164, 176, 1159, 1181, 1184, 1557, 1558, 1564], "written": [27, 35, 139, 146, 149, 152, 153, 155, 156, 159, 161, 164, 176], "mani": [27, 28, 29, 34, 35, 36, 70, 71, 91, 92, 119, 120, 139, 140, 141, 143, 144, 145, 146, 148, 149, 150, 151, 152, 153, 154, 155, 157, 159, 161, 162, 176, 1303, 1349, 1352], "differ": [27, 28, 29, 33, 35, 36, 38, 41, 42, 54, 55, 58, 59, 88, 91, 92, 93, 94, 107, 108, 131, 132, 137, 139, 141, 143, 144, 145, 146, 147, 148, 149, 150, 152, 154, 155, 156, 157, 159, 160, 161, 162, 163, 164, 176, 310, 346, 349, 435, 451, 454, 661, 664, 731, 735, 849, 906, 909, 1093, 1139, 1142, 1303, 1309, 1312, 1359, 1362, 1501, 1502, 1505, 1507, 1510, 1528, 1531, 1536, 1540, 1558], "while": [27, 28, 34, 35, 36, 88, 91, 92, 93, 94, 140, 145, 148, 149, 152, 153, 155, 157, 161, 163, 164, 176, 228, 279, 282, 310, 385, 435, 636, 639, 641, 644, 1464, 1465, 1469, 1501, 1520, 1523, 1532, 1535], "thi": [27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 38, 39, 40, 41, 42, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 175, 176, 189, 220, 223, 225, 227, 228, 230, 231, 233, 235, 243, 244, 247, 249, 250, 252, 255, 257, 258, 261, 263, 264, 266, 267, 269, 272, 274, 277, 284, 285, 287, 290, 292, 296, 297, 301, 302, 304, 305, 309, 310, 328, 331, 346, 349, 357, 360, 364, 367, 374, 377, 385, 386, 389, 401, 402, 420, 425, 434, 435, 436, 439, 441, 444, 446, 449, 451, 454, 456, 459, 461, 464, 466, 469, 471, 474, 476, 479, 481, 484, 486, 489, 491, 494, 501, 504, 506, 509, 511, 514, 516, 519, 521, 524, 531, 534, 536, 539, 551, 554, 556, 559, 561, 564, 566, 569, 571, 574, 576, 579, 581, 584, 586, 589, 601, 604, 611, 614, 616, 619, 621, 624, 626, 629, 631, 634, 636, 639, 641, 644, 646, 649, 661, 664, 666, 669, 671, 674, 676, 679, 681, 684, 696, 699, 701, 704, 706, 709, 711, 714, 716, 719, 721, 724, 726, 729, 731, 735, 736, 740, 741, 745, 746, 750, 756, 849, 899, 902, 906, 909, 923, 926, 928, 931, 934, 937, 940, 947, 950, 993, 1008, 1012, 1025, 1029, 1041, 1042, 1057, 1059, 1074, 1075, 1079, 1080, 1082, 1086, 1087, 1091, 1092, 1093, 1105, 1108, 1127, 1130, 1139, 1142, 1154, 1157, 1159, 1160, 1163, 1165, 1168, 1170, 1173, 1176, 1179, 1181, 1184, 1185, 1187, 1193, 1196, 1198, 1201, 1203, 1206, 1208, 1210, 1212, 1215, 1217, 1220, 1222, 1225, 1227, 1230, 1232, 1235, 1237, 1240, 1242, 1245, 1247, 1251, 1252, 1256, 1257, 1261, 1272, 1276, 1277, 1281, 1282, 1286, 1287, 1303, 1304, 1307, 1309, 1312, 1314, 1317, 1319, 1322, 1324, 1327, 1329, 1332, 1334, 1337, 1339, 1342, 1344, 1347, 1349, 1352, 1354, 1357, 1359, 1362, 1364, 1368, 1369, 1373, 1374, 1378, 1379, 1383, 1384, 1388, 1394, 1400, 1401, 1406, 1407, 1410, 1411, 1438, 1439, 1442, 1444, 1447, 1454, 1457, 1459, 1463, 1464, 1465, 1469, 1470, 1474, 1475, 1479, 1480, 1484, 1485, 1486, 1489, 1496, 1499, 1501, 1516, 1519, 1520, 1523, 1524, 1527, 1528, 1531, 1532, 1535, 1536, 1540, 1541, 1545, 1546, 1547, 1550, 1552, 1555, 1558, 1564, 1566, 1569, 1571, 1581, 1593, 1595, 1597, 1603], "wonder": [27, 29, 161], "thing": [27, 28, 29, 33, 34, 35, 36, 140, 148, 153, 155, 157, 161, 162], "research": [27, 175], "develop": [27, 28, 29, 30, 31, 33, 34, 35, 36, 138, 142, 156, 175, 176, 1557, 1558], "also": [27, 28, 30, 31, 33, 34, 35, 36, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 89, 90, 91, 92, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 137, 138, 139, 141, 142, 143, 144, 145, 146, 149, 150, 151, 152, 153, 154, 155, 156, 157, 159, 162, 163, 164, 175, 176, 228, 230, 231, 233, 235, 243, 244, 247, 249, 250, 252, 255, 257, 258, 261, 263, 264, 266, 267, 269, 272, 284, 285, 287, 290, 292, 296, 297, 301, 302, 304, 305, 309, 310, 328, 331, 364, 367, 374, 377, 435, 436, 439, 441, 444, 446, 449, 451, 454, 456, 459, 461, 464, 466, 469, 471, 474, 476, 479, 481, 484, 486, 489, 491, 494, 501, 504, 506, 509, 511, 514, 516, 519, 521, 524, 531, 534, 536, 539, 551, 554, 556, 559, 561, 564, 566, 569, 571, 574, 576, 579, 581, 584, 586, 589, 591, 594, 601, 604, 611, 614, 616, 619, 621, 624, 626, 629, 631, 634, 636, 639, 641, 644, 646, 649, 661, 664, 666, 669, 671, 674, 676, 679, 681, 684, 696, 699, 701, 704, 706, 709, 711, 714, 716, 719, 721, 724, 726, 729, 731, 735, 736, 740, 741, 745, 746, 750, 849, 906, 909, 923, 926, 931, 934, 937, 940, 947, 950, 1008, 1012, 1025, 1029, 1042, 1047, 1050, 1057, 1059, 1075, 1079, 1082, 1086, 1087, 1091, 1093, 1105, 1108, 1127, 1130, 1139, 1142, 1154, 1157, 1159, 1160, 1163, 1165, 1168, 1170, 1173, 1176, 1179, 1181, 1184, 1185, 1187, 1193, 1196, 1198, 1201, 1203, 1206, 1208, 1210, 1212, 1215, 1217, 1220, 1222, 1225, 1227, 1230, 1232, 1235, 1237, 1240, 1242, 1245, 1247, 1251, 1252, 1256, 1257, 1261, 1272, 1276, 1277, 1281, 1282, 1286, 1303, 1304, 1307, 1309, 1312, 1314, 1317, 1319, 1322, 1324, 1327, 1329, 1332, 1334, 1337, 1339, 1342, 1344, 1347, 1349, 1352, 1354, 1357, 1359, 1362, 1364, 1368, 1369, 1373, 1374, 1378, 1379, 1383, 1384, 1385, 1386, 1387, 1388, 1389, 1390, 1398, 1399, 1400, 1406, 1407, 1410, 1438, 1439, 1442, 1444, 1447, 1454, 1457, 1459, 1463, 1464, 1465, 1469, 1470, 1474, 1475, 1479, 1480, 1484, 1485, 1486, 1489, 1496, 1499, 1501, 1516, 1519, 1520, 1523, 1524, 1527, 1528, 1531, 1532, 1535, 1536, 1540, 1541, 1545, 1546, 1547, 1550, 1552, 1555], "consid": [27, 28, 66, 67, 115, 116, 150, 156, 160, 161, 162, 435, 636, 639, 641, 644, 1159, 1212, 1215, 1464, 1465, 1469, 1470, 1474, 1475, 1479, 1480, 1484], "speed": [27, 155], "evolv": 27, "sharabl": 27, "code": [27, 28, 29, 31, 32, 33, 34, 35, 36, 54, 55, 88, 91, 92, 93, 94, 101, 102, 103, 104, 137, 138, 139, 140, 141, 142, 143, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 157, 158, 159, 160, 161, 162, 163, 164, 174, 176, 401, 402, 426, 430, 849, 1008, 1012, 1042, 1074, 1080, 1092, 1093, 1127, 1130, 1159, 1212, 1215, 1303, 1359, 1362, 1557, 1558, 1564], "significantli": [27, 1159, 1247, 1251], "hinder": [27, 149], "librari": [27, 28, 29, 30, 34, 101, 102, 138, 157, 164, 174, 176, 401, 426, 430, 435, 551, 554, 616, 619, 636, 639, 641, 644, 1159, 1181, 1184, 1185, 1187, 1464, 1465, 1469, 1470, 1474, 1475, 1479, 1480, 1484, 1501, 1516, 1519, 1520, 1523, 1524, 1527, 1532, 1535, 1557, 1558], "outdat": 27, "month": 27, "rigor": [27, 155], "maintain": [27, 36, 80, 81, 129, 130, 138, 142, 1485, 1486, 1489, 1496, 1499], "against": [27, 50, 51, 66, 67, 76, 77, 99, 100, 103, 104, 115, 116, 125, 126, 155, 176, 310, 318, 321, 1159, 1198, 1201, 1203, 1206, 1212, 1215, 1227, 1230, 1438, 1439, 1442], "newest": 27, "For": [27, 28, 29, 31, 32, 34, 35, 36, 60, 61, 66, 67, 109, 110, 115, 116, 137, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 159, 161, 162, 163, 164, 175, 176, 228, 230, 231, 269, 272, 435, 436, 439, 441, 444, 446, 449, 451, 454, 456, 459, 461, 464, 466, 469, 471, 474, 511, 514, 516, 519, 521, 524, 546, 549, 551, 554, 556, 559, 606, 609, 611, 614, 616, 619, 621, 624, 626, 629, 636, 639, 661, 664, 681, 684, 696, 699, 701, 704, 711, 714, 716, 719, 721, 724, 736, 740, 741, 745, 746, 750, 1042, 1057, 1059, 1087, 1091, 1159, 1247, 1251, 1262, 1266, 1303, 1304, 1307, 1359, 1362, 1464, 1465, 1469, 1470, 1474, 1475, 1479, 1480, 1484, 1501, 1516, 1519, 1524, 1527, 1536, 1540], "softwar": [27, 28, 35, 36], "pipelin": [27, 139, 164, 1557], "where": [27, 28, 29, 30, 32, 35, 36, 48, 49, 54, 55, 56, 57, 58, 59, 66, 67, 70, 71, 74, 75, 76, 77, 82, 83, 84, 85, 91, 92, 97, 98, 103, 104, 105, 106, 115, 116, 119, 120, 123, 124, 125, 126, 131, 132, 133, 134, 139, 140, 141, 143, 144, 146, 147, 148, 150, 151, 152, 153, 154, 155, 156, 157, 159, 162, 163, 164, 176, 228, 257, 258, 261, 269, 272, 279, 282, 435, 471, 474, 546, 549, 591, 594, 616, 619, 651, 654, 656, 659, 661, 664, 681, 684, 849, 947, 950, 1041, 1042, 1074, 1080, 1092, 1159, 1181, 1184, 1203, 1206, 1212, 1215, 1227, 1230, 1232, 1235, 1247, 1251, 1252, 1256, 1262, 1266, 1272, 1276, 1303, 1304, 1307, 1314, 1317, 1329, 1332, 1359, 1362, 1379, 1383, 1388, 1389, 1399, 1411, 1412, 1415, 1417, 1420, 1422, 1425, 1427, 1430, 1438, 1454, 1457, 1501, 1532, 1535, 1541, 1545, 1546, 1547, 1550, 1552, 1555, 1558], "rapid": [27, 28, 35], "prototyp": 27, "vital": [27, 164], "signific": [27, 28, 176], "bottleneck": 27, "As": [27, 35, 36, 86, 87, 135, 136, 139, 141, 143, 144, 147, 149, 150, 151, 152, 153, 154, 155, 156, 157, 159, 161, 162, 163, 176, 1464, 1465, 1469, 1470, 1474, 1475, 1479, 1480, 1484], "new": [27, 28, 29, 30, 32, 34, 35, 36, 58, 59, 60, 61, 70, 71, 72, 73, 91, 92, 97, 98, 107, 108, 109, 110, 119, 120, 121, 122, 137, 140, 141, 142, 143, 145, 146, 148, 151, 152, 153, 155, 156, 157, 158, 161, 164, 175, 228, 243, 252, 255, 257, 258, 261, 279, 282, 284, 285, 287, 290, 302, 304, 305, 309, 310, 395, 435, 476, 479, 676, 679, 691, 694, 849, 881, 884, 886, 889, 891, 894, 899, 902, 906, 909, 911, 914, 919, 978, 981, 983, 986, 990, 998, 1001, 1003, 1006, 1020, 1024, 1042, 1047, 1050, 1053, 1056, 1062, 1065, 1066, 1069, 1070, 1073, 1303, 1319, 1322, 1339, 1342, 1359, 1362, 1388, 1393, 1404, 1405, 1406, 1407, 1410, 1557, 1558], "futur": [27, 29, 35, 36, 143, 153, 156, 157, 161, 176, 1159, 1181, 1184, 1185, 1187], "avail": [27, 35, 36, 58, 59, 107, 108, 141, 142, 144, 146, 153, 176, 401, 406, 416, 417, 418, 432, 849, 886, 889], "quickli": [27, 29, 35, 36, 162, 163], "obsolet": [27, 29], "user": [27, 28, 31, 32, 35, 36, 137, 140, 141, 143, 151, 152, 153, 155, 157, 158, 159, 176], "constantli": [27, 156, 157], "invent": 27, "wheel": 27, "our": [27, 28, 30, 33, 34, 35, 36, 38, 86, 87, 88, 135, 136, 138, 141, 142, 143, 145, 147, 148, 153, 154, 155, 156, 157, 158, 161, 162, 163, 164, 176, 189, 225, 227, 228, 310, 401, 435, 756, 849, 1042, 1093, 1159, 1287, 1303, 1384, 1388, 1406, 1411, 1438, 1485, 1501, 1546, 1558, 1566, 1569, 1571, 1581, 1593, 1595, 1597, 1603], "desir": [27, 36, 50, 51, 76, 77, 91, 92, 99, 100, 101, 102, 125, 126, 140, 143, 153, 310, 313, 316, 328, 331, 401, 426, 430, 1438, 1449, 1452], "simultan": [27, 29], "modern": [27, 28], "simpl": [27, 34, 35, 36, 139, 141, 143, 144, 145, 146, 150, 152, 153, 155, 156, 157, 161, 163, 164, 176, 849, 896, 898, 1557], "scalabl": [27, 159], "manner": [27, 35, 43, 46, 47, 95, 96, 144, 146, 153, 156, 162, 175, 176, 1388, 1400], "determin": [27, 38, 41, 42, 54, 55, 56, 57, 66, 67, 70, 71, 84, 85, 88, 91, 92, 93, 94, 103, 104, 105, 106, 107, 108, 115, 116, 129, 130, 133, 134, 141, 143, 144, 146, 150, 153, 154, 157, 310, 328, 331, 334, 345, 363, 364, 367, 369, 372, 374, 377, 379, 382, 400, 401, 416, 417, 418, 432, 435, 441, 444, 446, 449, 451, 454, 456, 459, 461, 464, 466, 469, 471, 474, 476, 479, 481, 484, 491, 494, 496, 499, 501, 504, 506, 509, 516, 519, 521, 524, 531, 534, 546, 549, 551, 554, 576, 579, 581, 584, 586, 589, 591, 594, 606, 609, 611, 614, 616, 619, 621, 624, 626, 629, 646, 649, 661, 664, 681, 684, 696, 699, 711, 714, 716, 719, 721, 724, 736, 740, 741, 745, 751, 755, 849, 850, 853, 857, 859, 931, 934, 936, 952, 953, 956, 958, 961, 963, 966, 968, 971, 1008, 1012, 1036, 1040, 1042, 1057, 1059, 1093, 1149, 1152, 1159, 1160, 1163, 1165, 1168, 1170, 1173, 1176, 1179, 1188, 1191, 1193, 1196, 1198, 1201, 1208, 1210, 1212, 1215, 1222, 1225, 1227, 1230, 1237, 1240, 1242, 1245, 1262, 1266, 1272, 1276, 1277, 1281, 1303, 1309, 1312, 1384, 1385, 1386, 1387, 1464, 1465, 1469, 1470, 1474, 1475, 1479, 1480, 1484, 1546, 1547, 1550, 1552, 1555], "exactli": [27, 29, 141, 143, 144, 145, 157, 1558, 1564], "common": [27, 34, 54, 55, 56, 57, 91, 92, 105, 106, 141, 144, 145, 148, 150, 151, 153, 156, 157, 176, 310, 385, 435, 661, 664], "ground": [27, 153, 155], "li": 27, "between": [27, 68, 69, 70, 71, 88, 91, 92, 93, 94, 117, 118, 119, 120, 139, 140, 141, 145, 149, 150, 153, 154, 155, 157, 158, 160, 161, 162, 164, 175, 228, 230, 231, 310, 346, 349, 435, 471, 474, 681, 684, 1287, 1288, 1291, 1293, 1296, 1298, 1301, 1303, 1359, 1362, 1388, 1394, 1411, 1417, 1420, 1464, 1465, 1469, 1470, 1474, 1475, 1479, 1480, 1484, 1558], "find": [27, 30, 33, 34, 35, 36, 91, 92, 138, 142, 155, 157, 159, 162, 1464, 1465, 1469, 1470, 1474, 1475, 1479, 1480, 1484, 1557, 1558], "essenti": [27, 28, 34, 144, 145, 150, 156], "order": [27, 32, 34, 35, 36, 38, 41, 42, 56, 57, 60, 61, 66, 67, 80, 81, 88, 91, 92, 93, 94, 105, 106, 115, 116, 129, 130, 139, 140, 141, 142, 143, 144, 145, 146, 149, 152, 153, 154, 155, 156, 157, 162, 164, 176, 228, 269, 272, 435, 471, 474, 1159, 1181, 1184, 1203, 1206, 1247, 1251, 1252, 1256, 1267, 1271, 1277, 1281, 1303, 1324, 1327, 1384, 1385, 1386, 1438, 1454, 1457, 1464, 1465, 1469, 1470, 1474, 1475, 1479, 1480, 1484, 1485, 1486, 1489, 1491, 1494, 1496, 1499], "design": [27, 28, 105, 106, 137, 143, 152, 153, 154, 157, 159, 161, 176], "univers": 27, "abstract": [27, 141, 143, 153, 155, 157, 163, 176, 401, 402], "In": [27, 29, 31, 34, 35, 36, 58, 59, 70, 71, 101, 102, 119, 120, 138, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 161, 162, 163, 164, 175, 176, 401, 420, 426, 430, 431, 434, 435, 451, 454, 661, 664, 696, 699, 849, 855, 947, 950, 1303, 1339, 1342, 1411, 1427, 1430, 1558], "search": [27, 33, 35, 43, 46, 47, 77, 95, 96, 126, 145, 155, 156, 1439, 1442, 1444, 1447, 1449, 1452, 1454, 1457, 1459, 1463], "languag": [27, 29, 153, 157, 159, 1557], "first": [27, 28, 31, 32, 33, 34, 35, 36, 38, 41, 42, 54, 55, 56, 57, 66, 67, 74, 75, 76, 77, 78, 79, 82, 83, 88, 93, 94, 103, 104, 105, 106, 115, 116, 123, 124, 127, 128, 131, 132, 138, 139, 141, 145, 149, 150, 151, 152, 153, 155, 157, 159, 161, 162, 164, 225, 226, 228, 263, 264, 266, 267, 310, 384, 395, 401, 406, 435, 451, 454, 481, 484, 491, 494, 496, 499, 501, 504, 506, 509, 536, 539, 561, 564, 571, 574, 596, 599, 601, 604, 626, 629, 631, 634, 641, 644, 646, 649, 661, 664, 671, 674, 681, 684, 731, 735, 849, 857, 859, 1159, 1165, 1168, 1176, 1179, 1181, 1184, 1188, 1191, 1198, 1201, 1222, 1225, 1232, 1235, 1247, 1251, 1257, 1261, 1272, 1276, 1303, 1344, 1347, 1359, 1362, 1364, 1368, 1384, 1385, 1386, 1387, 1388, 1389, 1390, 1398, 1399, 1411, 1433, 1436, 1438, 1439, 1442, 1444, 1447, 1464, 1465, 1469, 1470, 1474, 1475, 1479, 1485, 1491, 1494, 1501, 1502, 1505, 1507, 1510], "see": [27, 30, 34, 35, 36, 38, 41, 42, 50, 51, 54, 55, 66, 67, 76, 77, 82, 83, 84, 85, 88, 93, 94, 103, 104, 115, 116, 125, 126, 131, 132, 133, 134, 138, 141, 142, 144, 145, 149, 150, 153, 154, 155, 156, 157, 159, 161, 162, 175, 176, 228, 230, 231, 252, 255, 263, 264, 266, 267, 310, 323, 326, 386, 389, 435, 451, 454, 481, 484, 491, 494, 496, 499, 501, 504, 506, 509, 531, 534, 551, 554, 596, 599, 616, 619, 626, 629, 641, 644, 646, 649, 671, 674, 681, 684, 696, 699, 731, 735, 751, 755, 1159, 1212, 1215, 1227, 1230, 1242, 1245, 1272, 1276, 1277, 1281, 1438, 1444, 1447, 1464, 1465, 1469, 1470, 1474, 1475, 1479, 1480, 1484, 1501, 1516, 1519, 1520, 1523, 1524, 1527, 1528, 1531, 1532, 1535, 1536, 1540, 1541, 1545, 1546, 1547, 1550, 1552, 1555, 1558], "clear": [27, 28, 29, 34, 36, 143, 144, 145, 153, 157, 159, 161, 401, 405], "front": [27, 158, 159, 162, 1558, 1564], "runner": 27, "look": [27, 31, 32, 35, 36, 140, 141, 143, 144, 145, 147, 149, 150, 153, 154, 155, 156, 157, 159, 161, 163, 164, 1558], "littl": [27, 154, 161], "deeper": [27, 36, 137, 155, 158, 1388, 1399, 1400], "follow": [27, 28, 32, 34, 35, 36, 58, 59, 60, 61, 91, 92, 107, 108, 109, 110, 115, 116, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 149, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 176, 310, 357, 360, 401, 425, 435, 696, 699, 849, 937, 940, 942, 945, 947, 950, 998, 1001, 1003, 1006, 1042, 1047, 1050, 1053, 1056, 1062, 1065, 1066, 1069, 1070, 1073, 1093, 1149, 1152, 1154, 1157, 1159, 1203, 1206, 1232, 1235, 1277, 1281, 1388, 1394, 1400, 1464, 1465, 1469, 1470, 1474, 1475, 1479, 1480, 1484, 1558], "same": [27, 29, 31, 32, 35, 36, 38, 41, 42, 43, 44, 45, 48, 49, 50, 51, 54, 55, 56, 57, 60, 61, 64, 65, 66, 67, 70, 71, 74, 75, 78, 79, 80, 81, 82, 83, 91, 92, 97, 98, 99, 100, 103, 104, 105, 106, 107, 108, 109, 110, 113, 114, 115, 116, 119, 120, 123, 124, 127, 128, 131, 132, 139, 140, 141, 142, 143, 144, 145, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 159, 161, 163, 164, 176, 228, 230, 231, 244, 247, 258, 261, 269, 272, 279, 282, 287, 290, 292, 296, 297, 301, 305, 309, 310, 313, 316, 318, 321, 323, 326, 401, 425, 435, 436, 439, 451, 454, 486, 489, 511, 514, 556, 559, 661, 664, 696, 699, 701, 704, 706, 709, 746, 750, 1042, 1057, 1059, 1075, 1079, 1093, 1095, 1098, 1100, 1103, 1105, 1108, 1110, 1112, 1114, 1117, 1119, 1122, 1124, 1125, 1127, 1130, 1154, 1157, 1159, 1160, 1163, 1165, 1168, 1170, 1173, 1176, 1179, 1181, 1184, 1185, 1187, 1193, 1196, 1208, 1210, 1217, 1220, 1227, 1230, 1232, 1235, 1242, 1245, 1247, 1251, 1262, 1266, 1272, 1276, 1303, 1309, 1312, 1324, 1327, 1329, 1332, 1339, 1342, 1344, 1347, 1354, 1357, 1359, 1362, 1384, 1385, 1386, 1388, 1401, 1411, 1427, 1430, 1464, 1465, 1469, 1470, 1474, 1475, 1479, 1480, 1484, 1485, 1486, 1489, 1496, 1499, 1501, 1502, 1505, 1507, 1510, 1512, 1515, 1516, 1519, 1520, 1523, 1524, 1527, 1528, 1531, 1532, 1535, 1536, 1540, 1541, 1545, 1558], "core": [27, 34, 35, 144, 155, 164, 401, 417, 1558], "principl": 27, "oper": [27, 34, 35, 50, 51, 56, 57, 58, 59, 60, 61, 64, 65, 88, 91, 92, 93, 94, 99, 100, 105, 106, 107, 108, 113, 114, 138, 139, 141, 143, 144, 145, 146, 150, 152, 153, 155, 157, 159, 162, 163, 228, 263, 264, 266, 267, 310, 386, 389, 435, 451, 454, 501, 504, 506, 509, 571, 574, 666, 669, 671, 674, 696, 699, 726, 729, 849, 860, 863, 881, 884, 886, 889, 891, 894, 1008, 1012, 1093, 1095, 1098, 1100, 1103, 1105, 1108, 1110, 1112, 1114, 1117, 1119, 1122, 1124, 1125, 1127, 1130, 1139, 1142, 1557], "expos": [27, 159, 163, 849, 876], "almost": [27, 33, 141, 154, 160, 162], "ident": [27, 29, 91, 92, 141, 150, 151, 153, 154, 156, 157, 161, 162, 176, 401, 415, 849, 919, 1159, 1208, 1210, 1388, 1401, 1557, 1558], "uniqu": [27, 56, 57, 78, 79, 105, 106, 127, 128, 141, 150, 153, 154, 155, 157, 176, 1384, 1385, 1386, 1387, 1388, 1394, 1464, 1465, 1469, 1470, 1474, 1475, 1479, 1480, 1484], "syntax": [27, 28, 143, 148], "There": [27, 34, 35, 36, 138, 139, 141, 143, 145, 147, 148, 150, 153, 154, 159, 162, 176], "onli": [27, 30, 34, 35, 36, 38, 41, 42, 74, 75, 91, 92, 123, 124, 138, 139, 140, 141, 142, 143, 144, 145, 149, 150, 151, 152, 153, 154, 155, 156, 157, 159, 161, 162, 163, 164, 174, 176, 310, 384, 385, 401, 421, 434, 435, 636, 639, 641, 644, 849, 865, 1159, 1198, 1201, 1232, 1235, 1247, 1251, 1303, 1324, 1327, 1388, 1389, 1390, 1398, 1399, 1411, 1417, 1420, 1422, 1425, 1427, 1430, 1438, 1439, 1442, 1444, 1447, 1485, 1491, 1494, 1501, 1520, 1523, 1532, 1535, 1558], "so": [27, 28, 34, 35, 36, 38, 39, 40, 41, 42, 43, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 89, 90, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 139, 140, 141, 143, 144, 145, 146, 148, 149, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 176, 177, 187, 1388, 1389, 1399, 1558], "wai": [27, 28, 33, 34, 35, 138, 140, 152, 154, 155, 157, 161, 162, 163, 164, 176], "manipul": [27, 71, 120, 156, 159, 164, 175, 1304, 1307, 1309, 1312, 1314, 1317, 1319, 1322, 1324, 1327, 1329, 1332, 1334, 1337, 1339, 1342, 1344, 1347, 1349, 1352, 1354, 1357, 1359, 1362, 1364, 1368, 1369, 1373, 1374, 1378, 1379, 1383], "unsurprisingli": [27, 145], "fundament": [27, 153, 157, 159], "consist": [27, 91, 92, 138, 139, 143, 147, 152, 1159, 1181, 1184, 1501, 1512, 1515], "each": [27, 28, 29, 31, 34, 35, 36, 38, 41, 42, 50, 51, 54, 55, 56, 57, 58, 59, 60, 61, 64, 65, 66, 67, 70, 71, 76, 77, 78, 79, 82, 83, 88, 91, 92, 93, 94, 99, 100, 103, 104, 105, 106, 107, 108, 109, 110, 113, 114, 115, 116, 119, 120, 125, 126, 127, 128, 131, 132, 137, 138, 139, 140, 141, 142, 143, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 159, 161, 162, 164, 175, 176, 189, 205, 208, 210, 213, 220, 223, 228, 269, 272, 310, 318, 321, 401, 425, 435, 436, 439, 441, 444, 446, 449, 451, 454, 456, 459, 461, 464, 466, 469, 471, 474, 476, 479, 481, 484, 486, 489, 491, 494, 496, 499, 501, 504, 506, 509, 511, 514, 516, 519, 521, 524, 526, 529, 531, 534, 536, 539, 546, 549, 551, 554, 556, 559, 561, 564, 566, 569, 571, 574, 576, 579, 581, 584, 586, 589, 591, 594, 596, 599, 601, 604, 606, 609, 611, 614, 616, 619, 621, 624, 626, 629, 631, 634, 636, 639, 641, 644, 646, 649, 661, 664, 666, 669, 671, 674, 676, 679, 681, 684, 686, 689, 691, 694, 696, 699, 701, 704, 706, 709, 711, 714, 716, 719, 721, 724, 726, 729, 731, 735, 736, 740, 741, 745, 746, 750, 849, 850, 853, 906, 909, 1041, 1042, 1047, 1050, 1051, 1053, 1056, 1062, 1065, 1066, 1069, 1070, 1073, 1093, 1095, 1098, 1100, 1103, 1105, 1108, 1110, 1112, 1114, 1117, 1119, 1122, 1124, 1125, 1127, 1130, 1132, 1135, 1159, 1160, 1163, 1165, 1168, 1170, 1173, 1181, 1184, 1185, 1187, 1198, 1201, 1208, 1210, 1212, 1215, 1217, 1220, 1227, 1230, 1237, 1240, 1242, 1245, 1247, 1251, 1267, 1271, 1303, 1314, 1317, 1334, 1337, 1344, 1347, 1349, 1352, 1359, 1362, 1369, 1373, 1379, 1383, 1388, 1394, 1401, 1411, 1412, 1415, 1438, 1454, 1457, 1464, 1465, 1469, 1470, 1474, 1501, 1507, 1510, 1512, 1515, 1558, 1564], "veri": [27, 28, 33, 34, 35, 36, 141, 143, 144, 145, 149, 150, 152, 153, 154, 155, 156, 157, 160, 162, 163, 164, 176, 1558], "similar": [27, 34, 35, 141, 142, 143, 144, 147, 151, 153, 154, 155, 156, 162, 176, 435, 696, 699, 1093, 1149, 1152], "convent": [27, 140, 149, 156, 175, 1159, 1198, 1201, 1501, 1512, 1515], "those": [27, 34, 35, 36, 70, 71, 91, 92, 119, 120, 141, 151, 153, 155, 157, 228, 230, 231, 310, 385, 849, 1041, 1042, 1087, 1091, 1159, 1232, 1235, 1247, 1251, 1303, 1304, 1307], "introduc": [27, 141, 142, 143, 162, 1303, 1344, 1347, 1464, 1465, 1469], "2006": 27, "layer": [27, 65, 72, 73, 114, 121, 122, 146, 153, 156, 157, 159, 160, 163, 1094, 1095, 1098, 1100, 1103, 1105, 1108, 1110, 1112, 1114, 1117, 1119, 1122, 1124, 1125, 1126, 1127, 1130, 1132, 1135, 1137, 1138, 1139, 1142, 1144, 1147, 1149, 1152, 1154, 1157, 1406, 1407, 1410, 1558], "therefor": [27, 31, 34, 35, 36, 54, 55, 103, 104, 138, 139, 141, 143, 144, 145, 146, 147, 149, 150, 152, 153, 154, 155, 156, 157, 159, 161, 163, 176, 228, 230, 231, 233, 235, 243, 244, 247, 249, 250, 252, 255, 257, 258, 261, 263, 264, 266, 267, 269, 272, 284, 285, 287, 290, 292, 296, 297, 301, 302, 304, 305, 309, 310, 328, 331, 364, 367, 374, 377, 385, 435, 436, 439, 441, 444, 446, 449, 451, 454, 456, 459, 461, 464, 466, 469, 471, 474, 476, 479, 481, 484, 486, 489, 491, 494, 501, 504, 506, 509, 511, 514, 516, 519, 521, 524, 531, 534, 536, 539, 551, 554, 556, 559, 561, 564, 566, 569, 571, 574, 576, 579, 581, 584, 586, 589, 601, 604, 611, 614, 616, 619, 621, 624, 626, 629, 631, 634, 636, 639, 641, 644, 646, 649, 661, 664, 666, 669, 671, 674, 676, 679, 681, 684, 696, 699, 701, 704, 706, 709, 711, 714, 716, 719, 721, 724, 726, 729, 731, 735, 736, 740, 741, 745, 746, 750, 849, 906, 909, 923, 926, 931, 934, 937, 940, 1008, 1012, 1025, 1029, 1042, 1057, 1059, 1075, 1079, 1082, 1086, 1087, 1091, 1093, 1105, 1108, 1127, 1130, 1139, 1142, 1154, 1157, 1159, 1160, 1163, 1165, 1168, 1170, 1173, 1176, 1179, 1181, 1184, 1185, 1187, 1193, 1196, 1198, 1201, 1203, 1206, 1208, 1210, 1212, 1215, 1217, 1220, 1222, 1225, 1227, 1230, 1232, 1235, 1237, 1240, 1242, 1245, 1247, 1251, 1252, 1256, 1257, 1261, 1272, 1276, 1277, 1281, 1282, 1286, 1303, 1304, 1307, 1309, 1312, 1314, 1317, 1319, 1322, 1324, 1327, 1329, 1332, 1334, 1337, 1339, 1342, 1344, 1347, 1349, 1352, 1354, 1357, 1359, 1362, 1364, 1368, 1369, 1373, 1374, 1378, 1379, 1383, 1406, 1407, 1410, 1438, 1439, 1442, 1444, 1447, 1454, 1457, 1459, 1463, 1464, 1465, 1469, 1470, 1474, 1475, 1479, 1480, 1484, 1485, 1486, 1489, 1496, 1499, 1501, 1516, 1519, 1520, 1523, 1524, 1527, 1528, 1531, 1532, 1535, 1536, 1540, 1541, 1545, 1546, 1547, 1550, 1552, 1555], "present": [27, 34, 36, 91, 92, 141, 143, 144, 149, 152, 159], "itself": [27, 35, 36, 138, 141, 152, 153, 163, 175, 176, 849, 855, 1030, 1388, 1400], "cut": 27, "cloth": 27, "adher": [27, 28, 138, 143, 146, 149, 157, 159, 164], "semant": [27, 159, 164, 435, 696, 699], "round": [27, 28, 29, 31, 32, 34, 35, 36, 54, 55, 103, 104, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 159, 160, 161, 162, 163, 164, 175, 435, 451, 454, 511, 514, 556, 559, 561, 564, 661, 664, 721, 724, 746, 750, 751, 755, 1558], "up": [27, 28, 29, 30, 31, 32, 34, 36, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 159, 160, 161, 162, 163, 164, 175, 176], "hopefulli": [27, 28, 29, 31, 32, 34, 35, 36, 38, 88, 137, 138, 139, 140, 141, 142, 143, 144, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 159, 160, 161, 162, 163, 164, 175, 189, 225, 227, 228, 310, 401, 435, 756, 849, 1042, 1093, 1159, 1287, 1303, 1384, 1388, 1406, 1411, 1438, 1485, 1501, 1546, 1566, 1569, 1571, 1581, 1593, 1595, 1597, 1603], "paint": [27, 159], "pictur": [27, 34, 159], "how": [27, 29, 30, 33, 34, 35, 36, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 151, 152, 153, 154, 156, 157, 158, 160, 161, 162, 163, 164, 175, 176, 1558, 1564], "pleas": [27, 28, 29, 31, 32, 34, 35, 36, 38, 88, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 159, 160, 161, 162, 163, 164, 175, 189, 225, 227, 228, 310, 401, 435, 756, 849, 1042, 1093, 1159, 1287, 1303, 1384, 1388, 1406, 1411, 1438, 1485, 1501, 1546, 1558, 1566, 1569, 1571, 1581, 1593, 1595, 1597, 1603], "reach": [27, 28, 29, 31, 32, 34, 35, 36, 38, 88, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 159, 160, 161, 162, 163, 164, 175, 189, 225, 227, 228, 310, 401, 435, 756, 849, 1042, 1093, 1159, 1287, 1303, 1384, 1388, 1400, 1406, 1411, 1438, 1485, 1501, 1546, 1566, 1569, 1571, 1581, 1593, 1595, 1597, 1603], "out": [27, 28, 29, 30, 31, 32, 33, 34, 35, 38, 39, 40, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 88, 89, 90, 91, 92, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 150, 151, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 175, 189, 190, 193, 195, 198, 200, 203, 205, 208, 210, 213, 215, 218, 220, 223, 225, 227, 228, 230, 231, 233, 235, 240, 242, 243, 244, 247, 249, 250, 252, 255, 257, 258, 261, 263, 264, 266, 267, 279, 282, 284, 285, 287, 290, 292, 296, 297, 301, 302, 304, 305, 309, 310, 313, 316, 323, 326, 401, 426, 430, 435, 436, 439, 441, 444, 446, 449, 451, 454, 456, 459, 461, 464, 466, 469, 471, 474, 476, 479, 481, 484, 486, 489, 491, 494, 496, 499, 501, 504, 506, 509, 511, 514, 516, 519, 521, 524, 526, 529, 531, 534, 536, 539, 541, 544, 546, 549, 551, 554, 556, 559, 561, 564, 566, 569, 571, 574, 576, 579, 581, 584, 586, 589, 591, 594, 596, 599, 601, 604, 606, 609, 611, 614, 616, 619, 621, 624, 626, 629, 631, 634, 636, 639, 641, 644, 646, 649, 651, 654, 656, 659, 661, 664, 666, 669, 671, 674, 676, 679, 681, 684, 686, 689, 691, 694, 696, 699, 701, 704, 706, 709, 711, 714, 716, 719, 721, 724, 726, 729, 731, 735, 736, 740, 741, 745, 746, 750, 751, 755, 756, 849, 856, 866, 869, 871, 874, 881, 884, 886, 889, 891, 894, 906, 909, 911, 914, 974, 978, 981, 983, 986, 1042, 1043, 1046, 1047, 1050, 1053, 1056, 1062, 1065, 1066, 1069, 1070, 1073, 1075, 1079, 1080, 1093, 1094, 1095, 1098, 1100, 1103, 1105, 1108, 1110, 1112, 1114, 1117, 1119, 1122, 1124, 1125, 1127, 1130, 1132, 1135, 1139, 1142, 1144, 1147, 1149, 1152, 1154, 1157, 1159, 1160, 1163, 1165, 1168, 1170, 1173, 1175, 1176, 1179, 1181, 1184, 1185, 1187, 1188, 1191, 1193, 1196, 1198, 1201, 1203, 1206, 1208, 1210, 1212, 1215, 1217, 1220, 1222, 1225, 1227, 1230, 1242, 1245, 1252, 1256, 1257, 1261, 1262, 1266, 1267, 1271, 1272, 1276, 1277, 1281, 1282, 1286, 1287, 1288, 1291, 1293, 1296, 1298, 1301, 1303, 1304, 1307, 1309, 1312, 1314, 1317, 1319, 1322, 1324, 1327, 1329, 1332, 1334, 1337, 1339, 1342, 1344, 1347, 1354, 1357, 1359, 1362, 1364, 1368, 1369, 1373, 1379, 1383, 1384, 1388, 1406, 1407, 1410, 1411, 1412, 1415, 1417, 1420, 1422, 1425, 1427, 1430, 1433, 1436, 1438, 1439, 1442, 1444, 1447, 1449, 1452, 1459, 1463, 1464, 1480, 1484, 1485, 1486, 1489, 1491, 1494, 1496, 1499, 1501, 1502, 1505, 1507, 1510, 1512, 1515, 1516, 1519, 1520, 1523, 1524, 1527, 1528, 1531, 1532, 1535, 1536, 1540, 1541, 1545, 1546, 1547, 1550, 1552, 1555, 1558, 1566, 1569, 1571, 1581, 1593, 1595, 1597, 1603], "discord": [27, 28, 29, 31, 32, 34, 35, 36, 38, 88, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 159, 160, 161, 162, 163, 164, 175, 189, 225, 227, 228, 310, 401, 435, 756, 849, 1042, 1093, 1159, 1287, 1303, 1384, 1388, 1406, 1411, 1438, 1485, 1501, 1546, 1566, 1569, 1571, 1581, 1593, 1595, 1597, 1603], "you": [27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 38, 58, 59, 88, 107, 108, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 175, 176, 189, 225, 227, 228, 310, 401, 435, 756, 849, 906, 909, 1042, 1093, 1159, 1287, 1303, 1384, 1388, 1406, 1411, 1438, 1485, 1501, 1546, 1557, 1558, 1564, 1566, 1569, 1571, 1581, 1593, 1595, 1597, 1603], "question": [27, 28, 29, 31, 32, 34, 35, 36, 38, 88, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 159, 160, 161, 162, 163, 164, 175, 176, 189, 225, 227, 228, 310, 401, 435, 756, 849, 1042, 1093, 1159, 1287, 1303, 1384, 1388, 1406, 1411, 1438, 1485, 1501, 1546, 1566, 1569, 1571, 1581, 1593, 1595, 1597, 1603], "With": [28, 29, 35, 38, 41, 42, 48, 49, 50, 51, 54, 55, 58, 59, 60, 61, 66, 67, 76, 77, 82, 83, 88, 93, 94, 97, 98, 99, 100, 103, 104, 105, 106, 107, 108, 109, 110, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 145, 151, 153, 155, 157, 159, 189, 190, 193, 195, 198, 200, 203, 205, 208, 210, 213, 215, 218, 220, 223, 228, 240, 242, 257, 258, 261, 269, 272, 305, 309, 310, 313, 316, 318, 321, 323, 326, 328, 331, 334, 341, 343, 345, 346, 349, 357, 360, 374, 377, 386, 389, 391, 401, 407, 410, 419, 435, 436, 439, 441, 444, 446, 449, 451, 454, 456, 459, 461, 464, 466, 469, 471, 474, 476, 479, 481, 484, 496, 499, 501, 504, 506, 509, 511, 514, 516, 519, 521, 524, 526, 529, 531, 534, 536, 539, 551, 554, 556, 559, 561, 564, 566, 569, 571, 574, 576, 579, 581, 584, 586, 589, 591, 594, 596, 599, 601, 604, 606, 609, 611, 614, 616, 619, 626, 629, 631, 634, 636, 639, 641, 644, 646, 649, 651, 654, 656, 659, 661, 664, 666, 669, 671, 674, 676, 679, 686, 689, 696, 699, 701, 704, 706, 709, 711, 714, 716, 719, 721, 724, 726, 729, 736, 740, 741, 745, 751, 755, 849, 850, 853, 857, 859, 865, 866, 869, 871, 874, 878, 880, 886, 889, 891, 894, 896, 898, 906, 909, 911, 914, 923, 926, 931, 934, 937, 940, 942, 945, 983, 986, 998, 1001, 1008, 1012, 1014, 1018, 1020, 1024, 1025, 1029, 1041, 1042, 1043, 1046, 1053, 1056, 1057, 1059, 1061, 1062, 1065, 1070, 1073, 1075, 1079, 1081, 1082, 1086, 1093, 1095, 1098, 1105, 1108, 1119, 1122, 1127, 1130, 1139, 1142, 1154, 1157, 1159, 1160, 1163, 1165, 1168, 1170, 1173, 1176, 1179, 1193, 1196, 1198, 1201, 1203, 1206, 1212, 1215, 1237, 1240, 1252, 1256, 1257, 1261, 1262, 1266, 1267, 1271, 1287, 1288, 1291, 1298, 1301, 1303, 1304, 1307, 1319, 1322, 1324, 1327, 1329, 1332, 1334, 1337, 1339, 1342, 1344, 1347, 1349, 1352, 1354, 1357, 1359, 1362, 1364, 1368, 1369, 1373, 1374, 1378, 1388, 1390, 1391, 1394, 1396, 1399, 1404, 1405, 1406, 1407, 1410, 1411, 1412, 1415, 1438, 1439, 1442, 1444, 1447, 1454, 1457, 1459, 1463, 1464, 1465, 1469, 1470, 1474, 1475, 1479, 1485, 1486, 1489, 1491, 1494, 1496, 1499, 1501, 1502, 1505, 1507, 1510, 1512, 1515, 1516, 1519, 1520, 1523, 1524, 1527, 1536, 1540, 1541, 1545, 1546, 1547, 1550, 1552, 1555], "central": [28, 34, 157], "goal": [28, 34], "being": [28, 29, 35, 36, 38, 41, 42, 91, 92, 138, 139, 140, 141, 142, 143, 144, 145, 148, 149, 151, 152, 153, 154, 155, 157, 159, 162, 175, 176, 228, 230, 231, 849, 865, 928, 993, 1558], "would": [28, 30, 32, 34, 35, 36, 70, 71, 101, 102, 119, 120, 137, 138, 139, 140, 141, 143, 145, 146, 148, 149, 151, 152, 153, 154, 155, 157, 158, 159, 161, 163, 164, 176, 189, 200, 203, 215, 218, 401, 426, 430, 1303, 1339, 1342, 1558], "entir": [28, 29, 34, 35, 36, 82, 83, 84, 85, 91, 92, 107, 108, 131, 132, 133, 134, 138, 139, 141, 143, 145, 152, 153, 155, 157, 159, 162, 163, 164, 176, 401, 425, 1501, 1516, 1519, 1520, 1523, 1524, 1527, 1528, 1531, 1532, 1535, 1536, 1540, 1541, 1545, 1546, 1547, 1550, 1552, 1555], "forgiven": 28, "rais": [28, 36, 58, 59, 70, 71, 74, 75, 84, 85, 91, 92, 107, 108, 119, 120, 123, 124, 133, 134, 138, 140, 147, 148, 152, 153, 159, 161, 310, 323, 326, 435, 546, 549, 681, 684, 849, 860, 863, 920, 947, 950, 990, 1003, 1006, 1008, 1012, 1030, 1042, 1074, 1080, 1092, 1159, 1198, 1201, 1208, 1210, 1272, 1276, 1303, 1319, 1322, 1339, 1342, 1359, 1362, 1411, 1417, 1420, 1422, 1425, 1427, 1430, 1438, 1454, 1457, 1501, 1516, 1519, 1524, 1527, 1546, 1547, 1550, 1552, 1555], "an": [28, 29, 31, 32, 34, 35, 36, 38, 41, 42, 43, 46, 47, 48, 49, 50, 51, 54, 55, 56, 57, 58, 59, 60, 61, 66, 67, 70, 71, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 91, 92, 93, 94, 97, 98, 99, 100, 101, 102, 103, 104, 107, 108, 109, 110, 115, 116, 119, 120, 123, 124, 125, 126, 127, 128, 131, 132, 133, 134, 135, 136, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 149, 150, 151, 152, 153, 154, 155, 156, 157, 159, 161, 162, 163, 164, 175, 176, 189, 205, 208, 210, 213, 220, 223, 225, 227, 228, 230, 231, 233, 235, 240, 242, 243, 244, 247, 249, 250, 252, 255, 257, 258, 261, 263, 264, 266, 267, 269, 272, 274, 277, 284, 285, 287, 290, 292, 296, 297, 301, 302, 304, 305, 309, 310, 313, 316, 318, 321, 323, 326, 328, 331, 346, 349, 357, 360, 364, 367, 374, 377, 385, 386, 389, 401, 426, 430, 435, 436, 439, 441, 444, 446, 449, 451, 454, 456, 459, 461, 464, 466, 469, 471, 474, 476, 479, 481, 484, 486, 489, 491, 494, 496, 499, 501, 504, 506, 509, 511, 514, 516, 519, 521, 524, 526, 529, 531, 534, 536, 539, 546, 549, 551, 554, 556, 559, 561, 564, 566, 569, 571, 574, 576, 579, 581, 584, 586, 589, 591, 594, 596, 599, 601, 604, 606, 609, 611, 614, 616, 619, 621, 624, 626, 629, 631, 634, 636, 639, 641, 644, 646, 649, 651, 654, 656, 659, 661, 664, 666, 669, 671, 674, 676, 679, 681, 684, 686, 689, 696, 699, 701, 704, 706, 709, 711, 714, 716, 719, 721, 724, 726, 729, 731, 735, 736, 740, 741, 745, 746, 750, 751, 755, 756, 849, 866, 869, 871, 874, 899, 902, 906, 909, 923, 926, 931, 934, 937, 940, 947, 950, 953, 956, 958, 961, 963, 966, 968, 971, 983, 986, 1008, 1012, 1020, 1024, 1025, 1029, 1030, 1041, 1042, 1057, 1059, 1074, 1075, 1079, 1082, 1086, 1087, 1091, 1092, 1093, 1105, 1108, 1127, 1130, 1139, 1142, 1154, 1157, 1159, 1160, 1163, 1165, 1168, 1170, 1173, 1176, 1179, 1181, 1184, 1185, 1187, 1193, 1196, 1198, 1201, 1203, 1206, 1208, 1210, 1212, 1215, 1217, 1220, 1222, 1225, 1227, 1230, 1232, 1235, 1237, 1240, 1242, 1245, 1247, 1251, 1252, 1256, 1257, 1261, 1262, 1266, 1272, 1276, 1277, 1281, 1282, 1286, 1287, 1303, 1304, 1307, 1309, 1312, 1314, 1317, 1319, 1322, 1324, 1327, 1329, 1332, 1334, 1337, 1339, 1342, 1344, 1347, 1349, 1352, 1354, 1357, 1359, 1362, 1364, 1368, 1369, 1373, 1374, 1378, 1379, 1383, 1384, 1388, 1394, 1406, 1407, 1410, 1411, 1417, 1420, 1433, 1436, 1438, 1439, 1442, 1444, 1447, 1454, 1457, 1459, 1463, 1464, 1465, 1469, 1470, 1474, 1475, 1479, 1480, 1484, 1485, 1486, 1489, 1491, 1494, 1496, 1499, 1501, 1502, 1505, 1507, 1510, 1512, 1515, 1516, 1519, 1520, 1523, 1524, 1527, 1528, 1531, 1532, 1535, 1536, 1540, 1541, 1545, 1546, 1547, 1550, 1552, 1555, 1557, 1558, 1566, 1569, 1571, 1581, 1593, 1595, 1597, 1603], "eyebrow": 28, "somehow": 28, "pytorch": [28, 29, 33, 34, 60, 61, 142, 143, 144, 147, 149, 150, 152, 153, 154, 156, 157, 159, 164, 176, 435, 701, 704, 1557, 1558], "other": [28, 31, 34, 35, 36, 38, 41, 42, 50, 51, 58, 59, 82, 83, 88, 91, 92, 93, 94, 99, 100, 103, 104, 107, 108, 131, 132, 138, 139, 141, 142, 145, 146, 148, 150, 152, 153, 154, 155, 156, 157, 159, 161, 163, 164, 174, 175, 176, 225, 226, 228, 230, 231, 279, 282, 310, 385, 435, 551, 554, 616, 619, 849, 850, 853, 855, 1411, 1427, 1430, 1501, 1532, 1535, 1541, 1545, 1557, 1558], "strong": [28, 176], "industri": 28, "back": [28, 36, 139, 143, 151, 158, 176, 849, 988, 1031, 1558, 1564], "momentum": 28, "won": [28, 29, 36, 155, 164], "ad": [28, 33, 34, 35, 36, 70, 71, 119, 120, 135, 136, 139, 141, 143, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 159, 163, 176, 849, 998, 1001, 1003, 1006, 1159, 1181, 1184, 1185, 1187, 1303, 1319, 1322], "just": [28, 29, 35, 36, 138, 140, 143, 145, 146, 150, 151, 152, 153, 154, 155, 161, 162, 176, 1501, 1512, 1515], "problem": [28, 36, 139, 153, 161], "even": [28, 29, 35, 36, 56, 57, 105, 106, 138, 143, 144, 146, 149, 150, 153, 157, 161, 162, 163, 164, 176, 435, 681, 684, 701, 704], "wors": 28, "rather": [28, 36, 58, 59, 60, 61, 91, 92, 107, 108, 109, 110, 138, 141, 143, 146, 152, 153, 154, 155, 156, 164, 176, 228, 230, 231, 401, 425, 849, 953, 956, 958, 961, 968, 971, 1042, 1057, 1059], "funni": 28, "comic": 28, "strip": 28, "easi": [28, 35, 36, 141, 150, 154, 157], "feasibl": [28, 34], "space": [28, 58, 59, 107, 108, 155, 157, 228, 230, 231, 263, 264, 266, 267, 849, 899, 902, 1042, 1074, 1080, 1092], "case": [28, 34, 35, 36, 43, 46, 47, 58, 59, 70, 71, 82, 83, 88, 91, 92, 93, 94, 107, 108, 119, 120, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 159, 161, 163, 164, 176, 228, 269, 272, 401, 420, 431, 434, 435, 436, 439, 441, 444, 446, 449, 451, 454, 456, 459, 461, 464, 466, 469, 471, 474, 506, 509, 511, 514, 516, 519, 521, 524, 546, 549, 551, 554, 556, 559, 606, 609, 611, 614, 616, 619, 621, 624, 626, 629, 636, 639, 661, 664, 681, 684, 696, 699, 701, 704, 706, 709, 711, 714, 716, 719, 721, 724, 736, 740, 741, 745, 746, 750, 849, 947, 950, 983, 986, 1303, 1339, 1342, 1388, 1391, 1397, 1501, 1516, 1519, 1520, 1523, 1524, 1527, 1532, 1535, 1536, 1540, 1541, 1545], "unlik": [28, 141, 145, 152], "charger": 28, "charact": [28, 148], "encod": [28, 58, 59, 107, 108, 162, 849, 899, 902], "instant": [28, 1558], "much": [28, 34, 35, 36, 139, 141, 143, 152, 153, 154, 156, 159, 161, 162], "doe": [28, 32, 34, 36, 70, 71, 91, 92, 119, 120, 137, 140, 143, 145, 146, 149, 150, 152, 153, 154, 155, 156, 157, 159, 161, 162, 176, 435, 506, 509, 849, 947, 950, 1303, 1349, 1352, 1557], "mandat": [28, 143, 152, 155, 156], "adopt": [28, 36, 139, 149, 157], "continu": [28, 29, 33, 34, 137, 138, 148, 155, 176], "own": [28, 29, 35, 138, 143, 146, 147, 153, 155, 156, 159, 176, 1557], "signatur": [28, 54, 55, 103, 104, 143, 144, 145, 146, 149, 152, 155, 156, 157, 310, 328, 331, 435, 576, 579, 1501, 1532, 1535], "replac": [28, 32, 36, 54, 55, 58, 59, 70, 71, 74, 75, 91, 92, 107, 108, 119, 120, 123, 124, 141, 143, 144, 145, 151, 153, 155, 161, 164, 176, 849, 978, 981, 983, 986, 1303, 1304, 1307, 1411, 1412, 1415], "your": [28, 29, 30, 31, 32, 33, 34, 35, 138, 146, 156, 157, 162, 163, 176, 1558], "10": [28, 32, 35, 54, 55, 56, 57, 58, 59, 60, 61, 66, 67, 74, 75, 82, 83, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 138, 141, 143, 145, 154, 155, 159, 161, 162, 228, 266, 267, 435, 446, 449, 481, 484, 486, 489, 501, 504, 521, 524, 551, 554, 571, 574, 601, 604, 611, 614, 616, 619, 686, 689, 716, 719, 721, 724, 849, 865, 886, 889, 891, 894, 906, 909, 911, 914, 919, 928, 937, 940, 942, 945, 983, 986, 993, 998, 1001, 1034, 1042, 1062, 1065, 1093, 1095, 1098, 1159, 1170, 1173, 1176, 1179, 1193, 1196, 1203, 1206, 1222, 1225, 1252, 1256, 1257, 1261, 1303, 1324, 1327, 1349, 1352, 1359, 1362, 1374, 1378, 1388, 1394, 1396, 1399, 1406, 1407, 1410, 1411, 1412, 1415, 1417, 1420, 1438, 1454, 1457, 1464, 1465, 1469, 1485, 1491, 1494, 1501, 1502, 1505, 1507, 1510, 1512, 1515, 1516, 1519, 1524, 1527, 1536, 1540, 1541, 1545], "100": [28, 29, 107, 108, 155, 162, 163, 164, 176, 435, 501, 504, 721, 724, 849, 911, 914, 942, 945, 983, 986, 1159, 1193, 1196, 1388, 1394, 1558], "despit": [28, 141, 143, 144, 157], "distinct": [28, 35, 141, 146, 152, 153, 158, 1464, 1465, 1469, 1470, 1474, 1475, 1479, 1480, 1484, 1558], "still": [28, 34, 36, 91, 92, 143, 146, 152, 153, 155, 157, 163, 176, 1159, 1247, 1251, 1558], "believ": [28, 36], "share": [28, 91, 92, 140, 141, 145, 150, 154, 155, 157, 159, 310, 395], "bring": [28, 138, 155, 159, 160, 1557], "benefit": [28, 29, 35, 139, 141, 152, 157, 161, 162, 176], "unrel": [28, 36], "what": [28, 29, 31, 36, 137, 141, 145, 146, 149, 151, 153, 155, 158, 159, 161, 162, 163, 164, 175, 176, 1558], "again": [28, 29, 36, 140, 141, 145, 152, 153, 155, 156, 157, 162, 164, 176], "contrari": 28, "bumpi": 28, "road": 28, "allud": [28, 162], "most": [28, 33, 34, 35, 91, 92, 97, 98, 139, 141, 143, 144, 148, 149, 150, 152, 153, 155, 156, 157, 159, 161, 162, 163, 176, 228, 279, 282, 1159, 1181, 1184], "technologi": 28, "sector": [28, 54, 55, 103, 104, 435, 446, 449, 461, 464, 476, 479], "full": [28, 29, 36, 66, 67, 143, 146, 149, 153, 155, 157, 159, 176, 228, 310, 346, 349, 435, 571, 574, 601, 604, 849, 989, 1032, 1093, 1119, 1122, 1159, 1212, 1215, 1232, 1235, 1242, 1245, 1247, 1251], "success": 28, "reason": [28, 34, 36, 138, 139, 141, 143, 145, 150, 152, 153, 156, 157, 159, 161, 435, 696, 699], "build": [28, 30, 31, 35, 142, 143, 150, 158, 160, 163, 164, 176, 1464, 1465, 1469, 1470, 1474, 1475, 1479, 1480, 1484, 1557, 1558], "custom": [28, 142, 147, 154, 155, 163], "comput": [28, 29, 35, 54, 55, 56, 57, 58, 59, 60, 61, 64, 65, 66, 67, 68, 69, 82, 83, 89, 90, 91, 92, 103, 104, 105, 106, 107, 108, 109, 110, 113, 114, 115, 116, 117, 118, 131, 132, 141, 150, 153, 155, 157, 159, 162, 176, 401, 425, 435, 451, 454, 481, 484, 496, 499, 506, 509, 536, 539, 541, 544, 566, 569, 571, 574, 596, 599, 601, 604, 631, 634, 636, 639, 641, 644, 646, 649, 661, 664, 666, 669, 671, 674, 696, 699, 849, 865, 866, 869, 871, 874, 1042, 1043, 1046, 1051, 1052, 1061, 1074, 1075, 1079, 1080, 1081, 1082, 1086, 1092, 1093, 1095, 1098, 1100, 1103, 1105, 1108, 1110, 1112, 1114, 1117, 1119, 1122, 1124, 1125, 1127, 1130, 1139, 1142, 1149, 1152, 1159, 1160, 1163, 1165, 1168, 1181, 1184, 1185, 1187, 1193, 1196, 1198, 1201, 1203, 1206, 1232, 1235, 1237, 1240, 1242, 1245, 1247, 1251, 1272, 1276, 1277, 1281, 1287, 1288, 1291, 1293, 1296, 1298, 1301, 1303, 1319, 1322, 1388, 1394, 1464, 1465, 1469, 1470, 1474, 1475, 1479, 1480, 1484, 1501, 1502, 1505, 1507, 1510, 1512, 1515, 1516, 1519, 1520, 1523, 1524, 1527, 1528, 1531, 1532, 1535, 1536, 1540, 1541, 1545, 1557], "thank": [28, 162], "interoper": 28, "compon": [28, 159, 1042, 1074, 1080, 1092], "bio": [28, 35], "hardwar": [28, 35, 38, 41, 42, 157], "initi": [28, 36, 88, 91, 92, 93, 94, 140, 143, 144, 155, 159, 1093, 1144, 1147], "pcie": 28, "interfac": [28, 161, 164, 176, 1557], "motherboard": 28, "raid": 28, "storag": [28, 162], "virtual": [28, 31, 32, 36], "bluetooth": 28, "wireless": 28, "exchang": [28, 33], "btx": 28, "form": [28, 30, 43, 44, 45, 46, 47, 48, 49, 60, 61, 66, 67, 91, 92, 115, 116, 143, 150, 155, 157, 163, 164, 228, 233, 235, 274, 277, 292, 296, 297, 301, 849, 855, 1013, 1019, 1093, 1159, 1160, 1163, 1170, 1173, 1176, 1179, 1181, 1184, 1185, 1187, 1193, 1196, 1203, 1206, 1208, 1210, 1212, 1215, 1217, 1220, 1227, 1230, 1232, 1235, 1237, 1240, 1242, 1245, 1247, 1251, 1252, 1256, 1262, 1266, 1388, 1390, 1400], "factor": [28, 60, 61, 64, 65, 66, 67, 105, 106, 109, 110, 113, 114, 115, 116, 147, 401, 423, 424, 425, 1042, 1043, 1046, 1047, 1050, 1062, 1065, 1066, 1069, 1093, 1095, 1098, 1100, 1103, 1105, 1108, 1110, 1112, 1114, 1117, 1119, 1122, 1124, 1125, 1127, 1130, 1159, 1160, 1163], "sata": 28, "connect": [28, 35, 163, 164], "host": [28, 176], "bu": 28, "adapt": [28, 109, 110, 1042, 1066, 1069], "devic": [28, 36, 38, 41, 42, 48, 49, 53, 74, 75, 91, 92, 97, 98, 102, 107, 108, 123, 124, 137, 140, 143, 147, 150, 151, 154, 156, 157, 159, 164, 176, 228, 230, 231, 233, 235, 243, 244, 247, 249, 250, 257, 258, 261, 263, 264, 266, 267, 274, 277, 279, 282, 284, 285, 287, 290, 292, 296, 297, 301, 302, 304, 305, 309, 402, 403, 404, 405, 406, 407, 410, 412, 413, 414, 415, 416, 417, 418, 419, 420, 421, 422, 423, 424, 425, 426, 430, 431, 432, 433, 434, 849, 856, 904, 905, 1411, 1412, 1415, 1417, 1420, 1422, 1425, 1427, 1430, 1557], "html": [28, 32, 54, 55, 103, 104, 146, 310, 328, 331, 435, 576, 579, 1501, 1532, 1535], "enabl": [28, 35, 36, 88, 91, 92, 93, 94, 139, 141, 150, 151, 152, 153, 155, 157, 158, 160, 162, 164, 176, 1042, 1074, 1092, 1557], "anyon": [28, 30, 36, 176], "websit": [28, 138], "tcp": 28, "ip": 28, "node": [28, 91, 92, 107, 108, 141, 153, 1388, 1389, 1398, 1399], "commun": [28, 30, 34, 35, 36, 176, 1558, 1564], "network": [28, 141, 150, 159, 163, 175, 1093, 1139, 1142, 1558], "smtp": 28, "possibl": [28, 30, 34, 35, 36, 70, 71, 119, 120, 141, 142, 143, 145, 146, 152, 153, 154, 155, 157, 159, 162, 175, 176, 849, 974, 1303, 1339, 1342, 1501, 1516, 1519, 1524, 1527], "send": 28, "gmail": 28, "outlook": 28, "pop": [28, 35], "u": [28, 30, 35, 36, 66, 67, 115, 116, 141, 151, 152, 153, 154, 155, 156, 157, 163, 176, 1159, 1160, 1163, 1247, 1251, 1388, 1396], "email": 28, "ieee": [28, 227, 310, 346, 349, 435, 451, 454, 551, 554, 616, 619, 661, 664, 696, 699, 721, 724], "754": [28, 227, 310, 346, 349, 435, 451, 454, 551, 554, 616, 619, 661, 664, 696, 699, 721, 724], "allow": [28, 31, 34, 36, 142, 147, 148, 151, 153, 154, 155, 159, 161, 176, 228, 263, 264, 266, 267, 849, 974, 1485, 1491, 1494, 1557], "calcul": [28, 34, 54, 55, 68, 69, 82, 83, 88, 91, 92, 93, 94, 103, 104, 117, 118, 131, 132, 146, 154, 159, 435, 436, 439, 441, 444, 446, 449, 451, 454, 456, 459, 461, 464, 466, 469, 471, 474, 516, 519, 521, 524, 531, 534, 546, 549, 551, 554, 606, 609, 611, 614, 616, 619, 621, 624, 626, 629, 651, 654, 656, 659, 661, 664, 681, 684, 711, 714, 716, 719, 721, 724, 731, 735, 736, 740, 741, 745, 1287, 1288, 1291, 1293, 1296, 1298, 1301, 1501, 1516, 1519, 1520, 1523, 1524, 1527, 1528, 1531, 1532, 1535, 1536, 1540, 1541, 1545], "live": [28, 29, 143], "depend": [28, 31, 34, 35, 36, 50, 51, 58, 59, 80, 81, 99, 100, 129, 130, 131, 132, 143, 146, 151, 152, 153, 155, 157, 159, 176, 310, 313, 316, 435, 436, 439, 441, 444, 446, 449, 456, 459, 461, 464, 466, 469, 471, 474, 516, 519, 521, 524, 546, 549, 551, 554, 606, 609, 611, 614, 616, 619, 621, 624, 681, 684, 711, 714, 716, 719, 736, 740, 741, 745, 849, 1008, 1012, 1159, 1181, 1184, 1232, 1235, 1242, 1245, 1247, 1251, 1438, 1459, 1463, 1485, 1486, 1489, 1496, 1499], "did": [28, 34, 164], "aris": [28, 143, 176], "until": [28, 36, 148, 156, 159, 176, 1558], "substanti": [28, 36, 139, 143, 155], "innov": 28, "growth": 28, "usag": [28, 159, 176, 401, 425], "relev": [28, 34, 35, 36, 141, 142, 143, 145, 154, 162], "area": [28, 54, 55, 103, 104, 152, 174, 435, 446, 449, 461, 464, 476, 479, 1558], "necess": 28, "parti": [28, 176], "could": [28, 29, 34, 35, 36, 138, 143, 145, 151, 152, 153, 154, 155, 159, 161, 162, 163, 1464, 1465, 1469, 1470, 1474, 1475, 1479, 1480, 1484], "easili": [28, 142, 153, 157, 162, 163, 164, 176, 1558], "engag": [28, 30, 36], "regard": [28, 33, 141, 153, 154, 157], "effect": [28, 34, 60, 61, 82, 83, 109, 110, 131, 132, 139, 141, 146, 149, 152, 176, 228, 269, 272, 1042, 1043, 1046, 1070, 1073, 1501, 1532, 1535, 1541, 1545], "2015": 28, "sinc": [28, 35, 36, 56, 57, 105, 106, 138, 152, 153, 155, 176], "alongsid": 28, "machin": [28, 35, 66, 67, 115, 116, 138, 150, 175, 310, 346, 349, 357, 360, 1159, 1212, 1215, 1227, 1230, 1557], "frame": [28, 175], "less": [28, 36, 38, 41, 42, 54, 55, 66, 67, 74, 75, 82, 83, 103, 104, 115, 116, 123, 124, 141, 143, 145, 147, 149, 152, 153, 157, 158, 159, 435, 441, 444, 446, 449, 456, 459, 471, 474, 511, 514, 606, 609, 611, 614, 616, 619, 621, 624, 681, 684, 696, 699, 706, 709, 721, 724, 1159, 1208, 1210, 1212, 1215, 1227, 1230, 1277, 1281, 1411, 1427, 1430, 1501, 1532, 1535, 1541, 1545], "matur": [28, 176], "state": [28, 143, 146, 147, 149, 153, 155, 158, 159, 160, 162, 175, 310, 396, 399, 435, 661, 664, 849, 917, 918, 997, 1031, 1033, 1034, 1035, 1093, 1144, 1147, 1558], "than": [28, 31, 36, 38, 41, 42, 54, 55, 58, 59, 60, 61, 66, 67, 74, 75, 76, 77, 78, 79, 82, 83, 88, 91, 92, 93, 94, 103, 104, 107, 108, 109, 110, 115, 116, 123, 124, 125, 126, 127, 128, 131, 132, 138, 141, 142, 143, 145, 147, 152, 153, 154, 155, 156, 157, 159, 162, 163, 164, 176, 228, 230, 231, 310, 346, 349, 401, 425, 435, 441, 444, 446, 449, 456, 459, 471, 474, 491, 494, 501, 504, 511, 514, 556, 559, 561, 564, 606, 609, 611, 614, 616, 619, 621, 624, 651, 654, 681, 684, 696, 699, 706, 709, 721, 724, 746, 750, 849, 953, 956, 958, 961, 968, 971, 1042, 1057, 1059, 1159, 1165, 1168, 1198, 1201, 1208, 1210, 1212, 1215, 1227, 1230, 1277, 1281, 1303, 1304, 1307, 1324, 1327, 1354, 1357, 1411, 1427, 1430, 1438, 1454, 1457, 1464, 1465, 1469, 1470, 1474, 1475, 1479, 1480, 1484, 1501, 1502, 1505, 1507, 1510, 1528, 1531, 1532, 1535, 1536, 1540, 1541, 1545], "preced": [28, 163], "mention": [28, 34, 35, 36, 145, 149, 150, 152, 157], "aros": 28, "70": [28, 107, 108, 1159, 1222, 1225, 1501, 1512, 1515], "80": [28, 1159, 1222, 1225, 1388, 1399, 1501, 1512, 1515], "90": [28, 54, 55, 103, 104, 435, 506, 509, 526, 529, 686, 689, 701, 704, 1159, 1222, 1225, 1501, 1512, 1515], "effort": [28, 30, 176], "stage": [28, 30, 32, 36, 137, 148, 155, 1558], "complet": [28, 34, 36, 91, 92, 138, 139, 141, 142, 145, 153, 154, 155, 161, 162, 1159, 1232, 1235], "natur": [28, 66, 67, 115, 116, 139, 145, 154, 175, 435, 546, 549, 606, 609, 616, 619, 701, 704, 1159, 1237, 1240], "like": [28, 32, 34, 35, 36, 60, 61, 109, 110, 137, 143, 144, 145, 146, 148, 149, 151, 152, 153, 154, 155, 156, 157, 158, 159, 161, 162, 163, 164, 175, 176, 310, 333, 385, 1042, 1057, 1059, 1411, 1427, 1430, 1558], "certainli": 28, "mission": [28, 1558], "creat": [28, 30, 31, 32, 34, 35, 36, 48, 49, 74, 75, 91, 92, 97, 98, 107, 108, 123, 124, 143, 144, 147, 151, 152, 153, 154, 155, 157, 159, 160, 163, 174, 175, 228, 230, 231, 233, 235, 243, 244, 247, 249, 250, 257, 258, 261, 263, 264, 266, 267, 274, 277, 279, 282, 284, 285, 287, 290, 302, 304, 305, 309, 849, 1014, 1018, 1041, 1042, 1081, 1082, 1086, 1411, 1412, 1415, 1417, 1420, 1422, 1425, 1427, 1430, 1433, 1436, 1557, 1558, 1564], "At": [28, 34, 138, 153, 155, 156], "process": [28, 29, 30, 32, 35, 36, 141, 150, 153, 154, 155, 157, 159, 164, 401, 420, 434], "ourselv": 28, "lead": [28, 29, 88, 91, 92, 93, 94, 145, 176, 1159, 1232, 1235, 1247, 1251], "quansight": 28, "compani": 28, "made": [28, 31, 34, 36, 138, 142, 152, 156, 159, 161], "organ": [28, 139, 141, 150, 153, 156, 1557], "panda": 28, "scipi": 28, "conda": [28, 32, 35], "dask": [28, 1464, 1465, 1469, 1470, 1474, 1475, 1479, 1480, 1484], "apach": 28, "mxnet": 28, "onnx": 28, "scikit": 28, "jupyt": 28, "aw": 28, "cupi": 28, "net": [28, 29, 159, 164], "sympi": 28, "rai": [28, 435, 471, 474], "modin": 28, "spyder": 28, "includ": [28, 34, 36, 48, 49, 56, 57, 58, 59, 76, 77, 82, 83, 84, 85, 91, 92, 105, 106, 107, 108, 115, 116, 125, 126, 131, 132, 133, 134, 138, 139, 140, 141, 143, 144, 145, 146, 147, 148, 149, 150, 152, 153, 154, 155, 156, 157, 159, 175, 176, 228, 230, 231, 233, 235, 263, 264, 274, 277, 849, 931, 934, 1036, 1040, 1159, 1277, 1281, 1388, 1389, 1411, 1427, 1430, 1438, 1444, 1447, 1501, 1516, 1519, 1520, 1523, 1524, 1527, 1528, 1531, 1532, 1535, 1536, 1540, 1541, 1545, 1546, 1547, 1550, 1552, 1555], "member": [28, 34, 36, 153], "googl": [28, 1558], "octoml": 28, "einop": [28, 58, 59, 107, 108, 849, 881, 884, 886, 889, 891, 894], "further": [28, 29, 32, 36, 138, 139, 145, 147, 153, 155, 158, 162, 163, 1558], "sponsor": 28, "lg": 28, "electron": 28, "microsoft": 28, "d": [28, 29, 30, 35, 64, 65, 66, 67, 113, 114, 115, 116, 137, 141, 155, 162, 1093, 1095, 1098, 1100, 1103, 1105, 1108, 1110, 1112, 1114, 1117, 1119, 1122, 1124, 1125, 1127, 1130, 1159, 1176, 1179, 1203, 1206, 1222, 1225, 1267, 1271, 1388, 1391, 1396, 1404, 1405, 1558, 1564], "shaw": 28, "co": [28, 33, 54, 55, 58, 59, 103, 104, 143, 159, 175, 435, 849, 899, 902, 1558], "intel": 28, "togeth": [28, 91, 92, 139, 141, 148, 153, 156, 157, 163, 164, 176], "major": [28, 143, 144, 155, 176, 1438, 1454, 1457], "involv": [28, 30, 32, 50, 51, 99, 100, 137, 143, 145, 157, 164, 310, 386, 389, 435, 451, 454, 661, 664, 1558, 1564], "anoth": [28, 34, 35, 36, 141, 143, 150, 151, 153, 154, 155, 157, 161, 164, 228, 252, 255, 310, 318, 321, 328, 331, 1557], "promis": 28, "sign": [28, 35, 54, 55, 66, 67, 103, 104, 115, 116, 159, 164, 228, 230, 231, 435, 436, 439, 451, 454, 471, 474, 501, 504, 661, 664, 696, 699, 1159, 1237, 1240, 1464, 1465, 1469, 1470, 1474, 1475, 1479, 1480, 1484, 1501, 1502, 1505, 1507, 1510, 1528, 1531, 1536, 1540], "pursuit": 28, "unif": [28, 30, 161, 1558, 1564], "clearli": [28, 34, 36, 145, 154, 155], "lot": [28, 29, 143, 151, 155, 176], "thought": [28, 35, 36, 149], "care": [28, 36, 155, 157, 164], "attent": [28, 36, 139, 1093, 1149, 1152, 1154, 1157], "gone": [28, 158], "simplifi": [28, 147, 153, 159, 160, 163], "compat": [28, 38, 41, 42, 54, 55, 66, 67, 70, 71, 76, 77, 82, 83, 84, 85, 88, 93, 94, 103, 104, 115, 116, 119, 120, 125, 126, 131, 132, 133, 134, 140, 149, 153, 154, 156, 159, 176, 310, 323, 326, 435, 451, 454, 471, 474, 481, 484, 491, 494, 496, 499, 501, 504, 506, 509, 531, 534, 536, 539, 561, 564, 571, 574, 596, 599, 601, 604, 626, 629, 631, 634, 641, 644, 646, 649, 661, 664, 671, 674, 681, 684, 696, 699, 731, 735, 751, 755, 1159, 1212, 1215, 1227, 1230, 1242, 1245, 1257, 1261, 1272, 1276, 1277, 1281, 1303, 1339, 1342, 1438, 1444, 1447, 1501, 1516, 1519, 1520, 1523, 1524, 1527, 1528, 1531, 1532, 1535, 1536, 1540, 1541, 1545, 1546, 1547, 1550, 1552, 1555, 1558], "excit": [28, 30, 137, 1558], "complianc": 28, "hope": [28, 176], "due": [28, 31, 35, 138, 152, 153, 435, 661, 664, 701, 704], "suit": [28, 35, 137, 138, 142, 155, 162, 175, 1557], "some": [28, 29, 34, 35, 36, 91, 92, 109, 110, 138, 139, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 161, 162, 163, 175, 176, 401, 402, 435, 551, 554, 616, 619, 1042, 1043, 1046, 1047, 1050, 1053, 1056, 1062, 1065, 1066, 1069, 1070, 1073, 1087, 1091, 1093, 1132, 1135, 1388, 1399, 1557, 1558], "motiv": [28, 161], "great": [28, 29, 36, 155, 159, 161], "convinc": 28, "celebr": 28, "encourag": [28, 175, 176, 1558, 1564], "foundat": 28, "mai": [29, 33, 34, 35, 36, 54, 55, 80, 81, 101, 102, 103, 104, 129, 130, 138, 141, 152, 153, 155, 160, 161, 163, 228, 230, 231, 252, 255, 401, 426, 430, 435, 536, 539, 571, 574, 601, 604, 636, 639, 641, 644, 849, 878, 880, 1464, 1465, 1469, 1470, 1474, 1475, 1479, 1480, 1484, 1485, 1486, 1489, 1496, 1499, 1501, 1516, 1519, 1520, 1523, 1524, 1527, 1532, 1535], "ask": [29, 34, 145, 159, 161, 176], "perfectli": 29, "happi": [29, 35, 176], "abund": 29, "better": [29, 31, 137, 153, 154, 156, 157, 158, 161, 162, 163], "ll": [29, 30, 36, 145, 152, 162], "give": [29, 31, 35, 36, 137, 140, 145, 146, 149, 310, 385, 1303, 1339, 1342], "two": [29, 34, 35, 38, 41, 42, 48, 49, 66, 67, 88, 93, 94, 115, 116, 138, 139, 143, 145, 146, 153, 155, 157, 158, 162, 164, 228, 230, 231, 249, 250, 269, 272, 292, 296, 297, 301, 310, 384, 395, 435, 501, 504, 701, 704, 849, 857, 859, 1159, 1160, 1163, 1170, 1173, 1176, 1179, 1181, 1184, 1185, 1187, 1188, 1191, 1193, 1196, 1198, 1201, 1203, 1206, 1208, 1210, 1212, 1215, 1217, 1220, 1222, 1225, 1227, 1230, 1232, 1235, 1237, 1240, 1242, 1245, 1247, 1251, 1252, 1256, 1262, 1266, 1272, 1276, 1303, 1364, 1368, 1464, 1465, 1469, 1470, 1474, 1475, 1479, 1480, 1484, 1558], "streamlin": 29, "workflow": [29, 34, 36, 140, 142, 143, 153, 162, 174, 1557, 1558], "save": [29, 31, 91, 92, 148, 155, 176, 401, 402, 849, 930, 995], "week": [29, 36, 1558], "let": [29, 31, 58, 59, 82, 83, 107, 108, 141, 143, 144, 145, 146, 147, 153, 154, 155, 156, 157, 159, 161, 162, 163, 164, 849, 906, 909, 1501, 1520, 1523, 1532, 1535, 1536, 1540, 1541, 1545, 1558], "sai": [29, 35, 151, 161], "deepmind": 29, "releas": [29, 34, 35, 36, 143, 153, 156, 157, 176, 1558], "awesom": 29, "paper": 29, "love": 29, "choic": [29, 35, 82, 83, 131, 132, 152, 153, 162, 1501, 1532, 1535, 1541, 1545], "perceiverio": 29, "happen": [29, 35, 36, 155, 162], "slew": 29, "rush": 29, "f": [29, 30, 32, 36, 137, 141, 148, 159, 162, 849, 936, 952, 1388, 1391, 1396, 1404, 1405], "g": [29, 30, 34, 35, 74, 75, 123, 124, 137, 138, 141, 155, 159, 176, 310, 312, 386, 389, 401, 403, 1388, 1391, 1404, 1411, 1417, 1420, 1422, 1425, 1427, 1430, 1464, 1465, 1469, 1470, 1474, 1475, 1479, 1480, 1484, 1501, 1502, 1505, 1507, 1510, 1516, 1519, 1524, 1527, 1528, 1531, 1536, 1540, 1557], "inevit": 29, "deviat": [29, 72, 73, 74, 75, 121, 122, 123, 124, 138, 1406, 1407, 1410, 1411, 1422, 1425, 1501, 1532, 1535], "often": [29, 33, 138, 147, 148, 149, 150, 153, 155, 176], "erron": 29, "train": [29, 60, 61, 109, 110, 141, 144, 150, 162, 163, 164, 174, 175, 176, 1042, 1043, 1046, 1047, 1050, 1062, 1065, 1557, 1558], "poor": 29, "converg": 29, "perform": [29, 60, 61, 82, 83, 84, 85, 107, 108, 131, 132, 133, 134, 139, 140, 141, 143, 144, 145, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 159, 162, 176, 189, 200, 203, 215, 218, 228, 263, 264, 266, 267, 435, 751, 755, 849, 881, 884, 886, 889, 891, 894, 937, 940, 942, 945, 947, 950, 988, 989, 1093, 1132, 1135, 1144, 1147, 1159, 1247, 1251, 1384, 1385, 1386, 1387, 1388, 1395, 1396, 1501, 1502, 1505, 1507, 1510, 1546, 1547, 1550, 1552, 1555], "issu": [29, 30, 33, 34, 138, 140, 143, 145, 147, 153, 155, 159, 163, 176], "etc": [29, 34, 35, 36, 48, 49, 74, 75, 86, 87, 107, 108, 123, 124, 135, 136, 138, 139, 141, 142, 143, 145, 147, 149, 153, 154, 155, 156, 159, 161, 162, 176, 228, 263, 264, 266, 267, 279, 282, 1411, 1412, 1415, 1417, 1420, 1422, 1425, 1427, 1430, 1464, 1465, 1469, 1470, 1474, 1475, 1479, 1480, 1484, 1557], "publish": [29, 176], "manag": [29, 30, 152, 176], "get": [29, 30, 33, 34, 35, 54, 55, 91, 92, 137, 142, 143, 144, 150, 151, 152, 153, 154, 155, 156, 159, 160, 161, 162, 163, 310, 341, 343, 345, 346, 349, 357, 360, 401, 406, 407, 410, 412, 415, 420, 424, 431, 434, 435, 661, 664, 849, 856, 916, 917, 918, 920, 921, 922, 928, 930, 977, 997, 1557, 1558, 1564], "work": [29, 33, 34, 35, 36, 137, 138, 143, 144, 145, 147, 153, 155, 156, 158, 159, 161, 163, 164, 1558, 1564], "repositori": [29, 31, 32, 35, 36, 137, 138, 142, 148], "pull": [29, 30, 31, 32, 34, 35, 138, 145, 156, 157, 176], "request": [29, 30, 34, 145, 156, 157, 401, 417], "confus": [29, 143, 147, 152, 157, 1557], "do": [29, 34, 35, 36, 58, 59, 60, 61, 91, 92, 109, 110, 138, 139, 140, 141, 143, 144, 145, 146, 149, 150, 151, 152, 153, 154, 156, 157, 159, 161, 162, 163, 164, 176, 435, 696, 699, 849, 947, 950, 1042, 1057, 1059, 1087, 1091, 1388, 1389, 1398, 1399, 1400, 1557], "don": [29, 34, 35, 36, 86, 87, 135, 136, 143, 155, 163, 176], "expect": [29, 36, 147, 155, 176, 310, 385, 849, 856, 1558], "codebas": [29, 30, 137, 143, 152, 155, 156, 158, 401, 423, 424, 1558], "total": [29, 30, 36, 82, 83, 88, 91, 92, 93, 94, 131, 132, 143, 144, 145, 155, 157, 162, 163, 176, 401, 431, 1438, 1454, 1457, 1501, 1532, 1535, 1541, 1545], "hour": [29, 142], "spent": 29, "spin": 29, "off": [29, 35, 158, 1159, 1176, 1179, 1262, 1266], "test": [29, 33, 34, 54, 55, 84, 85, 103, 104, 133, 134, 137, 143, 145, 147, 148, 151, 153, 156, 176, 310, 364, 367, 374, 377, 435, 576, 579, 581, 584, 586, 589, 591, 594, 1546, 1547, 1550, 1552, 1555], "discuss": [29, 35, 36, 143, 144, 152, 153, 155, 157, 160, 161, 162, 176, 1558], "error": [29, 33, 35, 36, 54, 55, 91, 92, 103, 104, 139, 140, 142, 143, 144, 145, 147, 148, 149, 153, 155, 156, 161, 176, 189, 190, 193, 435, 541, 544, 1159, 1252, 1256, 1501, 1516, 1519, 1524, 1527], "iter": [29, 43, 44, 45, 46, 47, 58, 59, 86, 87, 88, 91, 92, 93, 94, 107, 108, 135, 136, 141, 159, 162, 225, 226, 401, 425, 849, 850, 853, 974, 1303, 1314, 1317, 1334, 1337, 1369, 1373, 1379, 1383, 1388, 1389, 1390, 1391, 1393, 1394, 1395, 1396, 1397, 1398, 1399, 1400, 1402, 1403, 1405], "address": [29, 34, 36, 138, 139, 159, 849, 1020, 1024], "sake": 29, "singl": [29, 34, 35, 36, 74, 75, 91, 92, 123, 124, 138, 141, 145, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 159, 162, 163, 164, 176, 849, 1025, 1029, 1036, 1040, 1411, 1417, 1420, 1422, 1425, 1427, 1430, 1464, 1465, 1469], "multipl": [29, 36, 56, 57, 72, 73, 82, 83, 84, 85, 91, 92, 103, 104, 105, 106, 107, 108, 109, 110, 115, 116, 119, 120, 121, 122, 131, 132, 133, 134, 140, 141, 145, 147, 150, 152, 157, 159, 176, 435, 501, 504, 626, 629, 651, 654, 656, 659, 661, 664, 849, 850, 853, 974, 1042, 1043, 1046, 1053, 1056, 1057, 1059, 1062, 1065, 1070, 1073, 1075, 1079, 1093, 1105, 1108, 1159, 1160, 1163, 1193, 1196, 1203, 1206, 1303, 1304, 1307, 1319, 1322, 1344, 1347, 1349, 1352, 1406, 1407, 1410, 1438, 1439, 1442, 1444, 1447, 1501, 1516, 1519, 1520, 1523, 1524, 1527, 1528, 1531, 1532, 1535, 1536, 1540, 1541, 1545, 1546, 1547, 1550, 1552, 1555], "line": [29, 35, 138, 139, 145, 148, 151, 155, 157, 160, 161, 162, 163, 174, 1558, 1564], "convert": [29, 34, 43, 44, 45, 46, 47, 48, 49, 54, 55, 95, 96, 103, 104, 139, 151, 155, 159, 176, 177, 187, 228, 233, 235, 274, 277, 310, 311, 312, 401, 403, 404, 405, 406, 420, 431, 434, 435, 526, 529, 686, 689, 849, 988, 1013, 1019, 1020, 1024, 1025, 1029, 1031, 1159, 1282, 1286, 1388, 1390, 1400, 1401, 1557], "directli": [29, 36, 138, 139, 141, 142, 143, 144, 146, 150, 151, 152, 153, 154, 156, 157, 159, 161, 163, 164, 175, 176, 1388, 1400], "graph": [29, 60, 61, 141, 150, 153, 157, 160, 176, 1464, 1465, 1469, 1470, 1474, 1475, 1479, 1480, 1484, 1557], "guarante": [29, 139, 176, 1464, 1465, 1469, 1475, 1479], "turn": [29, 35, 141, 145, 153, 155], "4": [29, 32, 34, 35, 38, 39, 40, 41, 42, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 64, 65, 66, 67, 70, 71, 74, 75, 78, 79, 82, 83, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 140, 141, 145, 155, 159, 161, 162, 163, 164, 189, 190, 193, 195, 198, 200, 203, 205, 208, 215, 218, 228, 240, 242, 258, 261, 269, 272, 287, 290, 305, 309, 310, 318, 321, 323, 326, 328, 331, 341, 343, 346, 349, 369, 372, 374, 377, 386, 389, 401, 407, 410, 412, 419, 423, 435, 436, 439, 451, 454, 456, 459, 461, 464, 466, 469, 471, 474, 481, 484, 496, 499, 501, 504, 506, 509, 511, 514, 516, 519, 521, 524, 526, 529, 531, 534, 536, 539, 551, 554, 556, 559, 561, 564, 566, 569, 571, 574, 581, 584, 586, 589, 596, 599, 601, 604, 606, 609, 611, 614, 616, 619, 626, 629, 646, 649, 651, 654, 656, 659, 661, 664, 666, 669, 671, 674, 676, 679, 686, 689, 696, 699, 701, 704, 706, 709, 711, 714, 716, 719, 721, 724, 726, 729, 731, 735, 736, 740, 741, 745, 751, 755, 849, 866, 869, 871, 874, 878, 880, 886, 889, 891, 894, 899, 902, 906, 909, 911, 914, 919, 931, 934, 937, 940, 983, 986, 998, 1001, 1014, 1018, 1030, 1041, 1042, 1043, 1046, 1052, 1053, 1056, 1057, 1059, 1061, 1062, 1065, 1070, 1073, 1075, 1079, 1081, 1082, 1086, 1093, 1095, 1098, 1105, 1108, 1110, 1112, 1114, 1117, 1127, 1130, 1139, 1142, 1144, 1147, 1154, 1157, 1159, 1160, 1163, 1170, 1173, 1176, 1179, 1193, 1196, 1198, 1201, 1203, 1206, 1212, 1215, 1222, 1225, 1227, 1230, 1237, 1240, 1252, 1256, 1257, 1261, 1262, 1266, 1267, 1271, 1287, 1298, 1301, 1303, 1304, 1307, 1309, 1312, 1319, 1322, 1324, 1327, 1329, 1332, 1334, 1337, 1339, 1342, 1344, 1347, 1349, 1352, 1354, 1357, 1359, 1362, 1364, 1368, 1369, 1373, 1374, 1378, 1388, 1390, 1391, 1394, 1396, 1399, 1404, 1405, 1406, 1407, 1410, 1411, 1412, 1415, 1422, 1425, 1427, 1430, 1433, 1436, 1438, 1439, 1442, 1444, 1447, 1454, 1457, 1459, 1463, 1464, 1465, 1469, 1470, 1474, 1475, 1479, 1485, 1486, 1489, 1491, 1494, 1496, 1499, 1501, 1502, 1505, 1507, 1510, 1512, 1515, 1516, 1519, 1520, 1523, 1524, 1527, 1536, 1540, 1541, 1545, 1546, 1547, 1550, 1552, 1555, 1558], "step": [29, 31, 32, 34, 35, 36, 56, 57, 60, 61, 97, 98, 105, 106, 109, 110, 139, 140, 141, 143, 144, 145, 153, 155, 159, 162, 163, 164, 175, 228, 230, 231, 263, 264, 266, 267, 1042, 1043, 1046, 1047, 1050, 1053, 1056, 1062, 1065, 1066, 1069, 1070, 1073, 1384, 1385, 1386, 1387, 1558], "take": [29, 30, 34, 35, 36, 82, 83, 105, 106, 141, 142, 143, 144, 145, 146, 152, 153, 154, 155, 157, 159, 161, 163, 164, 176, 228, 279, 282, 435, 506, 509, 1558, 1564], "few": [29, 33, 34, 36, 141, 143, 144, 149, 150, 152, 155, 157, 160, 161, 162, 163, 174, 1558, 1564], "second": [29, 35, 38, 41, 42, 54, 55, 56, 57, 60, 61, 66, 67, 78, 79, 88, 93, 94, 103, 104, 105, 106, 109, 110, 115, 116, 127, 128, 138, 145, 152, 153, 155, 161, 310, 384, 395, 435, 451, 454, 481, 484, 491, 494, 496, 499, 501, 504, 506, 509, 536, 539, 561, 564, 571, 574, 596, 599, 601, 604, 626, 629, 631, 634, 641, 644, 646, 649, 661, 664, 671, 674, 681, 684, 731, 735, 849, 857, 859, 928, 993, 1034, 1042, 1043, 1046, 1047, 1050, 1062, 1065, 1159, 1165, 1168, 1176, 1179, 1181, 1184, 1188, 1191, 1198, 1201, 1222, 1225, 1232, 1235, 1247, 1251, 1257, 1261, 1272, 1276, 1303, 1359, 1362, 1364, 1368, 1384, 1386, 1388, 1390, 1464, 1465, 1469, 1470, 1474, 1475, 1479], "automat": [29, 34, 35, 36, 137, 141, 142, 143, 148, 150, 157, 158, 160, 163, 164, 1557, 1558], "convers": [29, 34, 44, 45, 46, 47, 54, 55, 96, 151, 158, 160, 164, 175, 176, 849, 988, 989, 1557, 1558, 1564], "everyon": [29, 30, 36, 176], "regardless": [29, 30, 91, 92, 143, 161, 164, 225, 226], "wouldn": 29, "nice": [29, 155], "write": [29, 32, 33, 34, 36, 48, 49, 50, 51, 54, 55, 56, 57, 58, 59, 60, 61, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 82, 83, 84, 85, 89, 90, 91, 92, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 129, 130, 131, 132, 133, 134, 137, 138, 140, 143, 145, 146, 150, 152, 153, 154, 156, 159, 161, 164, 189, 190, 193, 195, 198, 200, 203, 205, 208, 210, 213, 215, 218, 220, 223, 228, 230, 231, 233, 235, 240, 242, 243, 244, 247, 249, 250, 252, 255, 257, 258, 261, 263, 264, 266, 267, 279, 282, 284, 285, 287, 290, 292, 296, 297, 301, 302, 304, 305, 309, 310, 313, 316, 323, 326, 401, 426, 430, 435, 436, 439, 441, 444, 446, 449, 451, 454, 456, 459, 461, 464, 466, 469, 471, 474, 476, 479, 481, 484, 486, 489, 491, 494, 496, 499, 501, 504, 506, 509, 511, 514, 516, 519, 521, 524, 526, 529, 531, 534, 536, 539, 541, 544, 546, 549, 551, 554, 556, 559, 561, 564, 566, 569, 571, 574, 576, 579, 581, 584, 586, 589, 591, 594, 596, 599, 606, 609, 611, 614, 616, 619, 621, 624, 626, 629, 631, 634, 636, 639, 641, 644, 646, 649, 651, 654, 656, 659, 661, 664, 666, 669, 671, 674, 676, 679, 681, 684, 686, 689, 691, 694, 696, 699, 701, 704, 706, 709, 711, 714, 716, 719, 721, 724, 726, 729, 731, 735, 736, 740, 741, 745, 746, 750, 751, 755, 849, 866, 869, 871, 874, 881, 884, 886, 889, 891, 894, 906, 909, 911, 914, 978, 981, 983, 986, 1042, 1043, 1046, 1047, 1050, 1053, 1056, 1062, 1065, 1066, 1069, 1070, 1073, 1075, 1079, 1093, 1095, 1098, 1100, 1103, 1105, 1108, 1110, 1112, 1114, 1117, 1119, 1122, 1124, 1125, 1127, 1130, 1132, 1135, 1139, 1142, 1149, 1152, 1154, 1157, 1159, 1160, 1163, 1165, 1168, 1170, 1173, 1176, 1179, 1185, 1187, 1188, 1191, 1193, 1196, 1198, 1201, 1203, 1206, 1212, 1215, 1217, 1220, 1222, 1225, 1227, 1230, 1242, 1245, 1252, 1256, 1257, 1261, 1262, 1266, 1267, 1271, 1272, 1276, 1277, 1281, 1282, 1286, 1287, 1288, 1291, 1293, 1296, 1298, 1301, 1303, 1304, 1307, 1309, 1312, 1314, 1317, 1319, 1322, 1324, 1327, 1329, 1332, 1334, 1337, 1339, 1342, 1344, 1347, 1354, 1357, 1359, 1362, 1364, 1368, 1369, 1373, 1379, 1383, 1406, 1407, 1410, 1411, 1412, 1415, 1417, 1420, 1422, 1425, 1427, 1430, 1433, 1436, 1438, 1449, 1452, 1459, 1463, 1464, 1480, 1484, 1485, 1486, 1489, 1491, 1494, 1496, 1499, 1501, 1502, 1505, 1507, 1510, 1512, 1515, 1516, 1519, 1520, 1523, 1524, 1527, 1528, 1531, 1532, 1535, 1536, 1540, 1541, 1545, 1546, 1547, 1550, 1552, 1555], "onc": [29, 34, 35, 36, 74, 75, 123, 124, 138, 141, 143, 144, 145, 153, 155, 157, 159, 162, 176, 401, 425, 1159, 1181, 1184, 1185, 1187, 1193, 1196, 1247, 1251, 1411, 1412, 1415], "know": [29, 36, 155, 156, 1464, 1465, 1469, 1470, 1474, 1475, 1479, 1480, 1484], "among": [29, 91, 92, 155, 157], "frantic": 29, "port": 29, "lucid": 29, "honk": 29, "improv": [29, 36, 149, 150, 157, 159, 1557], "understand": [29, 31, 32, 33, 34, 35, 36, 137, 138, 145, 146, 149, 154, 157, 158], "pattern": [29, 58, 59, 107, 108, 143, 146, 849, 881, 884, 886, 889, 891, 894], "hasn": 29, "chang": [29, 31, 32, 34, 35, 36, 38, 39, 40, 41, 42, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 89, 90, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 138, 140, 141, 142, 143, 145, 146, 153, 155, 156, 157, 159, 163, 176, 1303, 1339, 1342, 1388, 1390, 1400, 1558, 1564], "now": [29, 32, 35, 138, 140, 141, 143, 148, 149, 151, 153, 155, 156, 157, 161, 162, 164, 175, 176, 228, 305, 309], "spend": 29, "torchvis": 29, "probabl": [29, 74, 75, 123, 124, 155, 1093, 1132, 1135, 1411, 1412, 1415], "sonnet": 29, "about": [29, 33, 34, 35, 36, 138, 142, 143, 149, 155, 156, 157, 158, 159, 161, 162, 163, 164, 176, 310, 346, 349, 357, 360], "next": [29, 31, 32, 34, 35, 36, 140, 145, 146, 151, 153, 156, 160, 161, 162, 310, 346, 349, 1558], "everyth": [29, 34, 36, 145, 153, 154, 155, 156, 160, 176], "zero": [29, 48, 49, 50, 51, 54, 55, 56, 57, 60, 61, 66, 67, 76, 77, 82, 83, 84, 85, 97, 98, 99, 100, 103, 104, 105, 106, 109, 110, 115, 116, 123, 124, 125, 126, 131, 132, 133, 134, 139, 141, 143, 144, 145, 149, 151, 159, 162, 163, 189, 195, 198, 205, 208, 228, 240, 242, 243, 249, 250, 269, 272, 279, 282, 292, 296, 297, 301, 305, 309, 310, 313, 316, 318, 321, 435, 441, 444, 446, 449, 451, 454, 456, 459, 461, 464, 466, 469, 471, 474, 476, 479, 491, 494, 501, 504, 516, 519, 521, 524, 526, 529, 551, 554, 556, 559, 576, 579, 581, 584, 586, 589, 591, 594, 616, 619, 636, 639, 641, 644, 651, 654, 656, 659, 661, 664, 666, 669, 671, 674, 676, 679, 681, 684, 686, 689, 696, 699, 701, 704, 711, 714, 721, 724, 726, 729, 736, 740, 741, 745, 751, 755, 849, 871, 874, 974, 1042, 1043, 1046, 1047, 1050, 1062, 1065, 1066, 1069, 1070, 1073, 1075, 1079, 1093, 1132, 1135, 1139, 1142, 1154, 1157, 1159, 1160, 1163, 1170, 1173, 1193, 1196, 1198, 1201, 1203, 1206, 1208, 1210, 1212, 1215, 1227, 1230, 1272, 1276, 1277, 1281, 1303, 1319, 1322, 1324, 1327, 1329, 1332, 1344, 1347, 1379, 1383, 1406, 1407, 1410, 1411, 1417, 1420, 1422, 1425, 1427, 1430, 1438, 1439, 1442, 1444, 1447, 1449, 1452, 1454, 1457, 1464, 1465, 1469, 1470, 1474, 1475, 1479, 1480, 1484, 1485, 1496, 1499, 1501, 1502, 1505, 1507, 1510, 1516, 1519, 1520, 1523, 1524, 1527, 1528, 1531, 1532, 1535, 1536, 1540, 1541, 1545, 1546, 1547, 1550, 1552, 1555, 1558], "need": [29, 31, 32, 34, 35, 36, 58, 59, 70, 71, 107, 108, 119, 120, 138, 139, 141, 143, 145, 146, 147, 150, 152, 153, 154, 156, 157, 159, 161, 162, 175, 176, 849, 866, 869, 871, 874, 1303, 1304, 1307, 1388, 1399], "said": 29, "high": [29, 34, 74, 75, 123, 124, 153, 157, 162, 1411, 1417, 1420, 1427, 1430, 1557], "level": [29, 30, 34, 36, 150, 153, 157, 158, 159, 162, 163, 164, 176, 1557], "optim": [29, 60, 61, 109, 110, 152, 160, 162, 164, 175, 849, 856, 1042, 1070, 1073, 1384, 1385, 1386, 1387, 1558], "trainer": [29, 174, 176, 1558], "statu": [29, 34, 142], "quo": 29, "kera": 29, "dopamin": 29, "ignit": 29, "catalyst": 29, "lightn": 29, "fastai": 29, "haiku": [29, 164], "flax": [29, 164, 176], "trax": [29, 164], "objax": [29, 164], "idea": [29, 31, 153, 156, 160, 175], "fulli": [29, 139, 143, 149, 152, 157, 159, 160, 161, 162, 163, 164, 176], "offer": [29, 35, 153, 163], "strongli": [30, 35, 1558, 1564], "welcom": [30, 35, 36, 1558, 1564], "absolut": [30, 35, 54, 55, 66, 67, 91, 92, 103, 104, 115, 116, 157, 435, 436, 439, 1159, 1203, 1206, 1208, 1210, 1212, 1215, 1237, 1240], "skill": 30, "whether": [30, 34, 35, 38, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 54, 55, 58, 59, 60, 61, 70, 71, 74, 75, 82, 83, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 113, 114, 115, 116, 117, 118, 119, 120, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 141, 143, 145, 149, 152, 153, 155, 156, 157, 189, 190, 193, 225, 226, 228, 233, 235, 310, 313, 316, 339, 340, 341, 343, 351, 352, 354, 355, 363, 364, 367, 369, 372, 374, 377, 379, 382, 384, 400, 401, 406, 407, 410, 413, 414, 416, 417, 420, 421, 425, 432, 434, 435, 586, 589, 591, 594, 651, 654, 656, 659, 696, 699, 849, 850, 853, 857, 859, 878, 880, 896, 898, 899, 902, 904, 905, 922, 923, 926, 931, 934, 936, 947, 950, 952, 953, 956, 958, 961, 963, 966, 968, 971, 974, 988, 989, 992, 994, 996, 1008, 1012, 1020, 1024, 1032, 1033, 1036, 1040, 1042, 1047, 1050, 1051, 1053, 1056, 1057, 1059, 1062, 1065, 1066, 1069, 1070, 1073, 1074, 1075, 1079, 1092, 1093, 1132, 1135, 1159, 1181, 1184, 1185, 1187, 1303, 1339, 1342, 1374, 1378, 1384, 1385, 1386, 1387, 1388, 1389, 1390, 1394, 1398, 1399, 1400, 1401, 1411, 1412, 1415, 1501, 1502, 1505, 1507, 1510, 1546, 1547, 1550, 1552, 1555], "veteran": 30, "beginn": 30, "aspect": [30, 153, 162, 1558], "guid": [30, 34, 35, 36, 148, 1558], "through": [30, 33, 34, 36, 137, 140, 141, 145, 150, 151, 152, 153, 154, 155, 157, 158, 159, 162, 163, 164, 175, 435, 471, 474, 1388, 1391], "journei": [30, 1558, 1564], "inclusvi": 30, "big": [30, 176], "team": [30, 34, 35, 36, 153], "board": 30, "contributor": [30, 35, 36, 153, 158, 1558], "split": [30, 36, 70, 71, 91, 92, 119, 120, 158, 159, 176, 401, 423, 424, 425, 849, 974, 1303, 1558], "section": [30, 31, 33, 34, 36, 137, 139, 140, 141, 142, 143, 144, 146, 147, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 162, 163, 1464, 1465, 1469, 1470, 1474, 1475, 1479, 1480, 1484], "below": [30, 32, 34, 35, 48, 49, 131, 132, 137, 141, 142, 143, 144, 145, 148, 150, 152, 153, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 175, 228, 292, 296, 297, 301, 435, 591, 594, 1159, 1176, 1179, 1262, 1266, 1558], "best": [30, 33, 34, 35, 36, 137, 143, 148, 155, 156, 849, 974], "go": [30, 31, 34, 35, 36, 137, 140, 143, 145, 153, 154, 156, 158, 162, 176, 1388, 1399], "start": [30, 31, 32, 34, 35, 36, 91, 92, 97, 98, 137, 142, 143, 145, 146, 149, 153, 155, 157, 158, 159, 161, 162, 163, 175, 176, 228, 230, 231, 263, 264, 266, 267, 401, 402], "finish": [30, 34, 35, 137, 1558], "dive": [30, 33, 34, 36, 141, 143, 154, 158, 161, 162, 176, 1558], "right": [30, 35, 36, 66, 67, 88, 91, 92, 93, 94, 115, 116, 137, 145, 157, 162, 435, 491, 494, 501, 504, 1159, 1247, 1251, 1267, 1271, 1485, 1491, 1494], "environ": [30, 31, 32, 36, 175], "basic": [30, 32, 34, 145], "fork": [30, 35, 138, 849, 975], "doc": [30, 33, 34, 145, 146, 149, 154, 155, 159, 162, 163, 1558], "document": [30, 33, 36, 145, 153, 154, 155, 162, 164, 849, 1041], "local": [30, 31, 32, 35, 138, 150], "task": [30, 36, 153, 154, 175, 1384, 1385, 1386, 1387, 1558], "help": [30, 31, 34, 35, 139, 140, 141, 145, 151, 155, 156, 157, 161, 162, 163, 174, 849, 855, 1501, 1536, 1540, 1557, 1558], "appli": [30, 34, 35, 36, 38, 39, 40, 41, 42, 43, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 89, 90, 91, 92, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 155, 156, 161, 162, 163, 164, 174, 176, 189, 190, 193, 195, 198, 200, 203, 205, 208, 210, 213, 215, 218, 220, 223, 310, 386, 389, 849, 881, 884, 886, 889, 891, 894, 1042, 1062, 1065, 1066, 1069, 1093, 1139, 1142, 1149, 1152, 1154, 1157, 1159, 1212, 1215, 1227, 1230, 1287, 1288, 1291, 1293, 1296, 1298, 1301, 1303, 1309, 1312, 1359, 1362, 1384, 1385, 1386, 1388, 1394, 1397, 1400, 1401, 1406, 1407, 1410, 1501, 1507, 1510, 1557, 1558], "resourc": [30, 34], "video": [30, 35, 36, 139, 140, 141, 143, 144, 145, 146, 148, 149, 150, 151, 152, 153, 155, 156, 157], "contribut": [31, 33, 34, 35, 36, 159, 1564], "toward": [31, 35, 70, 71, 119, 120, 156, 159, 435, 751, 755, 1303, 1344, 1347, 1558, 1564], "requir": [31, 32, 34, 35, 139, 142, 143, 144, 145, 146, 147, 149, 151, 153, 154, 155, 156, 157, 159, 161, 176, 225, 226, 435, 721, 724, 1159, 1181, 1184, 1185, 1187, 1303, 1359, 1362], "slightli": [31, 141, 153, 159, 163], "more": [31, 33, 34, 36, 78, 79, 127, 128, 137, 138, 139, 140, 141, 142, 143, 145, 148, 149, 150, 151, 152, 153, 154, 155, 156, 158, 159, 160, 161, 162, 163, 164, 175, 176, 228, 230, 231, 310, 318, 321, 435, 551, 554, 616, 619, 1159, 1198, 1201, 1303, 1324, 1327, 1464, 1465, 1469, 1470, 1474, 1475, 1479, 1480, 1484, 1558], "complex": [31, 34, 143, 145, 153, 157, 162, 163, 164, 176, 435, 591, 594, 849, 998, 1001, 1159, 1181, 1184, 1185, 1187, 1247, 1251, 1557], "setup": [31, 35, 36], "alon": [31, 155, 401, 420, 434], "instanc": [31, 34, 36, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 138, 139, 143, 145, 146, 149, 150, 151, 152, 155, 162, 163, 164, 177, 187, 189, 210, 213, 215, 218, 220, 223, 228, 230, 231, 233, 235, 240, 242, 243, 244, 247, 249, 250, 252, 255, 257, 258, 261, 263, 264, 266, 267, 269, 272, 284, 285, 287, 290, 292, 296, 297, 301, 302, 304, 305, 309, 310, 313, 316, 328, 331, 346, 349, 364, 367, 374, 377, 401, 422, 435, 436, 439, 441, 444, 446, 449, 451, 454, 456, 459, 461, 464, 466, 469, 471, 474, 476, 479, 481, 484, 486, 489, 491, 494, 501, 504, 506, 509, 511, 514, 516, 519, 521, 524, 531, 534, 536, 539, 551, 554, 556, 559, 561, 564, 566, 569, 571, 574, 576, 579, 581, 584, 586, 589, 591, 594, 601, 604, 611, 614, 616, 619, 621, 624, 626, 629, 631, 634, 636, 639, 641, 644, 646, 649, 661, 664, 666, 669, 671, 674, 676, 679, 681, 684, 696, 699, 701, 704, 706, 709, 711, 714, 716, 719, 721, 724, 726, 729, 731, 735, 736, 740, 741, 745, 746, 750, 849, 850, 853, 857, 859, 906, 909, 923, 926, 931, 934, 937, 940, 947, 950, 994, 1008, 1012, 1020, 1024, 1025, 1029, 1042, 1057, 1059, 1075, 1079, 1082, 1086, 1087, 1091, 1093, 1105, 1108, 1119, 1122, 1127, 1130, 1139, 1142, 1154, 1157, 1159, 1160, 1163, 1165, 1168, 1170, 1173, 1176, 1179, 1181, 1184, 1185, 1187, 1193, 1196, 1198, 1201, 1203, 1206, 1208, 1210, 1212, 1215, 1217, 1220, 1222, 1225, 1227, 1230, 1232, 1235, 1237, 1240, 1242, 1245, 1247, 1251, 1252, 1256, 1257, 1261, 1272, 1276, 1277, 1281, 1282, 1286, 1287, 1288, 1291, 1303, 1304, 1307, 1309, 1312, 1314, 1317, 1319, 1322, 1324, 1327, 1329, 1332, 1334, 1337, 1339, 1342, 1344, 1347, 1349, 1352, 1354, 1357, 1359, 1362, 1364, 1368, 1369, 1373, 1374, 1378, 1379, 1383, 1406, 1407, 1410, 1438, 1439, 1442, 1444, 1447, 1454, 1457, 1459, 1463, 1464, 1465, 1469, 1470, 1474, 1475, 1479, 1480, 1484, 1485, 1486, 1489, 1496, 1499, 1501, 1512, 1515, 1516, 1519, 1520, 1523, 1524, 1527, 1528, 1531, 1532, 1535, 1536, 1540, 1541, 1545, 1546, 1547, 1550, 1552, 1555, 1557], "mech": 31, "vision": [31, 174, 1558], "demo": [31, 175, 1558], "util": [31, 85, 134, 144, 147, 156, 401, 412, 1547, 1550, 1552, 1555], "thu": [31, 34, 147, 153, 435, 501, 504, 681, 684, 696, 699, 1159, 1181, 1184], "relat": [31, 33, 35, 36, 148, 153, 155, 156, 157, 175, 401], "folder": [31, 32, 35, 36, 138, 150, 153, 155, 156], "To": [31, 35, 138, 141, 143, 145, 147, 148, 150, 153, 154, 155, 156, 162, 163, 164, 849, 990, 991, 993, 1558], "grasp": [31, 153], "directori": [31, 32, 34, 35, 36, 142, 153, 155, 401, 402, 849, 930, 995], "tree": [31, 32, 143], "place": [31, 33, 36, 43, 45, 47, 48, 49, 54, 55, 58, 59, 70, 71, 91, 92, 97, 98, 101, 102, 103, 104, 107, 108, 119, 120, 137, 138, 141, 144, 145, 146, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 164, 228, 230, 231, 233, 235, 243, 244, 247, 249, 250, 252, 255, 257, 258, 261, 263, 264, 266, 267, 269, 272, 274, 277, 284, 285, 287, 290, 292, 296, 297, 301, 302, 304, 305, 309, 310, 328, 331, 364, 367, 374, 377, 401, 426, 430, 435, 436, 439, 441, 444, 446, 449, 451, 454, 456, 459, 461, 464, 466, 469, 471, 474, 476, 479, 481, 484, 486, 489, 491, 494, 501, 504, 506, 509, 511, 514, 516, 519, 521, 524, 531, 534, 536, 539, 551, 554, 556, 559, 561, 564, 566, 569, 571, 574, 576, 579, 581, 584, 586, 589, 591, 594, 601, 604, 611, 614, 616, 619, 621, 624, 626, 629, 631, 634, 636, 639, 641, 644, 646, 649, 661, 664, 666, 669, 671, 674, 676, 679, 681, 684, 696, 699, 701, 704, 706, 709, 711, 714, 716, 719, 721, 724, 726, 729, 731, 735, 736, 740, 741, 745, 746, 750, 849, 906, 909, 923, 926, 931, 934, 937, 940, 942, 945, 947, 950, 1008, 1012, 1025, 1029, 1042, 1057, 1059, 1075, 1079, 1082, 1086, 1087, 1091, 1093, 1105, 1108, 1127, 1130, 1139, 1142, 1154, 1157, 1159, 1160, 1163, 1165, 1168, 1170, 1173, 1176, 1179, 1181, 1184, 1185, 1187, 1193, 1196, 1198, 1201, 1203, 1206, 1208, 1210, 1212, 1215, 1217, 1220, 1222, 1225, 1227, 1230, 1232, 1235, 1237, 1240, 1242, 1245, 1247, 1251, 1252, 1256, 1257, 1261, 1272, 1276, 1277, 1281, 1282, 1286, 1303, 1304, 1307, 1309, 1312, 1314, 1317, 1319, 1322, 1324, 1327, 1329, 1332, 1334, 1337, 1339, 1342, 1344, 1347, 1349, 1352, 1354, 1357, 1359, 1362, 1364, 1368, 1369, 1373, 1374, 1378, 1379, 1383, 1406, 1407, 1410, 1438, 1439, 1442, 1444, 1447, 1454, 1457, 1459, 1463, 1464, 1465, 1469, 1470, 1474, 1475, 1479, 1480, 1484, 1485, 1486, 1489, 1496, 1499, 1501, 1516, 1519, 1520, 1523, 1524, 1527, 1528, 1531, 1532, 1535, 1536, 1540, 1541, 1545, 1546, 1547, 1550, 1552, 1555, 1557], "dir": [31, 162], "clone": [31, 32, 36], "mutual": [31, 141, 150], "git": [31, 33, 35, 36, 138, 155], "http": [31, 35, 54, 55, 103, 104, 109, 110, 138, 143, 146, 310, 328, 331, 435, 576, 579, 1042, 1043, 1046, 1047, 1050, 1501, 1532, 1535], "com": [31, 35, 138, 143], "unifyai": [31, 32, 35, 36], "venv": 31, "python3": [31, 32, 35, 36], "m": [31, 32, 35, 36, 38, 41, 42, 48, 49, 56, 57, 66, 67, 74, 75, 103, 104, 105, 106, 115, 116, 123, 124, 137, 159, 228, 269, 272, 292, 296, 297, 301, 1159, 1160, 1163, 1170, 1173, 1176, 1179, 1181, 1184, 1185, 1187, 1188, 1191, 1193, 1196, 1198, 1201, 1203, 1206, 1208, 1210, 1212, 1215, 1217, 1220, 1222, 1225, 1227, 1230, 1232, 1235, 1237, 1240, 1242, 1245, 1247, 1251, 1252, 1256, 1262, 1266, 1388, 1396, 1411, 1417, 1420, 1422, 1425, 1427, 1430], "ivy_dev": [31, 32, 35, 36], "activ": [31, 32, 35, 36, 40, 58, 59, 86, 87, 90, 135, 136, 156, 163, 190, 193, 195, 198, 200, 203, 205, 208, 210, 213, 215, 218, 220, 223, 1558], "window": [31, 32, 36, 56, 57, 64, 65, 105, 106, 113, 114, 1093, 1095, 1098, 1100, 1103, 1105, 1108, 1110, 1112, 1114, 1117, 1119, 1122, 1124, 1125, 1127, 1130], "block": [31, 36, 147, 148, 150, 155, 158, 160, 164, 176, 401, 1042, 1074, 1092, 1557, 1558], "ivy_devscriptsactiv": 31, "bat": [31, 32, 35, 36], "mac": [31, 32, 35, 36], "linux": [31, 32, 35, 36], "bin": [31, 32, 35, 36, 138], "instal": [31, 32, 35, 36, 140, 148, 175, 1558], "packag": [31, 32, 35, 148, 153, 176], "edit": [31, 34, 35, 36], "mode": [31, 35, 36, 56, 57, 66, 67, 91, 92, 105, 106, 115, 116, 141, 145, 157, 176, 225, 226, 401, 425, 435, 451, 454, 661, 664, 849, 922, 988, 989, 992, 994, 1031, 1032, 1033, 1035, 1159, 1232, 1235], "cd": [31, 32, 35, 36], "pip": [31, 35, 175, 1558], "repeat": [31, 36, 58, 59, 70, 71, 107, 108, 119, 120, 139, 140, 145, 146, 148, 155, 849, 891, 894, 1303, 1369, 1373], "note": [31, 34, 35, 36, 54, 55, 143, 145, 146, 153, 154, 155, 156, 310, 385, 435, 616, 619, 696, 699, 701, 704, 849, 865, 1159, 1181, 1184, 1247, 1251, 1303, 1359, 1362, 1464, 1470, 1474, 1501, 1520, 1523], "link": [31, 34, 35, 142, 143, 153], "reflect": [31, 36, 139, 155], "immedi": [31, 157, 1558], "ivy_robot": [31, 175], "docker": [31, 33], "desktop": [31, 35], "imag": [31, 32, 35, 56, 57, 63, 64, 65, 105, 106, 112, 113, 114, 156, 159, 160, 162, 164, 175, 1093, 1095, 1098, 1100, 1103, 1105, 1108, 1110, 1112, 1119, 1122, 1124, 1125, 1127, 1130, 1558], "my": [31, 156], "mount": [31, 36], "run": [31, 32, 34, 35, 60, 61, 109, 110, 137, 140, 142, 145, 148, 149, 153, 154, 159, 160, 161, 162, 163, 164, 175, 176, 1042, 1043, 1046, 1047, 1050, 1062, 1065, 1384, 1385, 1386, 1387], "rm": [31, 36], "v": [31, 35, 36, 64, 65, 80, 81, 113, 114, 129, 130, 154, 159, 162, 163, 164, 1093, 1154, 1157, 1485, 1491, 1494, 1558], "pwd": 31, "volum": [31, 1093, 1114, 1117], "rebuild": [31, 88, 91, 92, 93, 94], "after": [31, 34, 36, 60, 61, 72, 73, 91, 92, 109, 110, 121, 122, 138, 143, 145, 147, 149, 153, 155, 158, 310, 395, 401, 402, 435, 721, 724, 1042, 1047, 1050, 1053, 1056, 1062, 1065, 1066, 1069, 1070, 1073, 1388, 1399, 1406, 1407, 1410], "everi": [31, 32, 34, 36, 48, 49, 58, 59, 107, 108, 138, 140, 141, 142, 143, 145, 149, 150, 151, 152, 153, 154, 155, 156, 159, 161, 163, 228, 257, 258, 261, 849, 850, 853], "id": [31, 33, 35, 139, 141, 148, 401, 406], "pycharm": 31, "configur": [31, 32, 35, 36, 91, 92, 142, 143, 151, 401, 424, 1388, 1401], "part": [31, 36, 48, 49, 60, 61, 138, 150, 153, 155, 156, 157, 159, 160, 164, 175, 176, 228, 292, 296, 297, 301, 435, 591, 594], "vscode": [31, 35], "found": [31, 34, 35, 36, 88, 91, 92, 93, 94, 139, 140, 141, 143, 146, 148, 151, 152, 153, 157, 401, 415, 1388, 1399], "devcontain": 31, "extens": [31, 33, 35, 54, 55, 57, 103, 104, 106, 146, 153, 155, 228, 230, 231, 233, 235, 243, 244, 247, 249, 250, 252, 255, 257, 258, 261, 263, 264, 269, 272, 284, 285, 287, 290, 292, 296, 297, 301, 302, 304, 305, 309, 310, 328, 331, 346, 349, 357, 360, 386, 389, 435, 436, 439, 441, 444, 446, 449, 451, 454, 456, 459, 461, 464, 466, 469, 471, 474, 476, 479, 481, 484, 486, 489, 491, 494, 501, 504, 506, 509, 511, 514, 516, 519, 521, 524, 531, 534, 536, 539, 551, 554, 556, 559, 561, 564, 566, 569, 571, 574, 576, 579, 581, 584, 586, 589, 601, 604, 611, 614, 616, 619, 621, 624, 626, 629, 631, 634, 636, 639, 641, 644, 646, 649, 661, 664, 666, 669, 671, 674, 676, 679, 681, 684, 696, 699, 701, 704, 706, 709, 711, 714, 716, 719, 721, 724, 726, 729, 731, 735, 736, 740, 741, 745, 746, 750, 1159, 1160, 1163, 1165, 1168, 1170, 1173, 1176, 1179, 1181, 1184, 1185, 1187, 1193, 1196, 1198, 1201, 1203, 1206, 1208, 1210, 1212, 1215, 1217, 1220, 1222, 1225, 1227, 1230, 1232, 1235, 1237, 1240, 1242, 1245, 1247, 1251, 1252, 1256, 1257, 1261, 1272, 1276, 1277, 1281, 1303, 1309, 1312, 1319, 1322, 1324, 1327, 1329, 1332, 1339, 1342, 1344, 1347, 1354, 1357, 1359, 1362, 1438, 1439, 1442, 1444, 1447, 1454, 1457, 1459, 1463, 1464, 1465, 1469, 1470, 1474, 1475, 1479, 1480, 1484, 1485, 1486, 1489, 1496, 1499, 1501, 1516, 1519, 1520, 1523, 1524, 1527, 1528, 1531, 1532, 1535, 1536, 1540, 1541, 1545, 1546, 1547, 1550, 1552, 1555], "remot": [31, 35, 138], "codespac": 31, "config": [31, 91, 92, 138, 162, 1388, 1401], "json": [31, 91, 92, 162], "good": [31, 32, 33, 34, 35, 36, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 154, 155, 156, 157, 159, 160, 163], "feel": [31, 32, 34, 35, 36, 38, 88, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 189, 225, 227, 228, 310, 401, 435, 756, 849, 1042, 1093, 1159, 1287, 1303, 1384, 1388, 1406, 1411, 1438, 1485, 1501, 1546, 1566, 1569, 1571, 1581, 1593, 1595, 1597, 1603], "free": [31, 32, 33, 34, 35, 36, 38, 88, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 175, 189, 225, 227, 228, 310, 401, 435, 756, 849, 1042, 1093, 1159, 1287, 1303, 1384, 1388, 1406, 1411, 1438, 1485, 1501, 1546, 1566, 1569, 1571, 1581, 1593, 1595, 1597, 1603], "channel": [31, 32, 34, 35, 36, 38, 58, 59, 88, 107, 108, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 189, 225, 227, 228, 310, 401, 435, 756, 849, 899, 902, 1042, 1093, 1159, 1287, 1303, 1384, 1388, 1406, 1411, 1438, 1485, 1501, 1546, 1566, 1569, 1571, 1581, 1593, 1595, 1597, 1603], "pre": [31, 34, 155, 164, 176], "commit": [31, 34, 138, 142, 145, 155], "_": [31, 32, 35, 54, 55, 103, 104, 109, 110, 146, 148, 152, 153, 155, 162, 310, 328, 331, 435, 576, 579, 1042, 1043, 1046, 1047, 1050, 1159, 1252, 1256, 1501, 1532, 1535], "builder": [32, 174, 176, 1557, 1558], "dockerfil": [32, 35], "command": [32, 35, 138, 151, 1558], "maco": 32, "latest": [32, 34, 35, 36, 54, 55, 103, 104, 140, 142, 143, 146, 156, 176, 310, 328, 331, 435, 576, 579, 1501, 1532, 1535], "ubuntu": [32, 142], "uid": 32, "bash": [32, 36, 138], "root": [32, 35, 36, 54, 55, 103, 104, 153, 162, 435, 721, 724], "termin": [32, 35, 36, 88, 91, 92, 93, 94, 141, 159, 162], "3": [32, 35, 38, 39, 40, 41, 42, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 64, 65, 66, 67, 70, 71, 74, 75, 78, 79, 82, 83, 88, 89, 90, 93, 94, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 127, 128, 129, 130, 131, 132, 138, 140, 141, 143, 145, 155, 159, 161, 162, 163, 164, 189, 190, 193, 195, 198, 200, 203, 205, 208, 210, 213, 215, 218, 220, 223, 227, 228, 258, 261, 269, 272, 287, 290, 302, 304, 305, 309, 310, 313, 316, 318, 321, 323, 326, 328, 331, 341, 343, 346, 349, 369, 372, 374, 377, 386, 389, 401, 406, 407, 410, 419, 421, 423, 426, 430, 435, 436, 439, 441, 444, 446, 449, 451, 454, 456, 459, 461, 464, 466, 469, 471, 474, 476, 479, 481, 484, 496, 499, 501, 504, 506, 509, 511, 514, 516, 519, 521, 524, 526, 529, 531, 534, 536, 539, 546, 549, 551, 554, 556, 559, 561, 564, 566, 569, 571, 574, 576, 579, 581, 584, 586, 589, 591, 594, 596, 599, 601, 604, 606, 609, 611, 614, 616, 619, 626, 629, 636, 639, 641, 644, 646, 649, 651, 654, 656, 659, 661, 664, 666, 669, 671, 674, 676, 679, 686, 689, 696, 699, 701, 704, 706, 709, 711, 714, 716, 719, 721, 724, 726, 729, 731, 735, 736, 740, 741, 745, 751, 755, 849, 850, 853, 857, 859, 865, 866, 869, 871, 874, 878, 880, 886, 889, 891, 894, 896, 898, 906, 909, 911, 914, 923, 926, 931, 934, 937, 940, 942, 945, 958, 961, 968, 971, 974, 983, 986, 996, 998, 1001, 1014, 1018, 1025, 1029, 1030, 1041, 1042, 1043, 1046, 1052, 1053, 1056, 1057, 1059, 1061, 1062, 1065, 1070, 1073, 1075, 1079, 1081, 1082, 1086, 1093, 1095, 1098, 1100, 1103, 1105, 1108, 1114, 1117, 1119, 1122, 1124, 1125, 1127, 1130, 1139, 1142, 1154, 1157, 1159, 1160, 1163, 1165, 1168, 1170, 1173, 1176, 1179, 1193, 1196, 1198, 1201, 1203, 1206, 1212, 1215, 1222, 1225, 1227, 1230, 1237, 1240, 1247, 1251, 1252, 1256, 1257, 1261, 1262, 1266, 1267, 1271, 1282, 1286, 1287, 1288, 1291, 1298, 1301, 1303, 1304, 1307, 1309, 1312, 1319, 1322, 1324, 1327, 1329, 1332, 1334, 1337, 1339, 1342, 1344, 1347, 1349, 1352, 1354, 1357, 1359, 1362, 1364, 1368, 1369, 1373, 1374, 1378, 1388, 1390, 1391, 1394, 1396, 1399, 1404, 1405, 1406, 1407, 1410, 1411, 1412, 1415, 1417, 1420, 1422, 1425, 1427, 1430, 1433, 1436, 1438, 1439, 1442, 1444, 1447, 1454, 1457, 1459, 1463, 1464, 1465, 1469, 1470, 1474, 1475, 1479, 1485, 1486, 1489, 1491, 1494, 1496, 1499, 1501, 1502, 1505, 1507, 1510, 1512, 1515, 1516, 1519, 1520, 1523, 1524, 1527, 1528, 1531, 1536, 1540, 1541, 1545, 1546, 1547, 1550, 1552, 1555, 1558], "8": [32, 35, 38, 41, 42, 54, 55, 56, 57, 58, 59, 64, 65, 66, 67, 68, 69, 70, 71, 74, 75, 78, 79, 80, 81, 82, 83, 88, 93, 94, 103, 104, 105, 106, 107, 108, 109, 110, 113, 114, 115, 116, 117, 118, 119, 120, 123, 124, 127, 128, 129, 130, 131, 132, 141, 145, 155, 158, 162, 189, 190, 193, 210, 213, 228, 257, 258, 261, 305, 309, 310, 339, 340, 346, 349, 401, 412, 431, 435, 451, 454, 461, 464, 481, 484, 501, 504, 511, 514, 521, 524, 561, 564, 566, 569, 571, 574, 596, 599, 601, 604, 626, 629, 636, 639, 641, 644, 651, 654, 656, 659, 661, 664, 686, 689, 701, 704, 706, 709, 721, 724, 726, 729, 741, 745, 849, 865, 871, 874, 906, 909, 923, 926, 937, 940, 942, 945, 958, 961, 968, 971, 983, 986, 998, 1001, 1008, 1012, 1042, 1043, 1046, 1052, 1057, 1059, 1061, 1070, 1073, 1081, 1093, 1095, 1098, 1119, 1122, 1127, 1130, 1139, 1142, 1159, 1170, 1173, 1176, 1179, 1198, 1201, 1203, 1206, 1222, 1225, 1252, 1256, 1257, 1261, 1262, 1266, 1267, 1271, 1287, 1288, 1291, 1303, 1304, 1307, 1324, 1327, 1349, 1352, 1359, 1362, 1374, 1378, 1388, 1390, 1396, 1411, 1412, 1415, 1417, 1420, 1422, 1425, 1427, 1430, 1438, 1459, 1463, 1464, 1465, 1469, 1475, 1479, 1485, 1486, 1489, 1496, 1499, 1501, 1507, 1510, 1512, 1515, 1520, 1523, 1536, 1540, 1541, 1545, 1558], "builtin": [32, 35, 161, 163], "explicit": [32, 35, 141, 143, 152, 153, 159, 176], "cmd": [32, 35], "file": [32, 34, 35, 36, 91, 92, 138, 139, 140, 141, 142, 146, 148, 150, 153, 154, 155, 156, 159, 162, 849, 930, 995], "abov": [32, 35, 36, 48, 49, 54, 55, 74, 75, 89, 90, 103, 104, 123, 124, 139, 140, 141, 142, 143, 145, 146, 148, 149, 150, 152, 153, 154, 155, 157, 159, 161, 162, 163, 164, 189, 220, 223, 228, 230, 231, 233, 235, 243, 244, 247, 249, 250, 252, 255, 257, 258, 261, 263, 264, 266, 267, 269, 272, 284, 285, 287, 290, 292, 296, 297, 301, 302, 304, 305, 309, 310, 328, 331, 364, 367, 374, 377, 435, 436, 439, 441, 444, 446, 449, 451, 454, 456, 459, 461, 464, 466, 469, 471, 474, 476, 479, 481, 484, 486, 489, 491, 494, 501, 504, 506, 509, 511, 514, 516, 519, 521, 524, 531, 534, 536, 539, 551, 554, 556, 559, 561, 564, 566, 569, 571, 574, 576, 579, 581, 584, 586, 589, 591, 594, 601, 604, 611, 614, 616, 619, 621, 624, 626, 629, 631, 634, 636, 639, 641, 644, 646, 649, 661, 664, 666, 669, 671, 674, 676, 679, 681, 684, 696, 699, 701, 704, 706, 709, 711, 714, 716, 719, 721, 724, 726, 729, 731, 735, 736, 740, 741, 745, 746, 750, 849, 906, 909, 923, 926, 931, 934, 937, 940, 1025, 1029, 1042, 1057, 1059, 1075, 1079, 1082, 1086, 1087, 1091, 1093, 1105, 1108, 1127, 1130, 1139, 1142, 1154, 1157, 1159, 1160, 1163, 1165, 1168, 1170, 1173, 1176, 1179, 1181, 1184, 1185, 1187, 1193, 1196, 1198, 1201, 1203, 1206, 1208, 1210, 1212, 1215, 1217, 1220, 1222, 1225, 1227, 1230, 1232, 1235, 1237, 1240, 1242, 1245, 1247, 1251, 1252, 1256, 1257, 1261, 1262, 1266, 1272, 1276, 1277, 1281, 1282, 1286, 1303, 1304, 1307, 1309, 1312, 1314, 1317, 1319, 1322, 1324, 1327, 1329, 1332, 1334, 1337, 1339, 1342, 1344, 1347, 1349, 1352, 1354, 1357, 1359, 1362, 1364, 1368, 1369, 1373, 1374, 1378, 1379, 1383, 1406, 1407, 1410, 1411, 1417, 1420, 1438, 1439, 1442, 1444, 1447, 1454, 1457, 1459, 1463, 1464, 1465, 1469, 1470, 1474, 1475, 1479, 1480, 1484, 1485, 1486, 1489, 1496, 1499, 1501, 1516, 1519, 1520, 1523, 1524, 1527, 1528, 1531, 1532, 1535, 1536, 1540, 1541, 1545, 1546, 1547, 1550, 1552, 1555], "script": [32, 35, 36, 145, 159, 176], "OR": [32, 35, 36, 84, 85, 133, 134, 435, 496, 499, 641, 644, 1546, 1552, 1555], "execut": [32, 35, 36, 141, 145, 152, 155, 157, 159, 161, 164, 176, 401, 402, 849, 1030, 1557], "insid": [32, 36, 141, 143, 151, 155, 156], "make_docs_without_dock": 32, "path": [32, 35, 152, 153, 154, 849, 930], "rel": [32, 36, 38, 41, 42, 60, 61, 66, 67, 70, 71, 80, 81, 97, 98, 109, 110, 115, 116, 119, 120, 129, 130, 154, 157, 1042, 1047, 1050, 1053, 1056, 1062, 1065, 1066, 1069, 1070, 1073, 1159, 1176, 1179, 1212, 1215, 1227, 1230, 1262, 1266, 1303, 1324, 1327, 1344, 1347, 1485, 1486, 1489, 1496, 1499, 1558], "gener": [32, 34, 35, 36, 54, 55, 59, 60, 61, 74, 75, 86, 87, 103, 104, 108, 109, 110, 123, 124, 135, 136, 137, 138, 139, 141, 143, 144, 145, 146, 148, 149, 150, 151, 152, 153, 154, 156, 158, 159, 161, 163, 164, 175, 176, 225, 228, 230, 231, 263, 264, 266, 267, 310, 328, 331, 435, 576, 579, 696, 699, 850, 853, 855, 856, 857, 859, 860, 863, 865, 866, 869, 871, 874, 876, 877, 878, 880, 881, 884, 886, 889, 891, 894, 896, 898, 899, 902, 904, 905, 906, 909, 911, 914, 916, 917, 918, 919, 920, 921, 922, 923, 926, 928, 929, 930, 931, 934, 936, 937, 940, 942, 945, 947, 950, 952, 953, 956, 958, 961, 963, 966, 968, 971, 973, 974, 975, 976, 977, 978, 981, 983, 986, 988, 989, 990, 991, 992, 993, 994, 995, 996, 997, 998, 1001, 1003, 1006, 1008, 1012, 1013, 1014, 1018, 1019, 1020, 1024, 1025, 1029, 1030, 1031, 1032, 1033, 1034, 1035, 1036, 1040, 1041, 1042, 1057, 1059, 1159, 1267, 1271, 1411, 1412, 1415, 1417, 1420, 1427, 1430, 1432, 1501, 1532, 1535, 1557, 1558], "It": [32, 34, 35, 36, 48, 49, 50, 51, 54, 55, 56, 57, 58, 59, 60, 61, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 84, 85, 89, 90, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 129, 130, 131, 132, 133, 134, 137, 138, 139, 140, 141, 142, 143, 145, 146, 151, 152, 153, 154, 155, 156, 157, 159, 161, 162, 163, 189, 190, 193, 195, 198, 200, 203, 205, 208, 210, 213, 215, 218, 220, 223, 228, 230, 231, 233, 235, 240, 242, 243, 244, 247, 249, 250, 252, 255, 257, 258, 261, 263, 264, 266, 267, 279, 282, 284, 285, 287, 290, 292, 296, 297, 301, 302, 304, 305, 309, 310, 313, 316, 323, 326, 401, 426, 430, 435, 436, 439, 441, 444, 446, 449, 451, 454, 456, 459, 461, 464, 466, 469, 471, 474, 476, 479, 481, 484, 486, 489, 491, 494, 496, 499, 501, 504, 506, 509, 511, 514, 516, 519, 521, 524, 526, 529, 531, 534, 536, 539, 541, 544, 546, 549, 551, 554, 556, 559, 561, 564, 566, 569, 571, 574, 576, 579, 581, 584, 586, 589, 591, 594, 596, 599, 606, 609, 611, 614, 616, 619, 621, 624, 626, 629, 631, 634, 636, 639, 641, 644, 646, 649, 651, 654, 656, 659, 661, 664, 666, 669, 671, 674, 676, 679, 681, 684, 686, 689, 691, 694, 696, 699, 701, 704, 706, 709, 711, 714, 716, 719, 721, 724, 726, 729, 731, 735, 736, 740, 741, 745, 746, 750, 751, 755, 849, 866, 869, 871, 874, 881, 884, 886, 889, 891, 894, 906, 909, 911, 914, 978, 981, 983, 986, 1042, 1043, 1046, 1047, 1050, 1053, 1056, 1062, 1065, 1066, 1069, 1070, 1073, 1075, 1079, 1093, 1095, 1098, 1100, 1103, 1105, 1108, 1110, 1112, 1114, 1117, 1119, 1122, 1124, 1125, 1127, 1130, 1132, 1135, 1139, 1142, 1149, 1152, 1154, 1157, 1159, 1160, 1163, 1165, 1168, 1170, 1173, 1176, 1179, 1185, 1187, 1188, 1191, 1193, 1196, 1198, 1201, 1203, 1206, 1212, 1215, 1217, 1220, 1222, 1225, 1227, 1230, 1242, 1245, 1252, 1256, 1257, 1261, 1262, 1266, 1272, 1276, 1277, 1281, 1282, 1286, 1287, 1288, 1291, 1293, 1296, 1298, 1301, 1303, 1304, 1307, 1309, 1312, 1314, 1317, 1319, 1322, 1324, 1327, 1329, 1332, 1334, 1337, 1339, 1342, 1344, 1347, 1354, 1357, 1359, 1362, 1364, 1368, 1369, 1373, 1379, 1383, 1406, 1407, 1410, 1411, 1412, 1415, 1417, 1420, 1422, 1425, 1427, 1430, 1433, 1436, 1438, 1439, 1442, 1449, 1452, 1459, 1463, 1464, 1480, 1484, 1485, 1486, 1489, 1496, 1499, 1501, 1502, 1505, 1507, 1510, 1546, 1547, 1550, 1552, 1555], "synchron": [32, 142], "respons": [32, 36, 143], "rest": [32, 35, 142, 164], "remove_doc": 32, "privat": [32, 155], "access": [32, 34, 35, 36, 91, 92, 143, 153], "fulfil": [32, 158, 1558], "purpos": [32, 36, 139, 141, 142, 145, 147, 149, 150, 151, 153, 155, 157, 158, 161, 435, 551, 554, 616, 619, 1557, 1558], "delet": [32, 36, 1042, 1080], "autogenerated_sourc": 32, "Then": [32, 34, 36, 151, 156, 176], "format": [32, 89, 90, 91, 92, 95, 96, 137, 143, 144, 145, 146, 147, 159, 161, 162, 189, 220, 223, 310, 341, 343, 401, 407, 410, 1501, 1512, 1515, 1558], "png": [32, 162], "_imag": 32, "lastli": 32, "docstr": [32, 33, 34, 38, 39, 40, 41, 42, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 89, 90, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 137, 148, 149, 150, 153, 156, 228, 230, 231, 233, 235, 243, 244, 247, 249, 250, 252, 255, 257, 258, 261, 263, 264, 269, 272, 284, 285, 287, 290, 292, 296, 297, 301, 302, 304, 305, 309, 310, 328, 331, 346, 349, 357, 360, 386, 389, 435, 436, 439, 441, 444, 446, 449, 451, 454, 456, 459, 461, 464, 466, 469, 471, 474, 476, 479, 481, 484, 486, 489, 491, 494, 501, 504, 506, 509, 511, 514, 516, 519, 521, 524, 531, 534, 536, 539, 551, 554, 556, 559, 561, 564, 566, 569, 571, 574, 576, 579, 581, 584, 586, 589, 601, 604, 611, 614, 616, 619, 621, 624, 626, 629, 631, 634, 636, 639, 641, 644, 646, 649, 661, 664, 666, 669, 671, 674, 676, 679, 681, 684, 696, 699, 701, 704, 706, 709, 711, 714, 716, 719, 721, 724, 726, 729, 731, 735, 736, 740, 741, 745, 746, 750, 849, 1041, 1159, 1160, 1163, 1165, 1168, 1170, 1173, 1176, 1179, 1181, 1184, 1185, 1187, 1193, 1196, 1198, 1201, 1203, 1206, 1208, 1210, 1212, 1215, 1217, 1220, 1222, 1225, 1227, 1230, 1232, 1235, 1237, 1240, 1242, 1245, 1247, 1251, 1252, 1256, 1257, 1261, 1272, 1276, 1277, 1281, 1303, 1309, 1312, 1319, 1322, 1324, 1327, 1329, 1332, 1339, 1342, 1344, 1347, 1354, 1357, 1359, 1362, 1438, 1439, 1442, 1444, 1447, 1454, 1457, 1459, 1463, 1464, 1465, 1469, 1470, 1474, 1475, 1479, 1480, 1484, 1485, 1486, 1489, 1496, 1499, 1501, 1516, 1519, 1520, 1523, 1524, 1527, 1528, 1531, 1532, 1535, 1536, 1540, 1541, 1545, 1546, 1547, 1550, 1552, 1555], "structur": [32, 36, 88, 91, 92, 93, 94, 139, 141, 150, 154, 156, 162, 163, 849, 876, 1388, 1401], "rst": [32, 756], "main": [32, 35, 48, 49, 66, 67, 115, 116, 141, 148, 151, 155, 228, 249, 250, 292, 296, 297, 301, 1159, 1176, 1179, 1262, 1266], "submodul": [32, 34, 35, 36, 38, 88, 138, 142, 144, 150, 151, 155, 158, 159, 163, 189, 225, 227, 228, 310, 401, 435, 756, 849, 1042, 1093, 1159, 1287, 1303, 1384, 1388, 1406, 1411, 1438, 1485, 1501, 1546, 1557, 1558, 1566, 1569, 1571, 1581, 1593, 1595, 1597, 1603], "skip": [32, 89, 90, 91, 92, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 113, 114, 115, 116, 117, 118, 119, 120, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 142, 151, 155, 1388, 1401], "read": [32, 34, 91, 92, 1558], "partial_sourc": 32, "conf": 32, "copi": [32, 36, 48, 49, 50, 51, 58, 59, 70, 71, 91, 92, 97, 98, 99, 100, 101, 102, 107, 108, 119, 120, 140, 143, 146, 153, 154, 159, 162, 175, 176, 228, 233, 235, 240, 242, 252, 255, 310, 313, 316, 401, 426, 430, 849, 1020, 1024, 1025, 1029, 1303, 1339, 1342, 1388, 1390, 1485, 1496, 1499], "5": [32, 36, 38, 39, 40, 41, 42, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 64, 65, 66, 67, 70, 71, 72, 73, 74, 75, 78, 79, 80, 81, 82, 83, 88, 89, 90, 93, 94, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 113, 114, 115, 116, 119, 120, 121, 122, 123, 124, 127, 128, 129, 130, 131, 132, 138, 140, 145, 149, 154, 155, 161, 162, 163, 189, 190, 193, 195, 198, 200, 203, 205, 208, 215, 218, 220, 223, 228, 258, 261, 269, 272, 287, 290, 302, 304, 305, 309, 310, 318, 321, 323, 326, 328, 331, 341, 343, 346, 349, 374, 377, 386, 389, 401, 407, 410, 419, 423, 435, 436, 439, 446, 449, 451, 454, 456, 459, 461, 464, 471, 474, 476, 479, 481, 484, 496, 499, 501, 504, 511, 514, 521, 524, 526, 529, 531, 534, 536, 539, 551, 554, 556, 559, 561, 564, 566, 569, 571, 574, 591, 594, 596, 599, 601, 604, 606, 609, 611, 614, 616, 619, 626, 629, 636, 639, 641, 644, 646, 649, 651, 654, 656, 659, 661, 664, 666, 669, 671, 674, 676, 679, 686, 689, 696, 699, 701, 704, 706, 709, 711, 714, 721, 724, 726, 729, 731, 735, 736, 740, 741, 745, 849, 850, 853, 857, 859, 865, 866, 869, 871, 874, 878, 880, 886, 889, 891, 894, 906, 909, 911, 914, 919, 931, 934, 937, 940, 942, 945, 983, 986, 998, 1001, 1008, 1012, 1014, 1018, 1030, 1041, 1042, 1043, 1046, 1052, 1053, 1056, 1057, 1059, 1061, 1062, 1065, 1070, 1073, 1075, 1079, 1081, 1082, 1086, 1093, 1095, 1098, 1105, 1108, 1114, 1117, 1119, 1122, 1124, 1125, 1127, 1130, 1139, 1142, 1154, 1157, 1159, 1160, 1163, 1165, 1168, 1170, 1173, 1176, 1179, 1193, 1196, 1198, 1201, 1203, 1206, 1222, 1225, 1227, 1230, 1252, 1256, 1257, 1261, 1262, 1266, 1267, 1271, 1287, 1298, 1301, 1303, 1304, 1307, 1309, 1312, 1319, 1322, 1324, 1327, 1329, 1332, 1334, 1337, 1339, 1342, 1344, 1347, 1349, 1352, 1354, 1357, 1364, 1368, 1369, 1373, 1374, 1378, 1388, 1390, 1391, 1394, 1396, 1399, 1404, 1405, 1406, 1407, 1410, 1411, 1412, 1415, 1417, 1420, 1422, 1425, 1427, 1430, 1433, 1436, 1438, 1444, 1447, 1454, 1457, 1459, 1463, 1464, 1465, 1469, 1470, 1474, 1475, 1479, 1485, 1486, 1489, 1491, 1494, 1496, 1499, 1501, 1502, 1505, 1507, 1510, 1512, 1515, 1516, 1519, 1520, 1523, 1524, 1527, 1536, 1540, 1541, 1545, 1546, 1547, 1550, 1552, 1555], "create_rst_fil": 32, "filter": [32, 64, 65, 105, 106, 113, 114, 155, 1093, 1094, 1095, 1098, 1100, 1103, 1105, 1108, 1110, 1112, 1114, 1117, 1119, 1122, 1124, 1125, 1127, 1130, 1138], "recurs": [32, 35, 43, 44, 45, 46, 47, 91, 92, 95, 96, 138, 141, 150, 163, 176, 310, 351, 352, 354, 355, 401, 413, 414, 849, 904, 905, 1388, 1389, 1390, 1398, 1399, 1400], "repres": [32, 54, 55, 66, 67, 103, 104, 115, 116, 157, 161, 228, 269, 272, 279, 282, 310, 345, 435, 446, 449, 451, 454, 461, 464, 476, 479, 521, 524, 661, 664, 716, 719, 741, 745, 1042, 1074, 1092, 1093, 1139, 1142, 1159, 1237, 1240, 1242, 1245], "its": [32, 34, 35, 36, 43, 46, 47, 50, 51, 70, 71, 91, 92, 99, 100, 107, 108, 119, 120, 143, 146, 151, 153, 154, 155, 156, 157, 164, 176, 310, 318, 321, 401, 425, 849, 1019, 1159, 1198, 1201, 1303, 1319, 1322, 1339, 1342, 1344, 1347, 1364, 1368, 1388, 1394, 1557], "overal": [32, 141, 143, 144, 146, 164], "markup": 32, "6": [32, 38, 41, 42, 48, 49, 54, 55, 56, 57, 58, 59, 60, 61, 64, 65, 66, 67, 70, 71, 74, 75, 80, 81, 82, 83, 88, 93, 94, 97, 98, 103, 104, 105, 106, 107, 108, 109, 110, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 127, 128, 129, 130, 131, 132, 140, 141, 145, 155, 157, 159, 161, 162, 163, 189, 190, 193, 195, 198, 215, 218, 228, 257, 258, 261, 269, 272, 305, 309, 310, 318, 321, 323, 326, 341, 343, 346, 349, 401, 419, 434, 435, 436, 439, 446, 449, 451, 454, 456, 459, 461, 464, 466, 469, 471, 474, 481, 484, 486, 489, 496, 499, 501, 504, 506, 509, 511, 514, 516, 519, 521, 524, 526, 529, 531, 534, 536, 539, 556, 559, 561, 564, 566, 569, 571, 574, 581, 584, 586, 589, 591, 594, 596, 599, 601, 604, 616, 619, 626, 629, 636, 639, 646, 649, 651, 654, 656, 659, 661, 664, 666, 669, 676, 679, 686, 689, 696, 699, 701, 704, 706, 709, 711, 714, 721, 724, 726, 729, 731, 735, 736, 740, 741, 745, 751, 755, 849, 866, 869, 871, 874, 878, 880, 886, 889, 906, 909, 911, 914, 937, 940, 942, 945, 983, 986, 998, 1001, 1008, 1012, 1014, 1018, 1030, 1042, 1043, 1046, 1052, 1053, 1056, 1061, 1062, 1065, 1070, 1073, 1081, 1093, 1095, 1098, 1105, 1108, 1119, 1122, 1127, 1130, 1139, 1142, 1154, 1157, 1159, 1165, 1168, 1170, 1173, 1176, 1179, 1198, 1201, 1203, 1206, 1222, 1225, 1247, 1251, 1252, 1256, 1257, 1261, 1262, 1266, 1287, 1288, 1291, 1298, 1301, 1303, 1304, 1307, 1309, 1312, 1319, 1322, 1324, 1327, 1329, 1332, 1334, 1337, 1344, 1347, 1349, 1352, 1354, 1357, 1359, 1362, 1364, 1368, 1369, 1373, 1374, 1378, 1388, 1390, 1399, 1405, 1406, 1407, 1410, 1411, 1412, 1415, 1417, 1420, 1422, 1425, 1427, 1430, 1438, 1439, 1442, 1459, 1463, 1464, 1465, 1469, 1470, 1474, 1475, 1479, 1485, 1486, 1489, 1491, 1494, 1496, 1499, 1501, 1502, 1505, 1507, 1510, 1512, 1515, 1516, 1519, 1520, 1523, 1524, 1527, 1528, 1531, 1536, 1540, 1541, 1545], "extract": [32, 153, 156], "get_functions_and_class": 32, "doctr": 32, "7": [32, 36, 38, 39, 40, 41, 42, 54, 55, 56, 57, 58, 59, 60, 61, 64, 65, 66, 67, 68, 69, 70, 71, 74, 75, 78, 79, 80, 81, 82, 83, 88, 93, 94, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 127, 128, 129, 130, 131, 132, 141, 145, 150, 152, 155, 189, 195, 198, 205, 208, 310, 346, 349, 357, 360, 386, 389, 401, 412, 435, 436, 439, 451, 454, 481, 484, 486, 489, 496, 499, 501, 504, 506, 509, 511, 514, 521, 524, 531, 534, 536, 539, 546, 549, 556, 559, 561, 564, 566, 569, 571, 574, 591, 594, 596, 599, 601, 604, 606, 609, 611, 614, 626, 629, 636, 639, 646, 649, 651, 654, 656, 659, 661, 664, 676, 679, 696, 699, 701, 704, 706, 709, 711, 714, 716, 719, 721, 724, 736, 740, 741, 745, 751, 755, 849, 866, 869, 871, 874, 937, 940, 942, 945, 983, 986, 1008, 1012, 1042, 1043, 1046, 1047, 1050, 1052, 1053, 1056, 1061, 1062, 1065, 1070, 1073, 1081, 1093, 1095, 1098, 1119, 1122, 1127, 1130, 1139, 1142, 1154, 1157, 1159, 1165, 1168, 1170, 1173, 1176, 1179, 1198, 1201, 1222, 1225, 1252, 1256, 1257, 1261, 1262, 1266, 1287, 1288, 1291, 1293, 1296, 1298, 1301, 1303, 1304, 1307, 1319, 1322, 1324, 1327, 1349, 1352, 1359, 1362, 1364, 1368, 1374, 1378, 1388, 1390, 1396, 1406, 1407, 1410, 1411, 1412, 1415, 1417, 1420, 1422, 1425, 1427, 1430, 1438, 1459, 1463, 1464, 1465, 1469, 1475, 1479, 1485, 1496, 1499, 1501, 1502, 1505, 1507, 1510, 1512, 1515, 1520, 1523, 1536, 1540, 1541, 1545], "readm": [32, 176], "module_nam": 32, "copy_readme_to_rst": 32, "tabl": [32, 143, 153], "content": [32, 34, 91, 92, 152, 159, 162], "toc": 32, "append": [32, 91, 92, 147, 155, 159, 162, 435, 491, 494, 1159, 1176, 1179, 1198, 1201, 1303, 1319, 1322], "append_toctree_to_rst": 32, "9": [32, 38, 41, 42, 54, 55, 56, 57, 58, 59, 60, 61, 64, 65, 66, 67, 70, 71, 74, 75, 80, 81, 82, 83, 88, 93, 94, 99, 100, 103, 104, 105, 106, 107, 108, 109, 110, 113, 114, 115, 116, 119, 120, 123, 124, 127, 128, 129, 130, 131, 132, 141, 145, 155, 162, 163, 189, 190, 193, 310, 339, 340, 346, 349, 435, 451, 454, 461, 464, 481, 484, 486, 489, 501, 504, 531, 534, 536, 539, 561, 564, 576, 579, 606, 609, 611, 614, 616, 619, 636, 639, 641, 644, 651, 654, 656, 659, 661, 664, 686, 689, 701, 704, 706, 709, 721, 724, 726, 729, 731, 735, 751, 755, 849, 871, 874, 891, 894, 906, 909, 937, 940, 942, 945, 958, 961, 968, 971, 983, 986, 1042, 1043, 1046, 1047, 1050, 1062, 1065, 1093, 1095, 1098, 1105, 1108, 1119, 1122, 1127, 1130, 1139, 1142, 1159, 1165, 1168, 1170, 1173, 1176, 1179, 1198, 1201, 1203, 1206, 1222, 1225, 1247, 1251, 1252, 1256, 1257, 1261, 1262, 1266, 1267, 1271, 1303, 1304, 1307, 1324, 1327, 1344, 1347, 1349, 1352, 1359, 1362, 1374, 1378, 1388, 1390, 1394, 1396, 1399, 1411, 1412, 1415, 1417, 1420, 1422, 1425, 1427, 1430, 1438, 1459, 1463, 1464, 1465, 1469, 1475, 1479, 1485, 1496, 1499, 1501, 1507, 1510, 1512, 1515, 1536, 1540, 1541, 1545], "index": [32, 48, 49, 58, 59, 76, 77, 78, 79, 80, 81, 91, 92, 97, 98, 107, 108, 125, 126, 127, 128, 129, 130, 141, 150, 154, 155, 161, 227, 228, 249, 250, 269, 272, 401, 422, 849, 855, 911, 914, 919, 1042, 1080, 1303, 1359, 1362, 1388, 1391, 1392, 1395, 1396, 1397, 1402, 1404, 1438, 1439, 1442, 1444, 1447, 1454, 1457, 1464, 1465, 1469, 1470, 1474, 1475, 1479, 1485, 1486, 1489, 1491, 1494], "create_index_rst": 32, "14": [32, 50, 51, 54, 55, 56, 57, 74, 75, 82, 83, 99, 100, 103, 104, 105, 106, 107, 108, 115, 116, 119, 120, 123, 124, 141, 145, 155, 310, 313, 316, 346, 349, 435, 441, 444, 461, 464, 471, 474, 526, 529, 626, 629, 641, 644, 686, 689, 751, 755, 849, 998, 1001, 1042, 1043, 1046, 1093, 1095, 1098, 1154, 1157, 1159, 1176, 1179, 1222, 1225, 1262, 1266, 1303, 1374, 1378, 1464, 1465, 1469, 1501, 1507, 1510, 1512, 1515], "\u03c0": [32, 227, 435, 441, 444, 456, 459, 466, 469, 471, 474], "namespac": [32, 34, 143, 151, 153, 154, 156, 159, 164], "remov": [32, 34, 66, 67, 91, 92, 115, 116, 140, 143, 146, 150, 155, 157, 164, 1042, 1080, 1159, 1176, 1179, 1198, 1201, 1262, 1266, 1303, 1354, 1357, 1384, 1385, 1386], "resours": 33, "climb": 33, "steep": 33, "curv": 33, "respect": [33, 34, 36, 54, 55, 60, 61, 103, 104, 109, 110, 139, 141, 143, 145, 149, 153, 155, 156, 228, 269, 272, 435, 436, 439, 451, 454, 471, 474, 481, 484, 491, 494, 496, 499, 501, 504, 506, 509, 531, 534, 536, 539, 561, 564, 566, 569, 571, 574, 596, 599, 601, 604, 626, 629, 631, 634, 641, 644, 646, 649, 661, 664, 671, 674, 696, 699, 731, 735, 1042, 1043, 1046, 1047, 1050, 1051, 1052, 1053, 1056, 1061, 1062, 1065, 1066, 1069, 1070, 1073, 1081, 1159, 1232, 1235, 1247, 1251, 1384, 1385, 1386, 1387], "behaviour": [33, 34, 36, 137, 138, 139, 141, 143, 146, 147, 149, 152, 153, 155, 156, 161], "frontend": [33, 137, 143, 155, 156, 158, 160, 1557], "refer": [33, 34, 35, 36, 82, 83, 84, 85, 109, 110, 131, 132, 133, 134, 138, 143, 149, 150, 153, 154, 155, 176, 228, 249, 250, 435, 551, 554, 616, 619, 1042, 1043, 1046, 1047, 1050, 1159, 1272, 1276, 1282, 1286, 1501, 1532, 1535, 1541, 1545, 1546, 1547, 1550, 1552, 1555, 1557], "realpython": 33, "pyn": 33, "kind": [33, 153, 155, 157, 159, 176, 310, 346, 349, 357, 360, 362, 435, 681, 684, 1501, 1502, 1505, 1507, 1510, 1528, 1531, 1536, 1540], "stack": [33, 38, 41, 42, 66, 67, 70, 71, 91, 92, 115, 116, 119, 120, 159, 228, 292, 296, 297, 301, 849, 989, 1032, 1159, 1170, 1173, 1176, 1179, 1181, 1184, 1185, 1187, 1193, 1196, 1198, 1201, 1208, 1210, 1212, 1215, 1217, 1220, 1227, 1230, 1232, 1235, 1247, 1251, 1252, 1256, 1262, 1266, 1303, 1388, 1389, 1398, 1399, 1558], "overflow": [33, 143, 435, 451, 454, 1501, 1536, 1540], "platform": [33, 35], "sort": [33, 81, 88, 91, 92, 93, 94, 130, 156, 1159, 1181, 1184, 1247, 1251, 1252, 1256, 1486, 1489, 1491, 1494], "inform": [33, 34, 35, 36, 60, 61, 109, 110, 138, 141, 147, 154, 155, 310, 346, 349, 357, 360, 849, 855, 1042, 1075, 1079], "pilot": 33, "bit": [33, 34, 35, 141, 143, 145, 150, 159, 161, 310, 345, 346, 349, 357, 360, 435, 486, 489, 491, 494, 501, 504, 1501, 1502, 1505, 1507, 1510, 1528, 1531, 1536, 1540], "thei": [33, 34, 35, 36, 66, 67, 74, 75, 91, 92, 115, 116, 123, 124, 137, 138, 140, 141, 142, 143, 144, 145, 150, 151, 152, 153, 155, 156, 157, 161, 162, 163, 164, 176, 310, 384, 1159, 1267, 1271, 1384, 1385, 1386, 1411, 1412, 1415, 1558], "done": [33, 34, 35, 36, 138, 145, 148, 153, 155, 162], "faster": [33, 225, 226, 1159, 1247, 1251, 1557], "head": [33, 35, 1093, 1149, 1152, 1558], "stuck": [33, 34], "spell": 33, "check": [33, 34, 35, 36, 43, 44, 45, 46, 47, 50, 51, 58, 59, 60, 61, 91, 92, 99, 100, 107, 108, 109, 110, 138, 141, 145, 147, 151, 153, 156, 158, 159, 161, 162, 163, 310, 333, 334, 351, 352, 354, 355, 363, 369, 372, 379, 382, 400, 401, 413, 414, 420, 434, 849, 860, 863, 896, 898, 904, 905, 922, 931, 934, 953, 956, 958, 961, 963, 966, 968, 971, 992, 1008, 1012, 1033, 1036, 1040, 1042, 1057, 1059, 1159, 1181, 1184, 1185, 1187, 1388, 1389, 1398, 1399, 1400, 1558], "though": [33, 34, 36, 143, 146, 150, 153, 157, 162, 176], "sound": [33, 158], "odd": [33, 138, 435, 681, 684], "peopl": [33, 35, 36, 137], "action": [33, 145, 155], "integr": [33, 35, 50, 51, 99, 100, 137, 310, 313, 316], "keep": [33, 34, 35, 36, 70, 71, 91, 92, 119, 120, 138, 141, 142, 155, 156, 157, 162, 164, 1303, 1374, 1378], "explain": [34, 35, 36, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 152, 153, 155, 156, 157, 159, 160, 161, 162, 163, 164, 1558, 1564], "frequent": [34, 36], "wherebi": [34, 1388, 1400], "outlin": [34, 35, 36, 137, 141, 143, 146, 150, 152, 153, 155], "broad": 34, "individu": [34, 36, 138, 142, 150, 152, 153], "sub": [34, 36, 70, 71, 88, 91, 92, 93, 94, 95, 96, 103, 104, 107, 108, 119, 120, 137, 141, 147, 153, 154, 155, 161, 162, 163, 1159, 1176, 1179, 1303, 1349, 1352, 1384, 1385, 1386, 1387, 1558], "distribut": [34, 68, 69, 74, 75, 117, 118, 123, 124, 144, 176, 1093, 1132, 1135, 1287, 1288, 1291, 1293, 1296, 1298, 1301, 1411, 1412, 1415, 1417, 1420, 1422, 1425, 1427, 1430, 1433, 1436], "across": [34, 76, 77, 91, 92, 107, 108, 125, 126, 138, 141, 143, 145, 147, 149, 150, 153, 155, 157, 401, 423, 424, 849, 857, 859, 1388, 1394, 1438, 1444, 1447], "todo": [34, 143, 153], "detail": [34, 36, 138, 140, 141, 142, 149, 150, 151, 153, 154, 155, 156, 161, 162, 163, 228, 252, 255, 1464, 1465, 1469, 1470, 1474, 1475, 1479, 1480, 1484], "select": [34, 35, 36, 82, 83, 131, 132, 152, 155, 159, 161, 164, 176, 1501, 1502, 1505, 1507, 1510], "alloc": [34, 36, 48, 49, 50, 51, 99, 100, 176, 228, 292, 296, 297, 301, 310, 313, 316], "describ": [34, 36, 142, 155, 159, 164, 1501, 1512, 1515, 1528, 1531, 1536, 1540], "explan": [34, 36, 141, 146, 149, 153, 161], "instead": [34, 35, 36, 54, 55, 103, 104, 138, 141, 143, 145, 146, 147, 149, 150, 151, 152, 153, 154, 155, 157, 159, 161, 162, 176, 435, 696, 699], "focu": 34, "alwai": [34, 36, 50, 51, 60, 61, 70, 71, 99, 100, 109, 110, 119, 120, 139, 140, 141, 143, 146, 148, 149, 150, 152, 153, 154, 155, 156, 157, 159, 176, 310, 313, 316, 435, 451, 454, 661, 664, 849, 947, 950, 1042, 1057, 1059, 1303, 1339, 1342], "NOT": [34, 435, 636, 639], "pypi": [34, 35, 176], "instruct": [34, 35, 138], "static": [34, 89, 90, 91, 92, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 113, 114, 115, 116, 117, 118, 119, 120, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 145, 146, 150, 151, 153, 176, 225, 226, 228, 240, 242, 435, 551, 554, 641, 644], "method": [34, 36, 38, 39, 40, 41, 42, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 138, 139, 143, 145, 146, 148, 149, 150, 151, 155, 156, 159, 160, 163, 164, 176, 189, 210, 213, 215, 218, 220, 223, 228, 240, 242, 252, 255, 305, 309, 310, 313, 316, 346, 349, 435, 456, 459, 471, 474, 511, 514, 516, 519, 521, 524, 531, 534, 536, 539, 551, 554, 556, 559, 571, 574, 576, 579, 581, 584, 586, 589, 591, 594, 621, 624, 636, 639, 641, 644, 666, 669, 671, 674, 721, 724, 726, 729, 731, 735, 849, 850, 853, 857, 859, 876, 978, 981, 983, 986, 1020, 1024, 1042, 1062, 1065, 1066, 1069, 1074, 1080, 1092, 1093, 1119, 1122, 1154, 1157, 1159, 1252, 1256, 1287, 1288, 1291, 1303, 1324, 1327, 1344, 1347, 1364, 1368, 1388, 1389, 1399, 1400, 1401, 1438, 1439, 1442, 1444, 1447, 1454, 1457, 1459, 1463, 1464, 1465, 1469, 1501, 1512, 1515, 1516, 1519, 1520, 1523, 1528, 1531, 1536, 1540, 1541, 1545, 1546, 1547, 1550, 1552, 1555, 1558], "revers": [34, 38, 41, 42, 56, 57, 58, 59, 66, 67, 82, 83, 88, 93, 94, 105, 106, 115, 116, 131, 132, 141, 143, 145, 146, 153, 157, 164, 176, 849, 878, 880, 1159, 1267, 1271, 1303, 1324, 1327, 1501, 1502, 1505, 1507, 1510], "familiar": [34, 35], "yourself": [34, 36, 153, 155, 157, 175], "hypothesi": [34, 36, 138, 151], "fail": [34, 35, 36, 138, 142, 143, 145, 148, 153], "els": [34, 58, 59, 74, 75, 123, 124, 140, 143, 147, 150, 152, 153, 154, 155, 156, 157, 159, 161, 163, 164, 176, 310, 340, 849, 860, 863, 878, 880, 896, 898, 1388, 1398, 1411, 1417, 1420, 1422, 1425, 1427, 1430], "cover": [34, 138, 145, 146, 150, 151, 155, 157, 158], "lambda": [34, 155, 159, 162, 849, 878, 880, 1042, 1052, 1061, 1081, 1388, 1396], "direct": [34, 153, 154, 157, 163, 164, 175, 1485, 1496, 1499], "bind": [34, 141], "defin": [34, 35, 48, 49, 58, 59, 66, 67, 97, 98, 107, 108, 115, 116, 142, 143, 146, 149, 153, 154, 155, 156, 161, 163, 176, 228, 279, 282, 435, 661, 664, 696, 699, 849, 937, 940, 942, 945, 1159, 1165, 1168, 1181, 1184, 1185, 1187, 1242, 1245, 1501, 1516, 1519, 1520, 1523, 1524, 1527, 1532, 1535, 1557], "def": [34, 35, 141, 143, 144, 145, 147, 148, 149, 150, 152, 153, 154, 155, 156, 157, 159, 161, 162, 163, 164, 756, 849, 865, 1388, 1394, 1558], "special": [34, 38, 41, 42, 82, 83, 88, 93, 94, 115, 116, 138, 139, 145, 146, 147, 149, 152, 156, 435, 436, 439, 441, 444, 446, 449, 451, 454, 456, 459, 461, 464, 466, 469, 471, 474, 506, 509, 511, 514, 516, 519, 521, 524, 546, 549, 551, 554, 556, 559, 606, 609, 611, 614, 616, 619, 621, 624, 626, 629, 636, 639, 661, 664, 681, 684, 696, 699, 701, 704, 706, 709, 711, 714, 716, 719, 721, 724, 736, 740, 741, 745, 746, 750, 1501, 1516, 1519, 1520, 1523, 1524, 1527, 1532, 1535, 1536, 1540, 1541, 1545], "sure": [34, 35, 36, 138, 142, 153, 154, 157], "aforement": 34, "correct": [34, 36, 82, 83, 131, 132, 137, 141, 143, 144, 148, 149, 150, 154, 155, 310, 395, 1303, 1304, 1307, 1501, 1532, 1535, 1541, 1545, 1558], "categori": [34, 138, 139, 141, 143, 153, 156, 158, 1558], "parent": [34, 161, 1042, 1074, 1092], "arraywithelementwis": [34, 38, 41, 42, 54, 139, 161], "containerwithmanipul": [34, 88, 93, 94, 119], "hint": [34, 54, 55, 103, 104, 139, 146, 149, 150, 152, 153, 156, 228, 230, 231, 233, 235, 243, 244, 247, 249, 250, 252, 255, 257, 258, 261, 263, 264, 266, 267, 269, 272, 284, 285, 287, 290, 292, 296, 297, 301, 302, 304, 305, 309, 310, 328, 331, 364, 367, 374, 377, 435, 436, 439, 441, 444, 446, 449, 451, 454, 456, 459, 461, 464, 466, 469, 471, 474, 476, 479, 481, 484, 486, 489, 491, 494, 501, 504, 506, 509, 511, 514, 516, 519, 521, 524, 531, 534, 536, 539, 551, 554, 556, 559, 561, 564, 566, 569, 571, 574, 576, 579, 581, 584, 586, 589, 591, 594, 601, 604, 611, 614, 616, 619, 621, 624, 626, 629, 631, 634, 636, 639, 641, 644, 646, 649, 661, 664, 666, 669, 671, 674, 676, 679, 681, 684, 696, 699, 701, 704, 706, 709, 711, 714, 716, 719, 721, 724, 726, 729, 731, 735, 736, 740, 741, 745, 746, 750, 849, 906, 909, 923, 926, 931, 934, 937, 940, 1025, 1029, 1042, 1057, 1059, 1075, 1079, 1082, 1086, 1087, 1091, 1093, 1105, 1108, 1127, 1130, 1139, 1142, 1154, 1157, 1159, 1160, 1163, 1165, 1168, 1170, 1173, 1176, 1179, 1181, 1184, 1185, 1187, 1193, 1196, 1198, 1201, 1203, 1206, 1208, 1210, 1212, 1215, 1217, 1220, 1222, 1225, 1227, 1230, 1232, 1235, 1237, 1240, 1242, 1245, 1247, 1251, 1252, 1256, 1257, 1261, 1272, 1276, 1277, 1281, 1282, 1286, 1303, 1304, 1307, 1309, 1312, 1314, 1317, 1319, 1322, 1324, 1327, 1329, 1332, 1334, 1337, 1339, 1342, 1344, 1347, 1349, 1352, 1354, 1357, 1359, 1362, 1364, 1368, 1369, 1373, 1374, 1378, 1379, 1383, 1406, 1407, 1410, 1438, 1439, 1442, 1444, 1447, 1454, 1457, 1459, 1463, 1464, 1465, 1469, 1470, 1474, 1475, 1479, 1480, 1484, 1485, 1486, 1489, 1496, 1499, 1501, 1516, 1519, 1520, 1523, 1524, 1527, 1528, 1531, 1532, 1535, 1536, 1540, 1541, 1545, 1546, 1547, 1550, 1552, 1555], "add": [34, 35, 36, 38, 41, 42, 54, 55, 72, 73, 86, 87, 88, 91, 92, 93, 94, 103, 104, 121, 122, 135, 136, 137, 138, 139, 140, 141, 143, 146, 149, 150, 152, 153, 155, 156, 157, 159, 161, 176, 435, 849, 974, 1030, 1042, 1074, 1092, 1406, 1407, 1410, 1558, 1564], "thorough": [34, 146, 149, 155], "ensur": [34, 35, 36, 58, 59, 139, 143, 145, 147, 148, 149, 151, 152, 153, 154, 155, 156, 849, 947, 950], "produc": [34, 105, 106, 155, 156, 1093, 1154, 1157], "comment": [34, 35, 36, 138, 143, 148, 153], "add_reformatting_checklist_": 34, "category_nam": [34, 143, 144, 146, 149, 150], "pr": [34, 36, 138, 153], "belong": [34, 91, 92, 138, 163], "shown": [34, 36, 86, 87, 91, 92, 135, 136, 142, 145, 148, 149, 153, 154, 155, 156, 159, 161, 176, 435, 591, 594], "trigger": [34, 142], "autom": [34, 155, 1557, 1558], "bot": 34, "proper": 34, "markdown": 34, "text": [34, 36, 145, 146], "might": [34, 35, 36, 58, 59, 143, 145, 148, 151, 152, 153, 155, 156, 157, 159, 161, 162, 310, 385, 849, 878, 880, 1557], "moment": [34, 60, 61, 109, 110, 140, 176, 1042, 1043, 1046, 1047, 1050, 1062, 1065], "patient": [34, 35], "modifi": [34, 35, 36, 91, 92, 138, 140, 143, 144, 146, 148, 150, 156, 159], "item": [34, 43, 47, 58, 59, 86, 87, 91, 92, 107, 108, 143, 159, 161, 162, 164, 310, 335, 401, 406, 849, 876, 906, 909, 929, 998, 1001, 1003, 1006, 1042, 1080, 1388, 1393, 1394, 1395, 1396, 1400, 1404, 1405, 1558], "symbol": [34, 35], "emoji": 34, "within": [34, 36, 43, 46, 47, 153, 154, 155, 163, 176, 228, 230, 231, 1411, 1427, 1430], "legend": 34, "mark": [34, 36, 155], "review": [34, 36, 145, 153, 156], "checkbox": [34, 35], "proce": [34, 35], "elabor": 34, "struggl": 34, "assigne": 34, "author": [34, 36, 1558], "later": [34, 91, 92, 155, 849, 865], "status": 34, "manual": [34, 35, 36, 142, 153, 155, 163, 1388, 1389, 1398, 1399], "refrain": 34, "transpil": [34, 153, 158, 160, 1557, 1558, 1564], "locat": [34, 36, 140, 144, 153, 154, 155, 156, 228, 279, 282, 1411, 1412, 1415, 1485, 1491, 1494], "subsect": [34, 36, 138, 142], "verifi": [34, 143, 144, 153, 155, 156, 1558, 1564], "miss": [34, 35, 139, 141, 145, 148, 155], "simpler": [34, 36, 153], "titl": [34, 36, 153, 1558], "label": [34, 36, 68, 69, 117, 118, 142, 153, 158, 159, 160, 164, 1287, 1288, 1291, 1293, 1296, 1298, 1301], "suggest": [34, 35, 36, 153, 155, 156], "simpli": [34, 36, 38, 39, 40, 41, 42, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 89, 90, 91, 92, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 139, 140, 141, 143, 144, 145, 146, 149, 150, 152, 153, 154, 155, 157, 159, 163, 164, 176, 435, 551, 554, 616, 619, 1557], "leav": [34, 43, 46, 47, 88, 93, 94, 95, 96, 105, 106, 107, 108, 119, 120, 131, 132, 141, 143, 145, 146, 149, 150, 152, 155, 162, 163, 1303, 1359, 1362, 1388, 1389, 1390, 1398, 1399, 1400], "assess": [34, 157], "appropri": [34, 36, 76, 77, 86, 87, 125, 126, 135, 136, 151, 155, 435, 451, 454, 661, 664, 1438, 1439, 1442], "wait": [34, 36, 88, 91, 92, 93, 94, 153, 849, 993], "composit": [34, 137, 139, 140, 141, 143, 152, 154, 155, 157, 159, 163, 164, 176, 1557], "temporari": [34, 143, 849, 930, 995], "merg": [34, 36, 138, 153], "close": [34, 36, 146, 153, 155, 157, 435, 551, 554, 616, 619, 701, 704, 1159, 1247, 1251, 1303, 1319, 1322], "normal": [34, 72, 73, 74, 75, 121, 122, 123, 124, 162, 1303, 1309, 1312, 1359, 1362, 1406, 1407, 1410, 1411, 1422, 1425], "altern": [34, 152, 153, 162], "composition": [34, 152, 153], "choos": [34, 35, 36, 76, 77, 101, 102, 160, 164, 401, 426, 430, 435, 636, 639, 641, 644, 1438, 1459, 1463, 1464, 1465, 1469, 1470, 1474, 1475, 1479, 1480, 1484, 1501, 1516, 1519, 1520, 1523, 1524, 1527, 1532, 1535], "decid": [34, 35, 91, 92, 143, 157, 1388, 1399], "addit": [34, 35, 36, 58, 59, 72, 73, 101, 102, 107, 108, 121, 122, 141, 143, 145, 146, 153, 155, 156, 157, 161, 162, 164, 401, 426, 430, 435, 451, 454, 701, 704, 849, 881, 884, 886, 889, 891, 894, 1041, 1406, 1407, 1410], "potenti": [34, 35, 36, 143, 153, 158, 435, 551, 554, 616, 619], "pend": 34, "show": [34, 35, 36, 91, 92, 142, 145, 152, 153, 155, 175, 176, 849, 989, 1032, 1558], "helpfulli": [34, 157], "prevent": [34, 36, 60, 61, 109, 110, 143, 148, 152, 153, 156, 157, 849, 865, 1042, 1043, 1046, 1047, 1050, 1062, 1065, 1501, 1536, 1540], "problemat": [34, 35], "unimpl": 34, "final": [34, 36, 58, 59, 107, 108, 139, 143, 145, 146, 148, 150, 152, 153, 157, 158, 162, 228, 263, 264, 266, 267, 849, 899, 902], "issue_link": 34, "chosen": [34, 228, 230, 231, 435, 471, 474, 1438, 1459, 1463], "correctli": [34, 35, 36, 66, 67, 76, 77, 115, 116, 125, 126, 141, 143, 145, 147, 148, 149, 152, 154, 155, 157, 163, 176, 1159, 1203, 1206, 1438, 1439, 1442], "alias": [34, 153], "detect": [34, 35, 91, 92, 140, 141, 148, 155, 162, 163, 1388, 1389, 1399], "alias_nam": 34, "function_nam": 34, "notic": [34, 157], "alia": [34, 227], "alreadi": [34, 35, 36, 91, 92, 140, 141, 143, 149, 153, 157, 176, 435, 511, 514, 556, 559, 661, 664, 701, 704, 746, 750, 1159, 1188, 1191, 1222, 1225, 1558], "push": [34, 36, 138, 148], "liner": 34, "meanwhil": 34, "reselect": 34, "too": [34, 35, 36, 138, 142, 148, 176, 435, 451, 454, 661, 664], "placement": 34, "categoris": [34, 138, 153], "faithfulli": 34, "descript": [34, 54, 55, 103, 104, 115, 116, 146, 228, 230, 231, 233, 235, 243, 244, 247, 249, 250, 252, 255, 257, 258, 261, 263, 264, 266, 267, 269, 272, 284, 285, 287, 290, 292, 296, 297, 301, 302, 304, 305, 309, 310, 328, 331, 364, 367, 374, 377, 435, 436, 439, 441, 444, 446, 449, 451, 454, 456, 459, 461, 464, 466, 469, 471, 474, 476, 479, 481, 484, 486, 489, 491, 494, 501, 504, 506, 509, 511, 514, 516, 519, 521, 524, 531, 534, 536, 539, 551, 554, 556, 559, 561, 564, 566, 569, 571, 574, 576, 579, 581, 584, 586, 589, 591, 594, 601, 604, 611, 614, 616, 619, 621, 624, 626, 629, 631, 634, 636, 639, 641, 644, 646, 649, 661, 664, 666, 669, 671, 674, 676, 679, 681, 684, 696, 699, 701, 704, 706, 709, 711, 714, 716, 719, 721, 724, 726, 729, 731, 735, 736, 740, 741, 745, 746, 750, 849, 906, 909, 923, 926, 931, 934, 937, 940, 1025, 1029, 1042, 1057, 1059, 1075, 1079, 1082, 1086, 1087, 1091, 1093, 1105, 1108, 1127, 1130, 1139, 1142, 1154, 1157, 1159, 1160, 1163, 1165, 1168, 1170, 1173, 1176, 1179, 1181, 1184, 1185, 1187, 1193, 1196, 1198, 1201, 1203, 1206, 1208, 1210, 1212, 1215, 1217, 1220, 1222, 1225, 1227, 1230, 1232, 1235, 1237, 1240, 1242, 1245, 1247, 1251, 1252, 1256, 1257, 1261, 1272, 1276, 1277, 1281, 1282, 1286, 1303, 1304, 1307, 1309, 1312, 1314, 1317, 1319, 1322, 1324, 1327, 1329, 1332, 1334, 1337, 1339, 1342, 1344, 1347, 1349, 1352, 1354, 1357, 1359, 1362, 1364, 1368, 1369, 1373, 1374, 1378, 1379, 1383, 1406, 1407, 1410, 1438, 1439, 1442, 1444, 1447, 1454, 1457, 1459, 1463, 1464, 1465, 1469, 1470, 1474, 1475, 1479, 1480, 1484, 1485, 1486, 1489, 1496, 1499, 1501, 1516, 1519, 1520, 1523, 1524, 1527, 1528, 1531, 1532, 1535, 1536, 1540, 1541, 1545, 1546, 1547, 1550, 1552, 1555], "inner": [34, 66, 67, 97, 98, 115, 116, 152, 228, 279, 282, 1159, 1181, 1184, 1198, 1201, 1384, 1385, 1386, 1387], "fall": [34, 36, 143, 158, 1558], "under": [34, 35, 36, 137, 138, 141, 145, 146, 150, 153, 155, 157, 158, 159, 162, 164, 176], "linalg": [34, 152, 1558], "match": [34, 50, 51, 91, 92, 99, 100, 141, 145, 310, 313, 316, 435, 696, 699, 849, 974], "creation_routin": [34, 154], "fft": 34, "indexing_routin": 34, "logic": [34, 84, 85, 133, 134, 139, 143, 144, 147, 151, 153, 155, 161, 401, 417, 435, 631, 634, 636, 639, 641, 644, 1546, 1547, 1550, 1552, 1555, 1558], "ma": 34, "manipulation_routin": 34, "mathematical_funct": [34, 153], "matrix": [34, 38, 41, 42, 58, 59, 64, 65, 66, 67, 107, 108, 113, 114, 115, 116, 153, 228, 269, 272, 292, 296, 297, 301, 849, 850, 853, 866, 869, 1093, 1139, 1142, 1159, 1160, 1163, 1170, 1173, 1176, 1179, 1181, 1184, 1185, 1187, 1193, 1196, 1198, 1201, 1203, 1206, 1208, 1210, 1212, 1215, 1217, 1220, 1227, 1230, 1232, 1235, 1237, 1240, 1242, 1245, 1247, 1251, 1252, 1256, 1262, 1266, 1267, 1271, 1282, 1286], "random": [34, 75, 91, 92, 124, 144, 155, 156, 164, 175, 1412, 1415, 1417, 1420, 1422, 1425, 1427, 1430, 1432, 1433, 1436, 1558], "sorting_searching_count": 34, "statist": [34, 83, 132, 135, 136, 143, 153, 155, 156, 1502, 1505, 1507, 1510, 1512, 1515, 1516, 1519, 1520, 1523, 1524, 1527, 1528, 1531, 1532, 1535, 1536, 1540, 1541, 1545], "ufunc": 34, "hierarchi": [34, 91, 92, 162], "decomposit": [34, 1159, 1160, 1163, 1232, 1235, 1247, 1251], "matrix_and_vector_product": 34, "matrix_eigenvalu": 34, "norms_and_other_numb": 34, "solving_equations_and_inverting_matric": 34, "product": [34, 54, 55, 66, 67, 82, 83, 103, 104, 115, 116, 131, 132, 159, 435, 661, 664, 1093, 1149, 1152, 1154, 1157, 1159, 1165, 1168, 1188, 1191, 1198, 1201, 1222, 1225, 1272, 1276, 1501, 1502, 1505, 1507, 1510, 1512, 1515, 1528, 1531], "seem": [34, 35, 157, 163, 164, 176], "func": [34, 91, 92, 145, 225, 226, 401, 425, 849, 865, 1041, 1042, 1051, 1052, 1061, 1081, 1388, 1401], "gleam": 34, "yet": [34, 35, 176], "uncom": 34, "test_numpy_inn": 34, "mirror": 34, "correspond": [34, 36, 50, 51, 54, 55, 56, 57, 58, 59, 70, 71, 82, 83, 88, 91, 92, 93, 94, 99, 100, 103, 104, 105, 106, 119, 120, 131, 132, 139, 140, 141, 142, 143, 145, 146, 149, 150, 151, 153, 155, 157, 159, 310, 318, 321, 435, 471, 474, 681, 684, 849, 1041, 1159, 1165, 1168, 1181, 1184, 1203, 1206, 1242, 1245, 1303, 1344, 1347, 1411, 1412, 1415, 1438, 1439, 1442, 1444, 1447, 1464, 1465, 1469, 1470, 1474, 1475, 1479, 1480, 1484, 1501, 1502, 1505, 1507, 1510, 1528, 1531, 1532, 1535, 1536, 1540, 1541, 1545], "ivy_test": [34, 35, 36, 138, 142, 154], "test_ivi": [34, 35, 36, 142, 154, 155], "test_frontend": [34, 154], "unsur": [34, 155], "put": [34, 155, 176], "explor": [34, 35, 36, 157, 160, 164, 175], "outer": [34, 66, 67, 115, 116, 1159, 1384, 1385, 1386, 1387], "confirm": 34, "ve": [34, 36, 74, 75, 123, 124, 157, 158, 161, 1411, 1412, 1415, 1557, 1558], "empti": [34, 35, 58, 59, 91, 92, 107, 108, 139, 143, 144, 228, 230, 231, 849, 866, 869, 983, 986, 1042, 1074, 1080, 1092, 1501, 1536, 1540, 1546, 1547, 1550, 1552, 1555], "along": [34, 56, 57, 58, 59, 66, 67, 68, 69, 70, 71, 74, 75, 76, 77, 80, 81, 82, 83, 84, 85, 89, 90, 91, 92, 105, 106, 107, 108, 115, 116, 117, 118, 119, 120, 123, 124, 125, 126, 129, 130, 131, 132, 133, 134, 145, 152, 156, 157, 159, 228, 263, 264, 266, 267, 401, 425, 849, 906, 909, 1159, 1262, 1266, 1272, 1276, 1277, 1281, 1287, 1293, 1296, 1298, 1301, 1303, 1309, 1312, 1324, 1327, 1334, 1337, 1344, 1347, 1349, 1352, 1359, 1362, 1369, 1373, 1374, 1378, 1384, 1385, 1386, 1387, 1411, 1433, 1436, 1438, 1439, 1442, 1444, 1447, 1485, 1486, 1489, 1496, 1499, 1501, 1502, 1505, 1507, 1510, 1512, 1515, 1516, 1519, 1520, 1523, 1524, 1527, 1528, 1531, 1532, 1535, 1536, 1540, 1541, 1545, 1546, 1547, 1550, 1552, 1555], "backend_nam": [34, 140, 143, 144, 146, 149, 150, 151], "sometim": [34, 35, 36, 143, 153, 155, 156, 157], "behav": [34, 138, 147, 152, 154, 161], "helper": [34, 142, 143, 147, 162, 310, 333, 1557], "recreat": 34, "defer": [34, 139, 141, 143, 144, 150, 151, 152, 153, 155], "clearer": [34, 147, 162], "mind": [34, 139, 141, 155], "posit": [34, 36, 43, 44, 45, 54, 55, 56, 57, 58, 59, 66, 67, 70, 71, 103, 104, 105, 106, 107, 108, 115, 116, 119, 120, 138, 151, 153, 154, 155, 156, 162, 175, 227, 228, 249, 250, 310, 346, 349, 435, 436, 439, 576, 579, 581, 584, 661, 664, 691, 694, 696, 699, 849, 865, 899, 902, 1041, 1159, 1160, 1163, 1303, 1319, 1322, 1344, 1347, 1411, 1432, 1438, 1454, 1457, 1546, 1547, 1550, 1552, 1555], "keyword": [34, 43, 44, 45, 88, 91, 92, 93, 94, 143, 144, 151, 152, 153, 154, 155, 156, 162, 228, 269, 272, 849, 856, 865, 974, 1030, 1388, 1394, 1501, 1536, 1540], "strategi": [34, 151, 154], "draw": [34, 74, 75, 123, 124, 154, 155, 1411, 1412, 1415, 1422, 1425, 1427, 1430], "realli": [35, 141, 176], "page": [35, 36, 142, 160, 161, 164, 174, 1558, 1564], "prefer": [35, 141, 151, 153, 157], "gh": 35, "your_fold": 35, "cours": [35, 36, 138, 145, 156, 157, 162, 176], "whatev": [35, 141, 176], "elig": 35, "student": 35, "licenc": 35, "remind": 35, "pace": 35, "align": [35, 36, 91, 92, 159, 161, 1159, 1175, 1557, 1558, 1564], "stabl": [35, 58, 59, 80, 81, 107, 108, 129, 130, 140, 143, 159, 176, 849, 920, 921, 990, 991, 998, 1001, 1003, 1006, 1485, 1486, 1489, 1496, 1499], "mayb": [35, 43, 46, 47, 159, 161], "person": [35, 36], "experi": [35, 155, 160, 162, 176], "avoid": [35, 36, 140, 141, 143, 148, 151, 153, 155, 156, 435, 551, 554, 616, 619, 849, 865], "abil": [35, 157, 160, 176], "certain": [35, 36, 91, 92, 138, 143, 155, 157, 176, 228, 230, 231, 263, 264, 266, 267], "perhap": [35, 161, 162, 163, 176], "track": [35, 36, 1388, 1400], "click": [35, 36, 142, 146, 160, 1558], "icon": [35, 36], "side": [35, 36, 80, 81, 129, 130, 1485, 1491, 1494], "left": [35, 36, 56, 57, 66, 67, 76, 77, 80, 81, 105, 106, 115, 116, 125, 126, 129, 130, 143, 145, 435, 491, 494, 1159, 1181, 1184, 1203, 1206, 1247, 1251, 1267, 1271, 1438, 1439, 1442, 1485, 1491, 1494], "panel": 35, "drop": [35, 176], "down": [35, 155, 1557], "virtualenv": 35, "o": [35, 137, 159, 849, 974], "tick": [35, 36, 142], "abl": [35, 36, 91, 92, 138, 143, 150, 152, 153, 157, 164], "test_array_api": [35, 36, 138, 155], "r": [35, 36, 91, 92, 137, 1042, 1051, 1159, 1232, 1235, 1303, 1374, 1378], "txt": [35, 138, 156], "visual": [35, 153, 176], "jetbrain": 35, "mitig": 35, "conflict": [35, 36, 153, 162], "particular": [35, 36, 138, 140, 143, 145, 151, 152, 153, 154, 155, 156, 157, 435, 436, 439, 636, 639], "system": [35, 36, 140, 143, 176, 1159, 1242, 1245], "wsl": 35, "powershel": 35, "admin": 35, "visit": [35, 36, 154], "profession": 35, "deploy": 35, "top": [35, 36, 70, 71, 143, 153, 155, 162, 163], "press": [35, 36, 162, 1558], "ok": 35, "debug": [35, 36, 141, 142, 155, 157, 162], "dialog": 35, "invalid": [35, 84, 85, 133, 134, 143, 148, 1159, 1272, 1276, 1303, 1319, 1322, 1546, 1547, 1550, 1552, 1555], "caus": [35, 36, 138, 140, 141, 142, 145, 152, 155, 176], "earlier": [35, 36], "necessari": [35, 36, 70, 71, 119, 120, 140, 141, 145, 151, 152, 153, 155, 157, 1303, 1339, 1342], "virtualis": 35, "sudo": 35, "apt": 35, "ca": 35, "certif": 35, "curl": 35, "gnupg": 35, "lsb": 35, "mkdir": 35, "p": [35, 36, 58, 59, 107, 108, 115, 116, 137, 228, 269, 272, 849, 866, 869, 871, 874, 1093, 1132, 1135, 1159, 1203, 1206, 1277, 1281, 1388, 1396], "keyr": 35, "fssl": 35, "download": [35, 155], "gpg": 35, "dearmor": 35, "echo": 35, "deb": 35, "arch": 35, "dpkg": 35, "architectur": [35, 164, 176], "lsb_releas": 35, "tee": 35, "dev": [35, 52, 53, 91, 92, 101, 102, 144, 150, 161, 163, 401, 415, 421], "null": 35, "ce": 35, "cli": 35, "containerd": 35, "io": 35, "compos": [35, 141, 155, 176], "plugin": 35, "systemctl": 35, "permiss": 35, "post": [35, 72, 73, 121, 122, 164, 1406, 1407, 1410, 1558, 1564], "coupl": [35, 139, 161, 163], "unit": [35, 89, 90, 138, 143, 153, 154, 155, 176, 189, 190, 193, 195, 198, 205, 208], "test_ab": [35, 155], "context": [35, 36, 64, 65, 113, 114, 145, 401, 849, 975, 1093, 1149, 1152], "menu": 35, "editor": 35, "green": [35, 36, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 1606, 1607], "appear": [35, 36, 157, 849, 1041], "pytest": [35, 36, 138, 155], "keyboard": 35, "shortcut": 35, "displai": [35, 141, 155, 162], "screenshot": 35, "ctrl": [35, 36], "shift": [35, 36, 70, 71, 88, 93, 94, 97, 98, 119, 120, 145, 149, 435, 491, 494, 501, 504, 1303, 1344, 1347], "bottom": 35, "screen": [35, 91, 92, 162], "elsewher": [35, 228, 249, 250, 1438, 1459, 1463], "test_elementwis": 35, "tab": [35, 142, 162, 1558], "progress": [35, 36, 164, 1159, 1267, 1271], "bar": 35, "shell": [35, 36], "run_tests_cli": [35, 138], "run_ivy_core_test": 35, "run_ivy_nn_test": 35, "run_ivy_stateful_test": 35, "run_test": 35, "sh": [35, 36, 138], "test_depend": 35, "test_ivy_cor": 35, "test_ivy_nn": 35, "test_ivy_st": 35, "test_": [35, 138, 142, 154], "test_funct": [35, 36, 142, 154, 155], "test_cor": [35, 36, 142, 154], "wish": [35, 153], "ivy_cor": 35, "ivy_nn": 35, "ivy_st": 35, "dure": [35, 60, 61, 82, 83, 91, 92, 101, 102, 109, 110, 131, 132, 141, 143, 144, 147, 150, 151, 152, 153, 155, 157, 176, 225, 226, 401, 426, 430, 849, 1030, 1042, 1043, 1046, 1047, 1050, 1062, 1065, 1159, 1198, 1201, 1384, 1385, 1386, 1387, 1501, 1532, 1535, 1541, 1545], "simplest": [35, 145, 155, 157], "valu": [35, 36, 48, 49, 50, 51, 54, 55, 56, 57, 58, 59, 60, 61, 64, 65, 66, 67, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 88, 89, 90, 91, 92, 93, 94, 97, 98, 99, 100, 103, 104, 105, 106, 107, 108, 109, 110, 113, 114, 115, 116, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 138, 141, 143, 144, 145, 146, 148, 149, 150, 151, 152, 153, 154, 155, 157, 159, 161, 176, 189, 220, 223, 228, 230, 231, 249, 250, 257, 258, 261, 263, 264, 266, 267, 279, 282, 310, 313, 316, 335, 336, 337, 339, 362, 385, 401, 424, 425, 435, 436, 439, 441, 444, 451, 454, 456, 459, 466, 469, 511, 514, 536, 539, 541, 544, 556, 559, 561, 564, 566, 569, 571, 574, 591, 594, 596, 599, 601, 604, 651, 654, 656, 659, 661, 664, 671, 674, 676, 679, 681, 684, 691, 694, 701, 704, 741, 745, 746, 750, 849, 865, 866, 869, 871, 874, 876, 878, 880, 899, 902, 906, 909, 911, 914, 919, 928, 929, 936, 937, 940, 942, 945, 952, 978, 981, 983, 986, 990, 991, 993, 1008, 1012, 1034, 1036, 1040, 1041, 1042, 1043, 1046, 1047, 1050, 1051, 1062, 1065, 1074, 1080, 1092, 1093, 1095, 1098, 1100, 1103, 1105, 1108, 1110, 1112, 1114, 1117, 1119, 1122, 1124, 1125, 1127, 1130, 1144, 1147, 1149, 1152, 1154, 1157, 1159, 1203, 1206, 1208, 1210, 1212, 1215, 1227, 1230, 1232, 1235, 1237, 1240, 1242, 1245, 1247, 1251, 1252, 1256, 1277, 1281, 1303, 1304, 1307, 1309, 1312, 1314, 1317, 1334, 1337, 1339, 1342, 1379, 1383, 1384, 1385, 1386, 1388, 1392, 1393, 1394, 1395, 1396, 1401, 1404, 1405, 1406, 1407, 1410, 1411, 1412, 1415, 1417, 1420, 1422, 1425, 1427, 1430, 1432, 1438, 1439, 1442, 1444, 1447, 1459, 1463, 1464, 1465, 1469, 1470, 1474, 1475, 1479, 1480, 1484, 1485, 1486, 1489, 1491, 1494, 1496, 1499, 1501, 1502, 1505, 1507, 1510, 1516, 1519, 1520, 1523, 1524, 1527, 1528, 1531, 1532, 1535, 1536, 1540, 1541, 1545], "becaus": [35, 36, 139, 140, 143, 144, 146, 149, 150, 151, 152, 153, 154, 155, 157, 159, 163, 164, 176], "header": [35, 36], "summari": [35, 36, 91, 92, 155, 310, 335, 336, 337, 362, 392, 393, 849, 876, 929], "recommend": [35, 36, 140, 435, 636, 639, 641, 644, 696, 699, 1501, 1520, 1523, 1532, 1535], "advanc": 35, "q": [35, 36, 113, 114, 137, 176, 1093, 1154, 1157, 1159, 1181, 1184, 1232, 1235, 1388, 1396], "headach": 35, "arm": [35, 36], "m1": 35, "featur": [35, 36, 149, 153, 156, 157, 162, 176, 1558], "vm": 35, "azur": 35, "cloud": [35, 175], "mean": [35, 36, 58, 59, 64, 65, 74, 75, 82, 83, 91, 92, 107, 108, 113, 114, 123, 124, 131, 132, 135, 136, 137, 138, 140, 141, 143, 144, 145, 150, 152, 153, 155, 156, 157, 159, 161, 162, 163, 164, 175, 176, 401, 425, 849, 886, 889, 1042, 1052, 1061, 1081, 1093, 1119, 1122, 1127, 1130, 1384, 1385, 1386, 1387, 1388, 1394, 1411, 1417, 1420, 1422, 1425, 1464, 1465, 1469, 1501, 1557, 1558], "longer": [35, 143, 151, 152, 155], "worri": 35, "agnost": [35, 139, 149, 159, 161, 164, 176, 1558], "usual": [35, 138, 153, 155, 157], "studio": 35, "favourit": 35, "theme": 35, "unsupport": [35, 148, 153, 310, 354, 355, 401, 414, 849, 904, 905], "old": [35, 91, 92, 140, 152], "slow": 35, "ipad": 35, "long": [35, 36, 142, 143, 145, 159, 1093, 1144, 1147], "browser": 35, "cool": [35, 156], "sever": [35, 36, 156, 176, 1159, 1193, 1196], "paid": 35, "requisit": 35, "pane": [35, 36], "readi": 35, "begin": [35, 138, 154, 1388, 1389, 1399], "dropdown": 35, "master": [35, 36, 138, 156], "view": [35, 36, 56, 57, 142, 228, 252, 255], "built": [35, 36, 155, 160, 228, 230, 231, 1557], "box": 35, "upto": [35, 36], "15": [35, 54, 55, 56, 57, 74, 75, 82, 83, 88, 93, 94, 97, 98, 103, 104, 105, 106, 107, 108, 113, 114, 119, 120, 123, 124, 131, 132, 145, 155, 228, 258, 261, 310, 346, 349, 435, 451, 454, 481, 484, 501, 504, 531, 534, 626, 629, 696, 699, 701, 704, 849, 871, 874, 886, 889, 928, 937, 940, 942, 945, 993, 998, 1001, 1034, 1093, 1095, 1098, 1139, 1142, 1159, 1176, 1179, 1193, 1196, 1222, 1225, 1252, 1256, 1257, 1261, 1303, 1344, 1347, 1374, 1378, 1411, 1417, 1420, 1422, 1425, 1438, 1454, 1457, 1464, 1465, 1469, 1501, 1502, 1505, 1507, 1510, 1512, 1515], "minut": 35, "launch": 35, "12": [35, 54, 55, 56, 57, 58, 59, 74, 75, 82, 83, 103, 104, 105, 106, 107, 108, 113, 114, 115, 116, 119, 120, 121, 122, 123, 124, 131, 132, 140, 141, 143, 145, 155, 156, 435, 451, 454, 501, 504, 506, 509, 521, 524, 531, 534, 536, 539, 661, 664, 701, 704, 849, 871, 874, 886, 889, 921, 983, 986, 991, 998, 1001, 1093, 1139, 1142, 1159, 1176, 1179, 1203, 1206, 1222, 1225, 1257, 1261, 1262, 1266, 1303, 1324, 1327, 1344, 1347, 1374, 1378, 1406, 1407, 1410, 1411, 1417, 1420, 1422, 1425, 1438, 1459, 1463, 1464, 1465, 1469, 1501, 1502, 1505, 1512, 1515, 1536, 1540], "output": [35, 36, 48, 49, 50, 51, 54, 55, 56, 57, 58, 59, 60, 61, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 82, 83, 84, 85, 89, 90, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 129, 130, 131, 132, 133, 134, 137, 138, 139, 141, 143, 144, 145, 146, 149, 150, 151, 152, 153, 154, 155, 156, 159, 161, 163, 164, 176, 189, 190, 193, 195, 198, 200, 203, 205, 208, 210, 213, 215, 218, 220, 223, 228, 230, 231, 233, 235, 240, 242, 243, 244, 247, 249, 250, 252, 255, 257, 258, 261, 263, 264, 266, 267, 269, 272, 279, 282, 284, 285, 287, 290, 292, 296, 297, 301, 302, 304, 305, 309, 310, 313, 316, 323, 326, 385, 401, 425, 426, 430, 435, 436, 439, 441, 444, 446, 449, 451, 454, 456, 459, 461, 464, 466, 469, 471, 474, 476, 479, 481, 484, 486, 489, 491, 494, 496, 499, 501, 504, 506, 509, 511, 514, 516, 519, 521, 524, 526, 529, 531, 534, 536, 539, 541, 544, 546, 549, 551, 554, 556, 559, 561, 564, 566, 569, 571, 574, 576, 579, 581, 584, 586, 589, 591, 594, 596, 599, 606, 609, 611, 614, 616, 619, 621, 624, 626, 629, 631, 634, 636, 639, 641, 644, 646, 649, 651, 654, 656, 659, 661, 664, 666, 669, 671, 674, 676, 679, 681, 684, 686, 689, 691, 694, 696, 699, 701, 704, 706, 709, 711, 714, 716, 719, 721, 724, 726, 729, 731, 735, 736, 740, 741, 745, 746, 750, 751, 755, 849, 865, 866, 869, 871, 874, 881, 884, 886, 889, 891, 894, 911, 914, 978, 981, 983, 986, 988, 1031, 1041, 1042, 1043, 1046, 1047, 1050, 1051, 1052, 1053, 1056, 1061, 1062, 1065, 1066, 1069, 1070, 1073, 1075, 1079, 1081, 1093, 1095, 1098, 1100, 1103, 1105, 1108, 1110, 1112, 1114, 1117, 1119, 1122, 1124, 1125, 1127, 1130, 1132, 1135, 1139, 1142, 1144, 1147, 1149, 1152, 1154, 1157, 1159, 1160, 1163, 1165, 1168, 1170, 1173, 1176, 1179, 1185, 1187, 1188, 1191, 1193, 1196, 1198, 1201, 1203, 1206, 1212, 1215, 1217, 1220, 1222, 1225, 1227, 1230, 1242, 1245, 1252, 1256, 1257, 1261, 1262, 1266, 1267, 1271, 1272, 1276, 1277, 1281, 1282, 1286, 1287, 1288, 1291, 1293, 1296, 1298, 1301, 1303, 1304, 1307, 1309, 1312, 1314, 1317, 1319, 1322, 1324, 1327, 1329, 1332, 1334, 1337, 1339, 1342, 1344, 1347, 1354, 1357, 1359, 1362, 1364, 1368, 1369, 1373, 1379, 1383, 1388, 1401, 1406, 1407, 1410, 1411, 1412, 1415, 1417, 1420, 1422, 1425, 1427, 1430, 1433, 1436, 1438, 1439, 1442, 1449, 1452, 1454, 1457, 1459, 1463, 1485, 1486, 1489, 1491, 1494, 1496, 1499, 1501, 1502, 1505, 1507, 1510, 1512, 1515, 1516, 1519, 1520, 1523, 1524, 1527, 1528, 1531, 1532, 1535, 1536, 1540, 1541, 1545, 1546, 1547, 1550, 1552, 1555, 1557, 1558], "That": [35, 36, 155, 161, 162, 163, 435, 696, 699], "approach": [35, 36, 141, 143, 150, 151, 155, 157, 161, 162, 176], "colour": 35, "applic": [35, 143, 144, 151, 163, 1093, 1149, 1152, 1154, 1157, 1388, 1394, 1400], "chanc": 35, "troubleshoot": 35, "ever": 35, "64": [35, 54, 55, 64, 65, 88, 93, 94, 103, 104, 107, 108, 113, 114, 115, 116, 123, 124, 162, 163, 310, 345, 435, 501, 504, 721, 724, 726, 729, 849, 886, 889, 1042, 1062, 1065, 1093, 1119, 1122, 1127, 1130, 1159, 1222, 1225, 1252, 1256, 1501, 1512, 1515, 1558], "usr": 35, "flask": 35, "toolbar": [35, 36], "_array_modul": [35, 138], "array_api_test": [35, 36, 138], "01": [35, 60, 61, 109, 110, 123, 124, 140, 164, 435, 626, 629, 701, 704, 706, 709, 849, 998, 1001, 1042, 1043, 1046, 1062, 1065, 1159, 1252, 1256, 1411, 1422, 1425], "08": [35, 82, 83, 123, 124, 435, 461, 464, 551, 554, 1093, 1154, 1157], "2022": 35, "conftest": 35, "via": [35, 36, 138, 141, 143, 144, 152, 153, 156, 157, 159, 161, 162, 175, 1388, 1389, 1398, 1399], "refresh": 35, "nutshel": [35, 149], "hook": 35, "lint": 35, "accept": [35, 36, 43, 54, 55, 95, 103, 104, 139, 141, 144, 145, 146, 149, 150, 151, 152, 154, 155, 156, 161, 228, 230, 231, 233, 235, 243, 244, 247, 249, 250, 252, 255, 257, 258, 261, 263, 264, 266, 267, 269, 272, 284, 285, 287, 290, 292, 296, 297, 301, 302, 304, 305, 309, 310, 328, 331, 364, 367, 374, 377, 435, 436, 439, 441, 444, 446, 449, 451, 454, 456, 459, 461, 464, 466, 469, 471, 474, 476, 479, 481, 484, 486, 489, 491, 494, 501, 504, 506, 509, 511, 514, 516, 519, 521, 524, 531, 534, 536, 539, 551, 554, 556, 559, 561, 564, 566, 569, 571, 574, 576, 579, 581, 584, 586, 589, 591, 594, 601, 604, 611, 614, 616, 619, 621, 624, 626, 629, 631, 634, 636, 639, 641, 644, 646, 649, 661, 664, 666, 669, 671, 674, 676, 679, 681, 684, 696, 699, 701, 704, 706, 709, 711, 714, 716, 719, 721, 724, 726, 729, 731, 735, 736, 740, 741, 745, 746, 750, 849, 906, 909, 923, 926, 931, 934, 937, 940, 1008, 1012, 1025, 1029, 1042, 1057, 1059, 1075, 1079, 1082, 1086, 1087, 1091, 1093, 1105, 1108, 1127, 1130, 1139, 1142, 1154, 1157, 1159, 1160, 1163, 1165, 1168, 1170, 1173, 1176, 1179, 1181, 1184, 1185, 1187, 1193, 1196, 1198, 1201, 1203, 1206, 1208, 1210, 1212, 1215, 1217, 1220, 1222, 1225, 1227, 1230, 1232, 1235, 1237, 1240, 1242, 1245, 1247, 1251, 1252, 1256, 1257, 1261, 1272, 1276, 1277, 1281, 1282, 1286, 1303, 1304, 1307, 1309, 1312, 1314, 1317, 1319, 1322, 1324, 1327, 1329, 1332, 1334, 1337, 1339, 1342, 1344, 1347, 1349, 1352, 1354, 1357, 1359, 1362, 1364, 1368, 1369, 1373, 1374, 1378, 1379, 1383, 1406, 1407, 1410, 1438, 1439, 1442, 1444, 1447, 1454, 1457, 1459, 1463, 1464, 1465, 1469, 1470, 1474, 1475, 1479, 1480, 1484, 1485, 1486, 1489, 1496, 1499, 1501, 1516, 1519, 1520, 1523, 1524, 1527, 1528, 1531, 1532, 1535, 1536, 1540, 1541, 1545, 1546, 1547, 1550, 1552, 1555, 1557, 1558], "fix": [35, 36, 142, 143, 155, 156], "attempt": [35, 148, 176], "succe": 35, "properli": [35, 137, 147, 155], "enter": [35, 36, 139, 143, 144, 149, 151, 401, 1042, 1074, 1080, 1092], "server": 36, "suitabl": [36, 105, 106, 141, 156, 1485, 1491, 1494], "quick": [36, 137, 163], "tendenc": 36, "land": 36, "end": [36, 140, 152, 156, 157, 158, 175, 176, 228, 230, 231, 435, 471, 474, 1558, 1564], "world": 36, "come": [36, 153, 156, 157, 163, 174, 1557, 1558, 1564], "fly": 36, "hard": [36, 155, 161], "receiv": [36, 143, 144, 155, 849, 856, 974], "internship": 36, "bug": [36, 153, 155, 156], "serv": [36, 139, 141, 149, 150, 155, 157, 158, 1557, 1558], "suspect": 36, "observ": [36, 147], "act": [36, 145, 176], "placehold": [36, 139, 148, 149, 1388, 1400, 1557], "ii": [36, 1501, 1512, 1515], "iii": 36, "issue_numb": 36, "No": 36, "soon": [36, 143, 174, 176, 1558, 1564], "partial": [36, 91, 92, 1042, 1061], "solut": [36, 141, 143, 155, 157, 1159, 1242, 1245], "respond": 36, "shape": [36, 38, 41, 42, 48, 49, 50, 51, 54, 55, 56, 57, 58, 59, 60, 61, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 84, 85, 89, 90, 91, 92, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 143, 144, 145, 146, 149, 152, 153, 154, 155, 156, 159, 161, 162, 163, 164, 189, 190, 193, 195, 198, 200, 203, 205, 208, 210, 213, 215, 218, 220, 223, 228, 230, 231, 233, 235, 240, 242, 243, 244, 247, 249, 250, 252, 255, 257, 258, 261, 263, 264, 266, 267, 269, 272, 279, 282, 284, 285, 287, 290, 292, 296, 297, 301, 302, 304, 305, 309, 310, 313, 316, 318, 321, 323, 326, 401, 421, 426, 430, 435, 436, 439, 441, 444, 446, 449, 451, 454, 456, 459, 461, 464, 466, 469, 471, 474, 476, 479, 481, 484, 486, 489, 491, 494, 496, 499, 501, 504, 506, 509, 511, 514, 516, 519, 521, 524, 526, 529, 531, 534, 536, 539, 541, 544, 546, 549, 551, 554, 556, 559, 561, 564, 566, 569, 571, 574, 576, 579, 581, 584, 586, 589, 591, 594, 596, 599, 601, 604, 606, 609, 611, 614, 616, 619, 621, 624, 626, 629, 631, 634, 636, 639, 641, 644, 646, 649, 651, 654, 656, 659, 661, 664, 666, 669, 671, 674, 676, 679, 681, 684, 686, 689, 691, 694, 696, 699, 701, 704, 706, 709, 711, 714, 716, 719, 721, 724, 726, 729, 731, 735, 736, 740, 741, 745, 746, 750, 751, 755, 849, 866, 869, 871, 874, 881, 884, 886, 889, 891, 894, 906, 909, 911, 914, 923, 926, 978, 981, 983, 986, 994, 1013, 1019, 1035, 1041, 1042, 1043, 1046, 1047, 1050, 1053, 1056, 1062, 1065, 1066, 1069, 1070, 1073, 1075, 1079, 1093, 1095, 1098, 1100, 1103, 1105, 1108, 1110, 1112, 1114, 1117, 1119, 1122, 1124, 1125, 1127, 1130, 1132, 1135, 1139, 1142, 1149, 1152, 1154, 1157, 1159, 1160, 1163, 1165, 1168, 1170, 1173, 1176, 1179, 1181, 1184, 1185, 1187, 1188, 1191, 1193, 1196, 1198, 1201, 1203, 1206, 1208, 1210, 1212, 1215, 1217, 1220, 1222, 1225, 1227, 1230, 1232, 1235, 1237, 1240, 1242, 1245, 1247, 1251, 1252, 1256, 1257, 1261, 1262, 1266, 1272, 1276, 1277, 1281, 1282, 1286, 1287, 1288, 1291, 1293, 1296, 1298, 1301, 1303, 1304, 1307, 1309, 1312, 1314, 1317, 1319, 1322, 1324, 1327, 1329, 1332, 1334, 1337, 1339, 1342, 1344, 1347, 1349, 1352, 1354, 1357, 1359, 1362, 1364, 1368, 1369, 1373, 1379, 1383, 1406, 1407, 1410, 1411, 1412, 1415, 1417, 1420, 1422, 1425, 1427, 1430, 1433, 1436, 1438, 1439, 1442, 1449, 1452, 1454, 1457, 1459, 1463, 1485, 1486, 1489, 1496, 1499, 1501, 1502, 1505, 1507, 1510, 1512, 1515, 1546, 1547, 1550, 1552, 1555, 1558], "move": [36, 56, 57, 101, 102, 105, 106, 156, 401, 426, 430], "dai": [36, 142], "warn": 36, "without": [36, 91, 92, 139, 141, 143, 144, 145, 147, 148, 149, 150, 154, 155, 156, 157, 161, 162, 163, 175, 176, 849, 928, 993, 1030, 1303, 1339, 1342, 1388, 1390, 1464, 1465, 1469, 1470, 1474, 1475, 1479, 1480, 1484], "likewis": [36, 141, 143, 146, 149, 150, 153, 157, 162], "freed": 36, "flag": [36, 60, 61, 91, 92, 109, 110, 143, 151, 152, 153, 155, 401, 406, 1042, 1057, 1059], "remain": [36, 70, 71, 76, 77, 119, 120, 125, 126, 142, 145, 156, 157, 176, 435, 451, 454, 661, 664, 696, 699, 1303, 1339, 1342, 1388, 1394, 1438, 1454, 1457], "short": [36, 143, 153, 156, 159, 163, 1093, 1144, 1147], "basi": [36, 138, 162], "situat": [36, 164], "upon": [36, 145, 152, 155, 157, 176], "period": [36, 105, 106, 156], "unabl": [36, 157], "obvious": 36, "never": [36, 70, 71, 119, 120, 153, 155, 157, 1303, 1339, 1342], "qualiti": 36, "hypothet": 36, "frustrat": 36, "delai": 36, "busi": 36, "fine": [36, 143, 145, 153, 161, 164], "inact": 36, "me": 36, "unfairli": 36, "definit": [36, 66, 67, 115, 116, 143, 150, 161, 1159, 1160, 1163], "investig": 36, "maximum": [36, 54, 55, 56, 57, 58, 59, 60, 61, 70, 71, 76, 77, 88, 91, 92, 93, 94, 103, 104, 105, 106, 107, 108, 109, 110, 119, 120, 125, 126, 145, 162, 401, 425, 435, 849, 866, 869, 871, 874, 899, 902, 1042, 1062, 1065, 1159, 1203, 1206, 1303, 1304, 1307, 1388, 1400, 1438, 1439, 1442, 1501, 1516, 1519, 1524, 1527, 1558], "incomplet": 36, "three": [36, 141, 145, 153, 155, 157, 158, 228, 269, 272, 1558], "per": [36, 56, 57, 64, 65, 105, 106, 113, 114, 153, 155, 162, 1093, 1095, 1098, 1100, 1103, 1105, 1108, 1110, 1112, 1114, 1117, 1119, 1122, 1124, 1125, 1127, 1130], "self": [36, 38, 41, 42, 48, 49, 50, 51, 54, 55, 56, 57, 58, 59, 60, 61, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 103, 104, 105, 106, 107, 108, 109, 110, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 139, 141, 147, 153, 154, 159, 161, 162, 163, 164, 401, 1558], "assign": [36, 140, 143, 148, 152, 161], "sequenc": [36, 56, 57, 70, 71, 82, 83, 84, 85, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 113, 114, 115, 116, 117, 118, 119, 120, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 143, 144, 145, 147, 155, 156, 159, 164, 175, 225, 226, 849, 974, 1041, 1159, 1277, 1281, 1303, 1309, 1312, 1319, 1322, 1324, 1327, 1339, 1342, 1344, 1347, 1349, 1352, 1354, 1357, 1359, 1362, 1388, 1404, 1501, 1516, 1519, 1520, 1523, 1524, 1527, 1528, 1531, 1532, 1535, 1536, 1540, 1541, 1545, 1546, 1547, 1550, 1552, 1555], "regist": 36, "wherea": [36, 139, 143, 144, 145, 149, 150, 155, 156, 164], "primarili": [36, 435, 696, 699], "invit": 36, "roadmap": [36, 142], "mainli": [36, 137, 160, 162, 1557], "extend": [36, 140, 146, 149, 153, 156, 176], "ideal": [36, 152, 162], "Such": [36, 155, 1159, 1267, 1271], "easier": [36, 139, 143, 153, 156, 1557], "regular": [36, 153, 154], "interv": [36, 74, 75, 84, 85, 123, 124, 133, 134, 228, 230, 231, 263, 264, 266, 267, 1159, 1272, 1276, 1303, 1304, 1307, 1319, 1322, 1359, 1362, 1411, 1417, 1420, 1427, 1430, 1546, 1547, 1550, 1552, 1555], "forth": 36, "rare": [36, 144, 176], "scenario": 36, "someon": [36, 176], "someth": [36, 156, 162, 163, 176], "unfortun": 36, "redund": [36, 143, 147, 153, 157], "behind": [36, 60, 61, 137, 149, 155, 158, 160], "well": [36, 107, 108, 142, 143, 152, 153, 155, 163, 164, 175, 849, 931, 934, 1159, 1242, 1245], "practic": [36, 142], "separ": [36, 139, 141, 155, 159, 161, 162], "branch": [36, 138, 176, 225, 226, 435, 471, 474], "role": [36, 153, 160], "kept": [36, 88, 91, 92, 93, 94, 152, 156, 1384, 1385, 1386], "date": [36, 156], "upstream": [36, 138], "complic": [36, 154, 159], "merge_with_upstream": 36, "name_of_your_branch": 36, "resolv": [36, 138, 143, 159, 1303, 1319, 1322, 1501, 1502, 1505, 1507, 1510, 1528, 1531, 1536, 1540], "both": [36, 54, 55, 56, 57, 66, 67, 97, 98, 103, 104, 115, 116, 140, 141, 143, 144, 145, 146, 149, 150, 152, 153, 155, 157, 159, 161, 162, 163, 164, 175, 176, 228, 230, 231, 233, 235, 243, 244, 247, 249, 250, 252, 255, 257, 258, 261, 263, 264, 266, 267, 269, 272, 284, 285, 287, 290, 292, 296, 297, 301, 302, 304, 305, 309, 310, 328, 331, 364, 367, 374, 377, 384, 435, 436, 439, 441, 444, 446, 449, 451, 454, 456, 459, 461, 464, 466, 469, 471, 474, 476, 479, 481, 484, 486, 489, 491, 494, 501, 504, 506, 509, 511, 514, 516, 519, 521, 524, 531, 534, 536, 539, 551, 554, 556, 559, 561, 564, 566, 569, 571, 574, 576, 579, 581, 584, 586, 589, 601, 604, 611, 614, 616, 619, 621, 624, 626, 629, 631, 634, 636, 639, 641, 644, 646, 649, 661, 664, 666, 669, 671, 674, 676, 679, 681, 684, 696, 699, 701, 704, 706, 709, 711, 714, 716, 719, 721, 724, 726, 729, 731, 735, 736, 740, 741, 745, 746, 750, 849, 906, 909, 923, 926, 931, 934, 937, 940, 1025, 1029, 1042, 1057, 1059, 1075, 1079, 1081, 1082, 1086, 1087, 1091, 1093, 1105, 1108, 1127, 1130, 1139, 1142, 1154, 1157, 1159, 1160, 1163, 1165, 1168, 1170, 1173, 1176, 1179, 1181, 1184, 1185, 1187, 1193, 1196, 1198, 1201, 1203, 1206, 1208, 1210, 1212, 1215, 1217, 1220, 1222, 1225, 1227, 1230, 1232, 1235, 1237, 1240, 1242, 1245, 1247, 1251, 1252, 1256, 1257, 1261, 1272, 1276, 1277, 1281, 1282, 1286, 1303, 1304, 1307, 1309, 1312, 1314, 1317, 1319, 1322, 1324, 1327, 1329, 1332, 1334, 1337, 1339, 1342, 1344, 1347, 1349, 1352, 1354, 1357, 1359, 1362, 1364, 1368, 1369, 1373, 1374, 1378, 1379, 1383, 1406, 1407, 1410, 1438, 1439, 1442, 1444, 1447, 1454, 1457, 1459, 1463, 1464, 1465, 1469, 1470, 1474, 1475, 1479, 1480, 1484, 1485, 1486, 1489, 1496, 1499, 1501, 1516, 1519, 1520, 1523, 1524, 1527, 1528, 1531, 1532, 1535, 1536, 1540, 1541, 1545, 1546, 1547, 1550, 1552, 1555], "abort": 36, "tediou": [36, 145], "resolut": [36, 310, 346, 349], "stash": 36, "reinstat": 36, "fetch": [36, 138], "uncommit": 36, "unstag": 36, "untrack": 36, "comprehens": [36, 138], "atlassian": 36, "tutori": [36, 153], "wrote": 36, "piec": [36, 139, 150, 151, 159], "tag": 36, "navig": [36, 137], "blame": 36, "revis": 36, "log": [36, 54, 55, 66, 67, 103, 104, 115, 116, 141, 142, 145, 150, 152, 153, 155, 157, 159, 162, 228, 266, 267, 435, 616, 619, 626, 629, 1159, 1237, 1240, 1558], "eg": 36, "16": [36, 38, 41, 42, 54, 55, 56, 57, 64, 65, 66, 67, 74, 75, 82, 83, 88, 93, 94, 99, 100, 103, 104, 105, 106, 107, 108, 113, 114, 119, 120, 123, 124, 145, 155, 162, 310, 357, 360, 435, 501, 504, 616, 619, 736, 740, 1042, 1081, 1093, 1127, 1130, 1139, 1142, 1159, 1160, 1163, 1176, 1179, 1222, 1225, 1252, 1256, 1303, 1374, 1378, 1388, 1396, 1438, 1459, 1463, 1501, 1507, 1510, 1512, 1515], "past": [36, 154], "l": [36, 66, 67, 103, 104, 115, 116, 137, 1159, 1160, 1163, 1181, 1184, 1185, 1187, 1198, 1201, 1262, 1266], "filepath": [36, 91, 92, 138], "grep": 36, "commit_id": 36, "handi": 36, "histori": 36, "toggl": 36, "vertic": 36, "highlight": [36, 145], "previou": [36, 60, 61, 109, 110, 138, 149, 153, 155, 157, 164, 176, 310, 396, 399, 849, 1031, 1033, 1034, 1035, 1042, 1047, 1050, 1062, 1065], "whenev": [36, 142, 147, 151, 155, 162], "think": [36, 145], "gain": [36, 138, 158, 163], "quit": [36, 139, 145, 146, 150, 151, 155, 157], "newli": [36, 50, 51, 99, 100, 152, 155, 225, 226, 310, 313, 316, 849, 865], "cannot": [36, 138, 140, 143, 153, 164], "least": [36, 56, 57, 105, 106, 139, 145, 150, 155, 1159, 1198, 1201], "approv": 36, "hash": [36, 162], "cancel": 36, "speedup": 36, "button": 36, "unavail": 36, "tickbox": 36, "lower": [36, 48, 49, 54, 55, 66, 67, 74, 75, 103, 104, 115, 116, 123, 124, 145, 153, 155, 157, 159, 176, 228, 249, 250, 292, 296, 435, 651, 654, 1159, 1160, 1163, 1411, 1427, 1430, 1557], "corner": [36, 155], "span": [36, 157], "intent": [36, 152], "larg": [36, 162, 435, 451, 454, 661, 664], "discourag": 36, "philosophi": 36, "increment": [36, 58, 59, 107, 108, 156, 849, 942, 945], "valuabl": 36, "infrequ": 36, "earli": [36, 1558], "wast": 36, "spot": [36, 145, 150], "mistak": [36, 148], "propos": [36, 153, 157], "mountain": 36, "around": [36, 88, 91, 92, 93, 94, 139, 149, 150, 153, 156, 161, 176, 1557], "advoc": [36, 176], "style": [36, 1438, 1454, 1457], "were": [36, 91, 92, 99, 100, 143, 148, 155, 156, 157, 159], "actual": [36, 137, 150, 152, 155, 157, 158, 163, 176], "aim": [36, 138, 155, 158], "session": 36, "smaller": [36, 70, 71, 119, 120, 159, 1303, 1304, 1307, 1344, 1347, 1501, 1502, 1505, 1507, 1510, 1528, 1531, 1536, 1540], "exact": [36, 89, 90, 91, 92, 138, 145, 159, 1464, 1465, 1469, 1475, 1479], "beauti": 36, "particularli": [36, 162, 176], "concern": [36, 137, 141, 145, 152, 157, 158], "effici": [36, 141, 148, 150, 151, 152, 155, 159, 162, 176], "difficult": [36, 138, 143, 155, 176, 1464, 1465, 1469, 1470, 1474, 1475, 1479, 1480, 1484], "undo": 36, "stress": 36, "frequenc": [36, 58, 59, 107, 108, 142, 849, 899, 902], "advantag": [36, 152, 153], "nifti": 36, "reassur": 36, "isol": 36, "fact": [36, 153, 155, 162], "local_path_to_ivi": 36, "overwrit": [36, 91, 92, 152, 153, 159, 401, 425], "subfold": [36, 154, 155, 156], "wide": [36, 155], "dep": 36, "fresh": 36, "arsen": 36, "declar": 36, "exec": 36, "rf": 36, "cp": 36, "ivy_contain": 36, "test_imag": 36, "test_random_crop": 36, "test_creation_funct": 36, "test_arang": 36, "variou": [36, 138, 146, 147, 149, 151, 154, 155, 175, 1557], "cpu": [36, 48, 49, 52, 53, 74, 75, 101, 102, 107, 108, 123, 124, 144, 153, 176, 228, 257, 263, 264, 266, 267, 279, 282, 305, 309, 401, 406, 407, 410, 412, 417, 420, 422, 423, 426, 430, 431, 433, 434, 1411, 1412, 1415, 1417, 1420, 1422, 1425, 1427, 1430], "gpu": [36, 144, 161, 401, 406, 412, 416, 418, 420, 422, 423, 424, 431, 433, 434], "combin": [36, 88, 91, 92, 93, 94, 139, 141, 143, 145, 150, 155, 157, 164, 849, 904, 905, 1159, 1165, 1168, 1198, 1201], "num": [36, 97, 98, 149, 159, 228, 263, 264, 266, 267], "integ": [36, 38, 41, 42, 54, 55, 70, 71, 74, 75, 82, 83, 84, 85, 88, 91, 92, 93, 94, 103, 104, 115, 116, 119, 120, 123, 124, 131, 132, 133, 134, 141, 143, 151, 154, 155, 159, 161, 228, 230, 231, 257, 310, 357, 360, 362, 374, 377, 385, 386, 389, 435, 436, 439, 481, 484, 486, 489, 491, 494, 496, 499, 501, 504, 506, 509, 511, 514, 556, 559, 561, 564, 646, 649, 681, 684, 696, 699, 701, 704, 746, 750, 751, 755, 849, 919, 1041, 1159, 1208, 1210, 1272, 1276, 1277, 1281, 1303, 1349, 1352, 1411, 1412, 1415, 1417, 1420, 1422, 1425, 1432, 1433, 1436, 1485, 1491, 1494, 1501, 1502, 1505, 1507, 1510, 1516, 1519, 1520, 1523, 1524, 1527, 1528, 1531, 1532, 1535, 1536, 1540, 1541, 1545, 1546, 1547, 1550, 1552, 1555], "greater": [36, 38, 41, 42, 54, 55, 74, 75, 88, 93, 94, 103, 104, 123, 124, 435, 441, 444, 456, 459, 471, 474, 491, 494, 501, 504, 556, 559, 561, 564, 681, 684, 696, 699, 706, 709, 746, 750, 1159, 1165, 1168, 1208, 1210, 1303, 1354, 1357, 1411, 1427, 1430], "prompt": [36, 1558], "whole": 36, "multipli": [36, 54, 55, 82, 83, 103, 104, 139, 140, 141, 145, 435, 451, 454, 731, 735, 1501, 1502, 1505], "cursor": 36, "alt": 36, "j": [36, 48, 49, 66, 67, 97, 98, 103, 104, 115, 116, 137, 228, 279, 282, 849, 857, 859, 1159, 1262, 1266, 1501, 1512, 1515], "blog": 36, "breakpoint": 36, "gutter": 36, "caret": 36, "f8": 36, "f9": 36, "Into": 36, "f7": 36, "smart": 36, "interest": 36, "consol": [36, 155, 161, 849, 977], "store": [36, 50, 51, 58, 59, 60, 61, 66, 67, 70, 71, 91, 92, 99, 100, 107, 108, 109, 110, 115, 116, 119, 120, 139, 140, 141, 146, 153, 159, 161, 162, 163, 228, 305, 309, 849, 899, 902, 1042, 1087, 1091, 1159, 1262, 1266, 1303, 1349, 1352, 1557], "variabl": [36, 38, 41, 42, 58, 59, 60, 61, 72, 73, 91, 92, 107, 108, 109, 110, 121, 122, 140, 143, 146, 148, 149, 152, 155, 156, 159, 162, 163, 164, 176, 849, 860, 863, 947, 950, 952, 953, 956, 958, 961, 968, 971, 1008, 1012, 1042, 1047, 1050, 1051, 1053, 1056, 1057, 1059, 1062, 1065, 1066, 1069, 1070, 1073, 1081, 1087, 1091, 1093, 1149, 1152, 1159, 1242, 1245, 1384, 1385, 1386, 1387, 1406, 1407, 1410, 1558], "fragment": 36, "except": [36, 58, 59, 70, 71, 74, 75, 84, 85, 91, 92, 107, 108, 115, 116, 123, 124, 133, 134, 137, 138, 139, 143, 146, 148, 149, 152, 153, 157, 159, 161, 176, 310, 323, 326, 849, 860, 863, 878, 880, 947, 950, 989, 1008, 1012, 1030, 1032, 1159, 1227, 1230, 1303, 1309, 1312, 1319, 1322, 1359, 1362, 1411, 1417, 1420, 1422, 1425, 1427, 1430, 1438, 1454, 1457, 1546, 1547, 1550, 1552, 1555], "pychram": 36, "depth": [36, 48, 49, 97, 98, 162, 163, 164, 175, 228, 279, 282, 849, 929, 1388, 1400], "dummi": 36, "wherein": [36, 151, 155], "evalu": [36, 54, 55, 91, 92, 103, 104, 141, 143, 157, 435, 546, 549, 551, 554, 606, 609, 611, 614, 616, 619, 621, 624, 666, 669, 706, 709, 726, 729, 1042, 1081, 1388, 1389, 1398, 1399, 1546, 1547, 1550, 1552, 1555], "failur": [36, 138, 142, 155], "arraywithactiv": [38, 39, 41, 42, 161], "arraywithcr": [38, 41, 42, 48, 161], "arraywithdatatyp": [38, 41, 42, 50, 161], "arraywithdevic": [38, 41, 42, 52, 161], "arraywithextens": [38, 41, 42, 56], "arraywithgener": [38, 41, 42, 58, 161], "arraywithgradi": [38, 41, 42, 60, 161], "arraywithimag": [38, 41, 42, 62, 161], "arraywithlay": [38, 41, 42, 64, 161], "arraywithlinearalgebra": [38, 41, 42, 66, 161], "arraywithloss": [38, 41, 42, 68, 161], "arraywithmanipul": [38, 41, 42, 70, 161], "arraywithnorm": [38, 41, 42, 72, 161], "arraywithrandom": [38, 41, 42, 74, 161], "arraywithsearch": [38, 41, 42, 76, 161], "arraywithset": [38, 41, 42, 78, 161], "arraywithsort": [38, 41, 42, 80, 161], "arraywithstatist": [38, 41, 42, 82, 161], "arraywithutil": [38, 41, 42, 84, 161], "properti": [38, 41, 42, 91, 92, 141, 145, 150, 154, 155, 161, 162, 163], "transpos": [38, 41, 42, 91, 92, 115, 116, 152, 161, 164, 1093, 1094, 1100, 1103, 1110, 1112, 1119, 1122, 1124, 1125, 1159, 1217, 1220, 1227, 1230, 1558], "dimension": [38, 41, 42, 66, 67, 70, 71, 76, 77, 82, 83, 84, 85, 91, 92, 115, 116, 119, 120, 131, 132, 133, 134, 159, 228, 230, 231, 249, 250, 269, 272, 1159, 1165, 1168, 1170, 1173, 1188, 1191, 1198, 1201, 1212, 1215, 1222, 1225, 1227, 1230, 1272, 1276, 1277, 1281, 1303, 1349, 1352, 1438, 1439, 1442, 1444, 1447, 1454, 1457, 1501, 1516, 1519, 1520, 1523, 1524, 1527, 1528, 1531, 1532, 1535, 1536, 1540, 1541, 1545, 1546, 1547, 1550, 1552, 1555], "whose": [38, 41, 42, 48, 49, 54, 55, 56, 57, 58, 59, 66, 67, 70, 71, 78, 79, 97, 98, 103, 104, 105, 106, 107, 108, 115, 116, 119, 120, 127, 128, 131, 132, 146, 155, 228, 292, 296, 297, 301, 435, 446, 449, 461, 464, 476, 479, 516, 519, 521, 524, 526, 529, 681, 684, 686, 689, 711, 714, 716, 719, 736, 740, 741, 745, 849, 865, 1008, 1012, 1159, 1160, 1163, 1170, 1173, 1176, 1179, 1181, 1184, 1185, 1187, 1188, 1191, 1193, 1196, 1203, 1206, 1208, 1210, 1212, 1215, 1217, 1220, 1222, 1225, 1227, 1230, 1232, 1235, 1237, 1240, 1242, 1245, 1247, 1251, 1252, 1256, 1262, 1266, 1303, 1324, 1327, 1344, 1347, 1464, 1465, 1469, 1470, 1474, 1475, 1479, 1501, 1512, 1515], "dimens": [38, 41, 42, 48, 49, 56, 57, 58, 59, 64, 65, 66, 67, 68, 69, 70, 71, 74, 75, 76, 77, 78, 79, 82, 83, 84, 85, 88, 91, 92, 93, 94, 97, 98, 105, 106, 107, 108, 113, 114, 115, 116, 117, 118, 119, 120, 123, 124, 125, 126, 127, 128, 131, 132, 133, 134, 145, 147, 154, 155, 157, 159, 162, 189, 200, 203, 215, 218, 228, 279, 282, 292, 296, 297, 301, 849, 881, 884, 886, 889, 891, 894, 899, 902, 923, 926, 1041, 1093, 1095, 1098, 1100, 1103, 1105, 1108, 1110, 1112, 1114, 1117, 1119, 1122, 1124, 1125, 1127, 1130, 1144, 1147, 1159, 1160, 1163, 1165, 1168, 1170, 1173, 1176, 1179, 1181, 1184, 1185, 1187, 1193, 1196, 1198, 1201, 1203, 1206, 1208, 1210, 1212, 1215, 1217, 1220, 1227, 1230, 1232, 1235, 1237, 1240, 1242, 1245, 1247, 1251, 1252, 1256, 1262, 1266, 1272, 1276, 1277, 1281, 1287, 1293, 1296, 1298, 1301, 1303, 1309, 1312, 1319, 1322, 1324, 1327, 1329, 1332, 1334, 1337, 1339, 1342, 1344, 1347, 1349, 1352, 1354, 1357, 1359, 1362, 1374, 1378, 1384, 1385, 1386, 1387, 1411, 1433, 1436, 1438, 1439, 1442, 1444, 1447, 1454, 1457, 1464, 1465, 1469, 1470, 1474, 1475, 1479, 1480, 1484, 1501, 1512, 1515, 1516, 1519, 1520, 1523, 1524, 1527, 1528, 1531, 1532, 1535, 1536, 1540, 1541, 1545, 1546, 1547, 1550, 1552, 1555], "ax": [38, 41, 42, 56, 57, 66, 67, 70, 71, 76, 77, 82, 83, 84, 85, 89, 90, 105, 106, 115, 116, 119, 120, 125, 126, 131, 132, 133, 134, 143, 145, 155, 156, 159, 161, 401, 425, 849, 1041, 1159, 1203, 1206, 1242, 1245, 1257, 1261, 1277, 1281, 1303, 1314, 1317, 1324, 1327, 1329, 1332, 1344, 1347, 1354, 1357, 1364, 1368, 1379, 1383, 1438, 1439, 1442, 1444, 1447, 1501, 1516, 1519, 1520, 1523, 1524, 1527, 1528, 1531, 1532, 1535, 1536, 1540, 1541, 1545, 1546, 1547, 1550, 1552, 1555], "permut": [38, 41, 42, 1303, 1329, 1332, 1364, 1368], "__add__": [38, 41, 42, 88, 93, 94, 139, 141, 145, 146, 149, 153, 161], "variant": [38, 39, 40, 41, 42, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 89, 90, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 145, 146, 157], "wrap": [38, 39, 40, 41, 42, 43, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 136, 137, 139, 140, 141, 142, 143, 144, 146, 147, 148, 149, 150, 152, 153, 154, 155, 159, 161, 164, 176, 177, 187, 849, 865, 1042, 1087, 1091, 1557], "minim": [38, 39, 40, 41, 42, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 89, 90, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 146, 152, 154, 157, 159], "input": [38, 41, 42, 43, 46, 47, 48, 49, 50, 51, 54, 55, 56, 57, 58, 59, 60, 61, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 138, 139, 140, 141, 143, 144, 145, 146, 149, 150, 151, 152, 153, 154, 155, 156, 157, 159, 161, 162, 163, 164, 176, 177, 187, 189, 190, 193, 195, 198, 200, 203, 205, 208, 210, 213, 215, 218, 220, 223, 225, 226, 228, 230, 231, 233, 235, 240, 242, 243, 244, 247, 249, 250, 252, 255, 257, 258, 261, 263, 264, 266, 267, 269, 272, 274, 277, 279, 282, 284, 285, 287, 290, 292, 296, 297, 301, 302, 304, 305, 309, 310, 313, 316, 318, 321, 323, 326, 328, 331, 333, 334, 335, 336, 337, 339, 340, 341, 343, 345, 346, 349, 357, 360, 364, 367, 369, 372, 374, 377, 379, 382, 384, 385, 386, 389, 391, 395, 401, 406, 407, 410, 419, 425, 426, 430, 435, 436, 439, 441, 444, 446, 449, 451, 454, 456, 459, 461, 464, 466, 469, 471, 474, 476, 479, 481, 484, 486, 489, 491, 494, 496, 499, 501, 504, 506, 509, 511, 514, 516, 519, 521, 524, 526, 529, 531, 534, 536, 539, 541, 544, 546, 549, 551, 554, 556, 559, 561, 564, 566, 569, 571, 574, 576, 579, 581, 584, 586, 589, 591, 594, 596, 599, 601, 604, 606, 609, 611, 614, 616, 619, 621, 624, 626, 629, 631, 634, 636, 639, 641, 644, 646, 649, 651, 654, 656, 659, 661, 664, 666, 669, 671, 674, 676, 679, 681, 684, 686, 689, 691, 694, 696, 699, 701, 704, 706, 709, 711, 714, 716, 719, 721, 724, 726, 729, 731, 735, 736, 740, 741, 745, 746, 750, 751, 755, 849, 850, 853, 855, 857, 859, 860, 863, 866, 869, 871, 874, 878, 880, 881, 884, 886, 889, 891, 894, 896, 898, 899, 902, 906, 909, 911, 914, 922, 923, 926, 931, 934, 937, 940, 942, 945, 947, 950, 953, 956, 958, 961, 963, 966, 968, 971, 978, 981, 983, 986, 988, 992, 996, 998, 1001, 1008, 1012, 1013, 1014, 1018, 1019, 1020, 1024, 1025, 1029, 1031, 1033, 1036, 1040, 1041, 1042, 1043, 1046, 1047, 1050, 1051, 1052, 1053, 1056, 1057, 1059, 1061, 1062, 1065, 1066, 1069, 1070, 1073, 1075, 1079, 1081, 1082, 1086, 1087, 1091, 1093, 1095, 1098, 1100, 1103, 1105, 1108, 1110, 1112, 1114, 1117, 1119, 1122, 1124, 1125, 1127, 1130, 1132, 1135, 1139, 1142, 1144, 1147, 1149, 1152, 1154, 1157, 1159, 1160, 1163, 1165, 1168, 1170, 1173, 1176, 1179, 1181, 1184, 1185, 1187, 1188, 1191, 1193, 1196, 1198, 1201, 1203, 1206, 1208, 1210, 1212, 1215, 1217, 1220, 1222, 1225, 1227, 1230, 1232, 1235, 1237, 1240, 1242, 1245, 1247, 1251, 1252, 1256, 1257, 1261, 1262, 1266, 1267, 1271, 1272, 1276, 1277, 1281, 1282, 1286, 1287, 1288, 1291, 1293, 1296, 1298, 1301, 1303, 1304, 1307, 1309, 1312, 1314, 1317, 1319, 1322, 1324, 1327, 1329, 1332, 1334, 1337, 1339, 1342, 1344, 1347, 1349, 1352, 1354, 1357, 1359, 1362, 1364, 1368, 1369, 1373, 1374, 1378, 1379, 1383, 1384, 1385, 1386, 1387, 1388, 1390, 1391, 1394, 1396, 1399, 1404, 1405, 1406, 1407, 1410, 1411, 1412, 1415, 1417, 1420, 1422, 1425, 1427, 1430, 1433, 1436, 1438, 1439, 1442, 1444, 1447, 1449, 1452, 1454, 1457, 1459, 1463, 1464, 1465, 1469, 1470, 1474, 1475, 1479, 1480, 1484, 1485, 1486, 1489, 1491, 1494, 1496, 1499, 1501, 1502, 1505, 1507, 1510, 1512, 1515, 1516, 1519, 1520, 1523, 1524, 1527, 1528, 1531, 1532, 1535, 1536, 1540, 1541, 1545, 1546, 1547, 1550, 1552, 1555], "numer": [38, 41, 42, 50, 51, 54, 55, 58, 59, 66, 67, 74, 75, 76, 77, 88, 93, 94, 99, 100, 103, 104, 107, 108, 115, 116, 123, 124, 125, 126, 129, 130, 143, 151, 153, 154, 155, 156, 157, 159, 163, 228, 269, 272, 310, 313, 316, 435, 436, 439, 451, 454, 511, 514, 531, 534, 551, 554, 556, 559, 561, 564, 576, 579, 581, 584, 586, 589, 596, 599, 636, 639, 641, 644, 661, 664, 666, 669, 671, 674, 681, 684, 696, 699, 706, 709, 726, 729, 731, 735, 746, 750, 751, 755, 849, 920, 921, 990, 991, 998, 1001, 1003, 1006, 1159, 1165, 1168, 1188, 1191, 1198, 1201, 1222, 1225, 1247, 1251, 1257, 1261, 1262, 1266, 1272, 1276, 1411, 1417, 1420, 1422, 1425, 1427, 1430, 1433, 1436, 1438, 1439, 1442, 1444, 1447, 1501, 1516, 1519, 1528, 1531, 1536, 1540], "broadcast": [38, 41, 42, 48, 49, 50, 51, 54, 55, 56, 57, 58, 59, 60, 61, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 82, 83, 84, 85, 88, 89, 90, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 129, 130, 131, 132, 133, 134, 141, 143, 145, 146, 155, 156, 159, 189, 190, 193, 195, 198, 200, 203, 205, 208, 210, 213, 215, 218, 220, 223, 228, 230, 231, 233, 235, 240, 242, 243, 244, 247, 249, 250, 252, 255, 257, 258, 261, 263, 264, 266, 267, 279, 282, 284, 285, 287, 290, 292, 296, 297, 301, 302, 304, 305, 309, 310, 313, 316, 318, 321, 323, 326, 401, 426, 430, 435, 436, 439, 441, 444, 446, 449, 451, 454, 456, 459, 461, 464, 466, 469, 471, 474, 476, 479, 481, 484, 486, 489, 491, 494, 496, 499, 501, 504, 506, 509, 511, 514, 516, 519, 521, 524, 526, 529, 531, 534, 536, 539, 541, 544, 546, 549, 551, 554, 556, 559, 561, 564, 566, 569, 571, 574, 576, 579, 581, 584, 586, 589, 591, 594, 596, 599, 601, 604, 606, 609, 611, 614, 616, 619, 621, 624, 626, 629, 631, 634, 636, 639, 641, 644, 646, 649, 651, 654, 656, 659, 661, 664, 666, 669, 671, 674, 676, 679, 681, 684, 686, 689, 691, 694, 696, 699, 701, 704, 706, 709, 711, 714, 716, 719, 721, 724, 726, 729, 731, 735, 736, 740, 741, 745, 746, 750, 751, 755, 849, 866, 869, 871, 874, 881, 884, 886, 889, 891, 894, 906, 909, 911, 914, 978, 981, 983, 986, 1042, 1043, 1046, 1047, 1050, 1053, 1056, 1062, 1065, 1066, 1069, 1070, 1073, 1075, 1079, 1093, 1095, 1098, 1100, 1103, 1105, 1108, 1110, 1112, 1114, 1117, 1119, 1122, 1124, 1125, 1127, 1130, 1132, 1135, 1139, 1142, 1149, 1152, 1154, 1157, 1159, 1160, 1163, 1165, 1168, 1170, 1173, 1176, 1179, 1185, 1187, 1188, 1191, 1193, 1196, 1198, 1201, 1203, 1206, 1212, 1215, 1217, 1220, 1222, 1225, 1227, 1230, 1242, 1245, 1252, 1256, 1257, 1261, 1262, 1266, 1272, 1276, 1277, 1281, 1282, 1286, 1287, 1288, 1291, 1293, 1296, 1298, 1301, 1303, 1304, 1307, 1309, 1312, 1314, 1317, 1319, 1322, 1324, 1327, 1329, 1332, 1334, 1337, 1339, 1342, 1344, 1347, 1354, 1357, 1359, 1362, 1364, 1368, 1369, 1373, 1379, 1383, 1406, 1407, 1410, 1411, 1412, 1415, 1417, 1420, 1422, 1425, 1427, 1430, 1433, 1436, 1438, 1439, 1442, 1444, 1447, 1449, 1452, 1459, 1463, 1464, 1480, 1484, 1501, 1502, 1505, 1507, 1510, 1516, 1519, 1520, 1523, 1524, 1527, 1528, 1531, 1532, 1535, 1536, 1540, 1541, 1545, 1546, 1547, 1550, 1552, 1555], "element": [38, 41, 42, 48, 49, 54, 55, 56, 57, 58, 59, 66, 67, 70, 71, 74, 75, 76, 77, 78, 79, 82, 83, 88, 89, 90, 91, 92, 93, 94, 97, 98, 103, 104, 105, 106, 107, 108, 115, 116, 119, 120, 123, 124, 125, 126, 127, 128, 131, 132, 146, 154, 155, 157, 159, 189, 190, 193, 195, 198, 200, 203, 205, 208, 210, 213, 215, 218, 220, 223, 228, 230, 231, 240, 242, 257, 258, 261, 292, 296, 297, 301, 435, 436, 439, 441, 444, 446, 449, 451, 454, 456, 459, 461, 464, 466, 469, 471, 474, 476, 479, 481, 484, 486, 489, 491, 494, 496, 499, 501, 504, 506, 509, 511, 514, 516, 519, 521, 524, 526, 529, 531, 534, 536, 539, 541, 544, 546, 549, 551, 554, 556, 559, 561, 564, 566, 569, 571, 574, 576, 579, 581, 584, 586, 589, 591, 594, 596, 599, 601, 604, 606, 609, 611, 614, 616, 619, 621, 624, 626, 629, 631, 634, 636, 639, 641, 644, 646, 649, 651, 654, 656, 659, 661, 664, 666, 669, 671, 674, 676, 679, 681, 684, 686, 689, 691, 694, 696, 699, 701, 704, 706, 709, 711, 714, 716, 719, 721, 724, 726, 729, 731, 735, 736, 740, 741, 745, 746, 750, 751, 755, 849, 857, 859, 866, 869, 871, 874, 906, 909, 1020, 1024, 1025, 1029, 1042, 1074, 1092, 1093, 1132, 1135, 1159, 1165, 1168, 1181, 1184, 1198, 1201, 1232, 1235, 1247, 1251, 1303, 1304, 1307, 1324, 1327, 1334, 1337, 1339, 1342, 1344, 1347, 1349, 1352, 1354, 1357, 1388, 1391, 1411, 1412, 1415, 1438, 1449, 1452, 1454, 1457, 1459, 1463, 1464, 1465, 1469, 1470, 1474, 1475, 1479, 1480, 1484, 1485, 1491, 1494, 1496, 1499, 1501, 1502, 1505, 1507, 1510, 1512, 1515, 1516, 1519, 1520, 1523, 1524, 1527, 1528, 1531, 1532, 1535, 1536, 1540, 1541, 1545, 1546, 1547, 1550, 1552, 1555], "wise": [38, 41, 42, 54, 55, 56, 57, 66, 67, 88, 89, 90, 93, 94, 103, 104, 105, 106, 115, 116, 157, 189, 190, 193, 195, 198, 200, 203, 205, 208, 210, 213, 215, 218, 220, 223, 435, 436, 439, 441, 444, 451, 454, 456, 459, 466, 469, 471, 474, 481, 484, 486, 489, 491, 494, 496, 499, 501, 504, 506, 509, 531, 534, 536, 539, 541, 544, 561, 564, 566, 569, 571, 574, 596, 599, 601, 604, 626, 629, 631, 634, 636, 639, 641, 644, 646, 649, 651, 654, 656, 659, 661, 664, 671, 674, 681, 684, 696, 699, 731, 735, 751, 755, 1303, 1304, 1307], "sum": [38, 41, 42, 54, 55, 58, 59, 66, 67, 68, 69, 82, 83, 88, 91, 92, 93, 94, 103, 104, 107, 108, 115, 116, 117, 118, 131, 132, 141, 143, 150, 152, 159, 401, 425, 435, 451, 454, 626, 629, 849, 886, 889, 978, 981, 983, 986, 1093, 1154, 1157, 1159, 1203, 1206, 1247, 1251, 1262, 1266, 1277, 1281, 1287, 1293, 1296, 1298, 1301, 1501, 1507, 1510, 1512, 1515], "promot": [38, 41, 42, 50, 51, 54, 55, 56, 57, 66, 67, 88, 93, 94, 99, 100, 103, 104, 105, 106, 115, 116, 129, 130, 138, 146, 147, 150, 310, 313, 316, 328, 331, 384, 385, 386, 389, 395, 435, 441, 444, 446, 449, 451, 454, 456, 459, 461, 464, 466, 469, 476, 479, 481, 484, 491, 494, 496, 499, 501, 504, 506, 509, 516, 519, 521, 524, 531, 534, 546, 549, 551, 554, 606, 609, 611, 614, 616, 619, 621, 624, 626, 629, 646, 649, 661, 664, 681, 684, 696, 699, 711, 714, 716, 719, 721, 724, 736, 740, 741, 745, 751, 755, 1159, 1160, 1163, 1165, 1168, 1188, 1191, 1193, 1196, 1198, 1201, 1208, 1210, 1212, 1215, 1222, 1225, 1227, 1230, 1242, 1245, 1272, 1276, 1277, 1281, 1303, 1309, 1312, 1359, 1362, 1501, 1520, 1523, 1532, 1535], "y": [38, 39, 40, 41, 42, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 64, 65, 66, 67, 68, 69, 70, 71, 74, 75, 78, 79, 80, 81, 82, 83, 84, 85, 88, 89, 90, 93, 94, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 113, 114, 115, 116, 117, 118, 119, 120, 123, 124, 127, 128, 129, 130, 131, 132, 133, 134, 140, 141, 145, 153, 154, 156, 157, 159, 161, 189, 190, 193, 195, 198, 200, 203, 205, 208, 210, 213, 215, 218, 220, 223, 228, 240, 242, 258, 261, 269, 272, 284, 285, 287, 290, 305, 309, 310, 313, 316, 318, 321, 323, 326, 341, 343, 346, 349, 357, 360, 386, 389, 401, 407, 410, 415, 419, 420, 421, 424, 434, 435, 436, 439, 441, 444, 446, 449, 451, 454, 456, 459, 461, 464, 466, 469, 471, 474, 476, 479, 481, 484, 486, 489, 496, 499, 501, 504, 506, 509, 511, 514, 516, 519, 521, 524, 526, 529, 531, 534, 536, 539, 546, 549, 551, 554, 556, 559, 561, 564, 566, 569, 571, 574, 576, 579, 596, 599, 601, 604, 606, 609, 611, 614, 616, 619, 626, 629, 631, 634, 636, 639, 641, 644, 646, 649, 651, 654, 656, 659, 661, 664, 666, 669, 671, 674, 676, 679, 686, 689, 696, 699, 701, 704, 706, 709, 711, 714, 716, 719, 721, 724, 726, 729, 731, 735, 736, 740, 741, 745, 751, 755, 849, 850, 853, 857, 859, 866, 869, 871, 874, 878, 880, 896, 898, 906, 909, 911, 914, 928, 931, 934, 937, 940, 942, 945, 990, 991, 993, 996, 998, 1001, 1008, 1012, 1014, 1018, 1020, 1024, 1025, 1029, 1030, 1034, 1036, 1040, 1041, 1042, 1075, 1079, 1082, 1086, 1093, 1119, 1122, 1127, 1130, 1139, 1142, 1159, 1160, 1163, 1165, 1168, 1170, 1173, 1193, 1196, 1198, 1201, 1203, 1206, 1222, 1225, 1227, 1230, 1237, 1240, 1252, 1256, 1257, 1261, 1262, 1266, 1287, 1288, 1291, 1293, 1296, 1298, 1301, 1303, 1304, 1307, 1309, 1312, 1319, 1322, 1324, 1327, 1329, 1332, 1334, 1337, 1339, 1342, 1344, 1347, 1349, 1352, 1354, 1357, 1359, 1362, 1364, 1368, 1369, 1373, 1374, 1378, 1388, 1391, 1394, 1404, 1406, 1407, 1410, 1411, 1412, 1415, 1417, 1420, 1422, 1425, 1427, 1430, 1433, 1436, 1438, 1439, 1442, 1444, 1447, 1454, 1457, 1459, 1463, 1464, 1470, 1474, 1475, 1479, 1485, 1486, 1489, 1491, 1494, 1496, 1499, 1501, 1502, 1505, 1507, 1510, 1512, 1515, 1516, 1519, 1520, 1523, 1524, 1527, 1532, 1535, 1536, 1540, 1541, 1545, 1546, 1547, 1550, 1552, 1555], "z": [38, 41, 42, 54, 55, 58, 59, 66, 67, 68, 69, 74, 75, 88, 93, 94, 103, 104, 107, 108, 115, 116, 117, 118, 123, 124, 140, 141, 145, 159, 161, 401, 415, 435, 451, 454, 471, 474, 481, 484, 496, 499, 506, 509, 566, 569, 571, 574, 581, 584, 586, 589, 591, 594, 596, 599, 601, 604, 626, 629, 641, 644, 646, 649, 651, 654, 656, 659, 731, 735, 849, 857, 859, 906, 909, 937, 940, 942, 945, 983, 986, 996, 998, 1001, 1030, 1041, 1159, 1165, 1168, 1198, 1201, 1287, 1288, 1291, 1293, 1296, 1303, 1304, 1307, 1388, 1391, 1404, 1411, 1422, 1425, 1427, 1430, 1438, 1439, 1442, 1501, 1512, 1515, 1516, 1519, 1524, 1527, 1528, 1531], "__le__": [38, 41, 42], "equal": [38, 41, 42, 48, 49, 50, 51, 54, 55, 58, 59, 66, 67, 70, 71, 74, 75, 80, 81, 82, 83, 88, 91, 92, 93, 94, 99, 100, 103, 104, 107, 108, 115, 116, 119, 120, 123, 124, 129, 130, 141, 143, 145, 147, 228, 249, 250, 257, 258, 261, 310, 313, 316, 435, 491, 494, 501, 504, 576, 579, 581, 584, 681, 684, 701, 704, 849, 850, 853, 857, 859, 1041, 1159, 1176, 1179, 1208, 1210, 1212, 1215, 1227, 1230, 1303, 1304, 1307, 1314, 1317, 1349, 1352, 1379, 1383, 1411, 1427, 1430, 1464, 1465, 1469, 1470, 1474, 1475, 1479, 1480, 1484, 1485, 1486, 1489, 1496, 1499, 1501, 1520, 1523, 1532, 1535, 1536, 1540, 1541, 1545], "bool": [38, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 54, 55, 56, 57, 58, 59, 60, 61, 66, 67, 70, 71, 74, 75, 76, 77, 80, 81, 82, 83, 84, 85, 89, 90, 91, 92, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 113, 114, 115, 116, 117, 118, 119, 120, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 143, 145, 147, 152, 153, 155, 156, 159, 164, 225, 226, 228, 233, 235, 257, 263, 264, 269, 272, 310, 313, 316, 328, 331, 333, 335, 336, 337, 339, 340, 341, 343, 351, 352, 354, 355, 362, 363, 364, 367, 369, 372, 374, 377, 379, 382, 384, 391, 396, 400, 401, 406, 407, 410, 416, 417, 420, 421, 425, 432, 434, 435, 481, 484, 486, 489, 496, 499, 506, 509, 536, 539, 566, 569, 571, 574, 576, 579, 581, 584, 586, 589, 591, 594, 596, 599, 601, 604, 631, 634, 636, 639, 641, 644, 651, 654, 656, 659, 671, 674, 696, 699, 849, 850, 853, 857, 859, 860, 863, 878, 880, 896, 898, 899, 902, 917, 918, 922, 923, 926, 931, 934, 947, 950, 953, 956, 958, 961, 963, 966, 968, 971, 973, 974, 996, 997, 1008, 1012, 1020, 1024, 1036, 1040, 1042, 1047, 1050, 1053, 1056, 1057, 1059, 1062, 1065, 1066, 1069, 1070, 1073, 1074, 1075, 1079, 1092, 1093, 1132, 1135, 1159, 1160, 1163, 1203, 1206, 1247, 1251, 1267, 1271, 1277, 1281, 1303, 1339, 1342, 1349, 1352, 1374, 1378, 1384, 1385, 1386, 1387, 1388, 1389, 1390, 1394, 1398, 1399, 1400, 1411, 1412, 1415, 1438, 1439, 1442, 1444, 1447, 1454, 1457, 1485, 1486, 1489, 1496, 1499, 1501, 1502, 1505, 1507, 1510, 1516, 1519, 1520, 1523, 1524, 1527, 1528, 1531, 1532, 1535, 1536, 1540, 1541, 1545, 1546, 1547, 1550, 1552, 1555], "__radd__": [38, 41, 42, 88, 93, 94, 145, 146, 153], "__rrshift__": [38, 41, 42, 88, 93, 94], "bitwise_right_shift": [38, 41, 42, 54, 55, 103, 104, 435], "32": [38, 41, 42, 54, 55, 74, 75, 88, 93, 94, 103, 104, 105, 106, 123, 124, 162, 189, 195, 198, 310, 345, 435, 446, 449, 501, 504, 849, 942, 945, 1093, 1119, 1122, 1127, 1130, 1139, 1142, 1159, 1198, 1201, 1222, 1225, 1411, 1427, 1430, 1438, 1459, 1463, 1501, 1512, 1515], "__rshift__": [38, 41, 42, 88, 93, 94], "__rsub__": [38, 41, 42, 88, 93, 94], "subtract": [38, 41, 42, 54, 55, 88, 93, 94, 103, 104, 139, 141, 145, 435], "__sub__": [38, 41, 42, 88, 93, 94, 139, 141, 145, 149, 161], "nativearrai": [38, 41, 42, 43, 46, 47, 48, 49, 50, 51, 54, 55, 58, 59, 60, 61, 64, 65, 66, 67, 68, 69, 70, 71, 74, 75, 89, 90, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 113, 114, 115, 116, 117, 118, 119, 120, 123, 124, 125, 126, 129, 130, 131, 132, 133, 134, 139, 141, 145, 147, 148, 149, 150, 151, 152, 153, 156, 159, 161, 177, 187, 189, 190, 193, 195, 198, 200, 203, 205, 208, 210, 213, 215, 218, 220, 223, 228, 233, 235, 240, 242, 244, 247, 258, 261, 263, 264, 266, 267, 269, 272, 274, 277, 279, 282, 287, 290, 292, 296, 297, 301, 305, 309, 310, 313, 316, 318, 321, 323, 326, 328, 331, 341, 343, 346, 349, 357, 360, 364, 367, 369, 372, 374, 377, 379, 382, 385, 386, 389, 395, 401, 406, 407, 410, 419, 425, 426, 430, 435, 436, 439, 441, 444, 446, 449, 451, 454, 456, 459, 461, 464, 466, 469, 471, 474, 476, 479, 481, 484, 486, 489, 491, 494, 496, 499, 501, 504, 506, 509, 511, 514, 516, 519, 521, 524, 526, 529, 531, 534, 536, 539, 541, 544, 546, 549, 551, 554, 556, 559, 561, 564, 566, 569, 571, 574, 576, 579, 581, 584, 586, 589, 591, 594, 596, 599, 601, 604, 606, 609, 611, 614, 616, 619, 621, 624, 626, 629, 631, 634, 636, 639, 641, 644, 646, 649, 651, 654, 656, 659, 661, 664, 666, 669, 671, 674, 676, 679, 681, 684, 686, 689, 691, 694, 696, 699, 701, 704, 706, 709, 711, 714, 716, 719, 721, 724, 726, 729, 731, 735, 736, 740, 741, 745, 746, 750, 751, 755, 849, 850, 853, 857, 859, 860, 863, 866, 869, 871, 874, 881, 884, 886, 889, 891, 894, 899, 902, 906, 909, 911, 914, 919, 923, 926, 931, 934, 937, 940, 942, 945, 947, 950, 958, 961, 968, 971, 978, 981, 983, 986, 988, 996, 998, 1001, 1003, 1006, 1008, 1012, 1014, 1018, 1020, 1024, 1025, 1029, 1031, 1036, 1040, 1042, 1043, 1046, 1047, 1050, 1053, 1056, 1057, 1059, 1062, 1065, 1066, 1069, 1070, 1073, 1075, 1079, 1082, 1086, 1093, 1095, 1098, 1100, 1103, 1105, 1108, 1110, 1112, 1114, 1117, 1119, 1122, 1124, 1125, 1127, 1130, 1132, 1135, 1139, 1142, 1144, 1147, 1149, 1152, 1154, 1157, 1159, 1160, 1163, 1165, 1168, 1170, 1173, 1176, 1179, 1181, 1184, 1185, 1187, 1188, 1191, 1193, 1196, 1198, 1201, 1203, 1206, 1208, 1210, 1212, 1215, 1217, 1220, 1222, 1225, 1227, 1230, 1232, 1235, 1237, 1240, 1242, 1245, 1247, 1251, 1252, 1256, 1257, 1261, 1262, 1266, 1267, 1271, 1272, 1276, 1277, 1281, 1282, 1286, 1287, 1288, 1291, 1293, 1296, 1298, 1301, 1303, 1304, 1307, 1309, 1312, 1314, 1317, 1319, 1322, 1324, 1327, 1329, 1332, 1334, 1337, 1339, 1342, 1344, 1347, 1349, 1352, 1354, 1357, 1359, 1362, 1364, 1368, 1369, 1373, 1374, 1378, 1379, 1383, 1388, 1390, 1391, 1400, 1404, 1405, 1406, 1407, 1410, 1411, 1412, 1415, 1417, 1420, 1422, 1425, 1427, 1430, 1433, 1436, 1438, 1439, 1442, 1444, 1447, 1449, 1452, 1454, 1457, 1459, 1463, 1464, 1465, 1469, 1470, 1474, 1475, 1479, 1480, 1484, 1485, 1486, 1489, 1491, 1494, 1496, 1499, 1501, 1502, 1505, 1507, 1510, 1512, 1515, 1516, 1519, 1520, 1523, 1524, 1527, 1528, 1531, 1532, 1535, 1536, 1540, 1541, 1545, 1546, 1547, 1550, 1552, 1555, 1557], "resid": [38, 41, 42, 153, 159, 163, 1303, 1319, 1322], "is_vari": [38, 41, 42, 60, 61, 109, 110, 152, 161, 1042], "trainabl": [38, 41, 42, 60, 61, 109, 110, 146, 160, 162, 163, 1042, 1057, 1059], "mt": [38, 41, 42, 161], "matric": [38, 41, 42, 48, 49, 66, 67, 115, 116, 175, 228, 269, 272, 292, 296, 297, 301, 1093, 1139, 1142, 1159, 1160, 1163, 1170, 1173, 1176, 1179, 1181, 1184, 1185, 1187, 1193, 1196, 1203, 1206, 1208, 1210, 1212, 1215, 1217, 1220, 1227, 1230, 1232, 1235, 1237, 1240, 1242, 1245, 1247, 1251, 1252, 1256, 1262, 1266], "n": [38, 41, 42, 48, 49, 66, 67, 70, 71, 74, 75, 76, 77, 82, 83, 84, 85, 103, 104, 115, 116, 119, 120, 123, 124, 125, 126, 131, 132, 133, 134, 137, 155, 228, 269, 272, 292, 296, 297, 301, 1093, 1132, 1135, 1159, 1176, 1179, 1188, 1191, 1198, 1201, 1203, 1206, 1208, 1210, 1212, 1215, 1217, 1220, 1222, 1225, 1227, 1230, 1232, 1235, 1247, 1251, 1252, 1256, 1262, 1266, 1267, 1271, 1272, 1276, 1277, 1281, 1303, 1314, 1317, 1319, 1322, 1329, 1332, 1359, 1362, 1379, 1383, 1388, 1396, 1411, 1417, 1420, 1422, 1425, 1427, 1430, 1438, 1454, 1457, 1501, 1520, 1523, 1532, 1535, 1536, 1540, 1541, 1545, 1546, 1547, 1550, 1552, 1555], "ndim": [38, 41, 42, 76, 77, 125, 126, 155, 849, 1041, 1159, 1232, 1235, 1247, 1251, 1438, 1454, 1457], "int": [38, 41, 42, 48, 49, 50, 51, 54, 55, 56, 57, 58, 59, 60, 61, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 80, 81, 82, 83, 84, 85, 89, 90, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 129, 130, 131, 132, 133, 134, 141, 143, 144, 145, 147, 148, 149, 150, 152, 153, 154, 155, 156, 157, 159, 164, 189, 200, 203, 215, 218, 220, 223, 225, 226, 228, 233, 235, 249, 250, 257, 258, 261, 263, 264, 266, 267, 279, 282, 292, 296, 297, 301, 310, 323, 326, 339, 345, 346, 349, 357, 360, 374, 377, 401, 417, 418, 419, 425, 426, 430, 435, 451, 454, 481, 484, 486, 489, 491, 494, 496, 499, 501, 504, 506, 509, 731, 735, 849, 855, 881, 884, 886, 889, 891, 894, 899, 902, 906, 909, 923, 926, 978, 981, 998, 1001, 1041, 1042, 1043, 1046, 1047, 1050, 1062, 1065, 1093, 1095, 1098, 1100, 1103, 1105, 1108, 1110, 1112, 1114, 1117, 1119, 1122, 1124, 1125, 1127, 1130, 1159, 1165, 1168, 1176, 1179, 1203, 1206, 1208, 1210, 1257, 1261, 1262, 1266, 1267, 1271, 1272, 1276, 1277, 1281, 1287, 1293, 1296, 1298, 1301, 1303, 1309, 1312, 1314, 1317, 1319, 1322, 1324, 1327, 1329, 1332, 1334, 1337, 1339, 1342, 1344, 1347, 1349, 1352, 1354, 1357, 1359, 1362, 1364, 1368, 1369, 1373, 1374, 1378, 1379, 1383, 1384, 1385, 1386, 1387, 1388, 1391, 1394, 1399, 1400, 1404, 1405, 1406, 1407, 1410, 1411, 1412, 1415, 1417, 1420, 1422, 1425, 1432, 1433, 1436, 1438, 1439, 1442, 1444, 1447, 1454, 1457, 1485, 1486, 1489, 1496, 1499, 1501, 1502, 1505, 1507, 1510, 1516, 1519, 1520, 1523, 1524, 1527, 1528, 1531, 1532, 1535, 1536, 1540, 1541, 1545, 1546, 1547, 1550, 1552, 1555], "size": [38, 41, 42, 56, 57, 58, 59, 66, 67, 70, 71, 74, 75, 76, 77, 88, 91, 92, 93, 94, 105, 106, 107, 108, 115, 116, 119, 120, 123, 124, 125, 126, 154, 155, 162, 228, 263, 264, 266, 267, 401, 423, 424, 425, 849, 978, 981, 1093, 1154, 1157, 1159, 1176, 1179, 1188, 1191, 1203, 1206, 1222, 1225, 1232, 1235, 1247, 1251, 1272, 1276, 1303, 1319, 1322, 1344, 1347, 1349, 1352, 1354, 1357, 1411, 1412, 1415, 1438, 1439, 1442, 1454, 1457, 1546, 1547, 1550, 1552, 1555], "overview": [38, 88, 155, 158, 175, 189, 225, 227, 228, 310, 401, 435, 756, 849, 1042, 1093, 1159, 1287, 1303, 1384, 1388, 1406, 1411, 1438, 1485, 1501, 1546, 1566, 1569, 1571, 1581, 1593, 1595, 1597, 1603], "forum": [38, 88, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 189, 225, 227, 228, 310, 401, 435, 756, 849, 1042, 1093, 1159, 1287, 1303, 1384, 1388, 1406, 1411, 1438, 1485, 1501, 1546, 1566, 1569, 1571, 1581, 1593, 1595, 1597, 1603], "abc": [39, 40, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 91, 92, 161, 401, 402, 849, 896, 898, 1388, 1405], "gelu": [39, 40, 89, 90, 189], "approxim": [39, 40, 66, 67, 89, 90, 115, 116, 146, 153, 189, 190, 193, 435, 441, 444, 446, 449, 456, 459, 461, 464, 466, 469, 471, 474, 516, 519, 521, 524, 546, 549, 551, 554, 606, 609, 611, 614, 616, 619, 621, 624, 681, 684, 711, 714, 716, 719, 736, 740, 741, 745, 1159, 1212, 1215, 1227, 1230], "185": [39, 40, 89, 90], "046": [39, 40, 89, 90], "leaky_relu": [39, 40, 89, 90, 154, 189, 1558], "alpha": [39, 40, 54, 55, 89, 90, 103, 104, 153, 154, 189, 195, 198, 435, 451, 454, 731, 735], "39": [39, 40, 54, 55, 74, 75, 89, 90, 103, 104, 109, 110, 123, 124, 189, 195, 198, 435, 461, 464, 546, 549, 606, 609, 616, 619, 626, 629, 1042, 1043, 1046, 1159, 1222, 1225, 1411, 1422, 1425, 1501, 1512, 1515], "85": [39, 40, 74, 75, 89, 90, 103, 104, 109, 110, 113, 114, 123, 124, 189, 195, 198, 435, 501, 504, 506, 509, 686, 689, 849, 998, 1001, 1042, 1053, 1056, 1093, 1139, 1142, 1411, 1427, 1430], "17": [39, 40, 56, 57, 88, 89, 90, 93, 94, 103, 104, 107, 108, 109, 110, 113, 114, 123, 124, 141, 145, 155, 189, 195, 198, 435, 531, 534, 626, 629, 849, 942, 945, 1042, 1043, 1046, 1093, 1139, 1142, 1159, 1176, 1179, 1252, 1256, 1388, 1396, 1411, 1427, 1430], "log_softmax": [39, 40, 89, 90, 189], "98": [39, 40, 60, 61, 74, 75, 89, 90, 103, 104, 109, 110, 123, 124, 189, 200, 203, 435, 506, 509, 1042, 1053, 1056, 1159, 1222, 1225, 1388, 1390, 1438, 1459, 1463, 1501, 1512, 1515], "37": [39, 40, 54, 55, 89, 90, 103, 104, 435, 461, 464, 501, 504, 736, 740, 1093, 1139, 1142, 1388, 1396, 1411, 1422, 1425], "35": [39, 40, 64, 65, 89, 90, 103, 104, 113, 114, 115, 116, 123, 124, 435, 471, 474, 721, 724, 1093, 1139, 1142, 1154, 1157, 1159, 1165, 1168, 1438, 1459, 1463, 1501, 1512, 1515], "0719": [39, 40, 89, 90], "62": [39, 40, 89, 90, 105, 106, 121, 122, 123, 124, 435, 716, 719, 1406, 1407, 1410, 1411, 1427, 1430], "221": [39, 40], "82": [39, 40, 54, 55, 109, 110, 123, 124, 1042, 1043, 1046], "relu": [39, 40, 86, 87, 89, 90, 154, 162, 163, 189, 195, 198, 1558], "sigmoid": [39, 40, 89, 90, 159, 162, 163, 189, 1558], "269": [39, 40, 89, 90, 189, 210, 213], "731": [39, 40, 89, 90, 189, 210, 213], "881": [39, 40, 54, 55, 89, 90, 103, 104, 189, 210, 213, 435, 461, 464, 526, 529], "softmax": [39, 40, 86, 87, 89, 90, 189, 1093, 1149, 1152, 1154, 1157, 1558], "422": [39, 40, 89, 90, 189, 215, 218], "155": [39, 40, 89, 90, 113, 114, 189, 215, 218, 1093, 1139, 1142], "softplu": [39, 40, 89, 90, 157, 189, 1558], "beta": [39, 40, 72, 73, 89, 90, 105, 106, 121, 122, 157, 189, 220, 223, 1406, 1407, 1410], "threshold": [39, 40, 54, 55, 89, 90, 103, 104, 157, 189, 220, 223, 435, 651, 654, 656, 659], "3461": [39, 40, 89, 90, 189, 220, 223], "6491": [39, 40, 89, 90, 189, 220, 223], "22": [39, 40, 54, 55, 56, 57, 58, 59, 74, 75, 82, 83, 89, 90, 107, 108, 113, 114, 123, 124, 141, 189, 220, 223, 435, 506, 509, 849, 937, 940, 942, 945, 1093, 1139, 1142, 1159, 1176, 1179, 1193, 1196, 1222, 1225, 1388, 1396, 1405, 1438, 1459, 1463, 1501, 1512, 1515], "09": [39, 40, 109, 110, 123, 124, 189, 220, 223, 435, 616, 619, 726, 729, 1042, 1043, 1046, 1093, 1154, 1157], "31": [39, 40, 54, 55, 103, 104, 107, 108, 113, 114, 123, 124, 162, 189, 200, 203, 220, 223, 435, 501, 504, 626, 629, 721, 724, 849, 866, 869, 1159, 1252, 1256], "55": [39, 40, 123, 124, 435, 501, 504, 849, 937, 940, 1159, 1193, 1196, 1222, 1225, 1252, 1256, 1411, 1422, 1425, 1501, 1512, 1515], "13": [39, 40, 54, 55, 56, 57, 64, 65, 74, 75, 82, 83, 103, 104, 105, 106, 107, 108, 109, 110, 113, 114, 119, 120, 123, 124, 131, 132, 141, 145, 155, 189, 220, 223, 310, 357, 360, 401, 412, 435, 481, 484, 506, 509, 521, 524, 551, 554, 561, 564, 721, 724, 849, 866, 869, 871, 874, 886, 889, 942, 945, 991, 998, 1001, 1042, 1043, 1046, 1093, 1139, 1142, 1154, 1157, 1159, 1176, 1179, 1222, 1225, 1252, 1256, 1303, 1374, 1378, 1438, 1459, 1463, 1464, 1465, 1469, 1501, 1502, 1505, 1507, 1510, 1512, 1515], "collect": [43, 91, 92, 95, 147, 154, 155, 175, 189, 225, 401, 849, 1042, 1093, 1287, 1388, 1401, 1406, 1411], "args_to_ivi": 43, "include_deriv": [43, 44, 45, 46, 47, 95, 96, 1388, 1390, 1400], "nest": [43, 44, 45, 46, 47, 88, 91, 92, 93, 94, 95, 96, 139, 141, 150, 156, 162, 163, 176, 849, 1014, 1018, 1041, 1042, 1074, 1080, 1092, 1384, 1385, 1386, 1389, 1390, 1391, 1392, 1393, 1394, 1395, 1396, 1397, 1398, 1399, 1400, 1401, 1402, 1403, 1404, 1405, 1557], "unchang": [43, 44, 45, 46, 47], "deriv": [43, 44, 45, 46, 47, 48, 49, 60, 61, 95, 96, 97, 98, 109, 110, 143, 144, 161, 163, 228, 244, 247, 258, 261, 287, 290, 305, 309, 1042, 1043, 1046, 1047, 1050, 1053, 1056, 1061, 1062, 1065, 1066, 1069, 1070, 1073, 1388, 1390, 1400], "tupl": [43, 44, 45, 46, 47, 48, 49, 50, 51, 56, 57, 58, 59, 64, 65, 66, 67, 70, 71, 76, 77, 78, 79, 82, 83, 84, 85, 89, 90, 91, 92, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 113, 114, 115, 116, 117, 118, 119, 120, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 143, 148, 149, 154, 155, 159, 162, 163, 176, 228, 233, 235, 274, 277, 310, 323, 326, 351, 352, 354, 355, 385, 395, 401, 406, 413, 414, 849, 899, 902, 1041, 1042, 1043, 1046, 1062, 1065, 1093, 1105, 1108, 1110, 1112, 1119, 1122, 1124, 1125, 1127, 1130, 1144, 1147, 1159, 1181, 1184, 1203, 1206, 1212, 1215, 1227, 1230, 1232, 1235, 1237, 1240, 1247, 1251, 1257, 1261, 1277, 1281, 1303, 1309, 1312, 1314, 1317, 1329, 1332, 1344, 1347, 1359, 1362, 1379, 1383, 1384, 1385, 1386, 1387, 1388, 1390, 1391, 1393, 1395, 1396, 1397, 1399, 1400, 1402, 1403, 1404, 1405, 1438, 1454, 1457, 1464, 1465, 1469, 1470, 1474, 1475, 1479, 1501, 1516, 1519, 1524, 1527, 1528, 1531, 1532, 1535, 1536, 1540, 1541, 1545, 1546, 1547, 1550, 1552, 1555], "kei": [43, 44, 45, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 113, 114, 115, 116, 117, 118, 119, 120, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 141, 148, 154, 155, 162, 849, 855, 876, 1093, 1149, 1152, 1154, 1157, 1384, 1385, 1386, 1388, 1391, 1397, 1401], "word": [43, 44, 45, 141, 153, 228, 230, 231, 1411, 1427, 1430, 1557], "args_to_n": [43, 152], "cont_inplac": [43, 45, 47], "to_ivi": [43, 95, 96, 1388, 1401], "leaf": [43, 46, 91, 92, 131, 132, 141, 150, 162, 1388, 1389, 1398, 1399], "union": [43, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 82, 83, 84, 85, 89, 90, 91, 92, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 139, 141, 143, 144, 145, 147, 148, 149, 150, 152, 153, 156, 157, 159, 164, 189, 190, 193, 195, 198, 200, 203, 205, 208, 210, 213, 215, 218, 220, 223, 225, 226, 228, 230, 231, 233, 235, 240, 242, 243, 244, 247, 249, 250, 257, 258, 261, 263, 264, 266, 267, 269, 272, 274, 277, 279, 282, 284, 285, 287, 290, 292, 296, 297, 301, 302, 304, 305, 309, 310, 311, 312, 313, 316, 318, 321, 323, 326, 334, 335, 336, 337, 339, 340, 341, 343, 345, 346, 349, 357, 360, 362, 363, 364, 367, 369, 372, 374, 377, 379, 382, 384, 386, 389, 391, 392, 393, 394, 395, 400, 401, 403, 404, 405, 406, 407, 410, 412, 415, 419, 420, 421, 422, 423, 424, 425, 426, 430, 431, 434, 435, 436, 439, 441, 444, 446, 449, 451, 454, 456, 459, 461, 464, 466, 469, 471, 474, 476, 479, 481, 484, 486, 489, 491, 494, 496, 499, 501, 504, 506, 509, 511, 514, 516, 519, 521, 524, 526, 529, 531, 534, 536, 539, 541, 544, 546, 549, 551, 554, 556, 559, 561, 564, 566, 569, 571, 574, 576, 579, 581, 584, 586, 589, 591, 594, 596, 599, 601, 604, 606, 609, 611, 614, 616, 619, 621, 624, 626, 629, 631, 634, 636, 639, 641, 644, 646, 649, 651, 654, 656, 659, 661, 664, 666, 669, 671, 674, 676, 679, 681, 684, 686, 689, 691, 694, 696, 699, 701, 704, 706, 709, 711, 714, 716, 719, 721, 724, 726, 729, 731, 735, 736, 740, 741, 745, 746, 750, 751, 755, 849, 850, 853, 857, 859, 860, 863, 866, 869, 871, 874, 881, 884, 886, 889, 891, 894, 899, 902, 906, 909, 911, 914, 919, 923, 926, 931, 934, 937, 940, 942, 945, 947, 950, 958, 961, 968, 971, 974, 978, 981, 983, 986, 996, 998, 1001, 1003, 1006, 1008, 1012, 1013, 1014, 1018, 1019, 1020, 1024, 1025, 1029, 1036, 1040, 1041, 1042, 1043, 1046, 1047, 1050, 1053, 1056, 1057, 1059, 1062, 1065, 1066, 1069, 1070, 1073, 1075, 1079, 1082, 1086, 1093, 1095, 1098, 1100, 1103, 1105, 1108, 1110, 1112, 1114, 1117, 1119, 1122, 1124, 1125, 1127, 1130, 1132, 1135, 1139, 1142, 1144, 1147, 1149, 1152, 1154, 1157, 1159, 1160, 1163, 1165, 1168, 1170, 1173, 1176, 1179, 1181, 1184, 1185, 1187, 1188, 1191, 1193, 1196, 1198, 1201, 1203, 1206, 1208, 1210, 1212, 1215, 1217, 1220, 1222, 1225, 1227, 1230, 1232, 1235, 1237, 1240, 1242, 1245, 1247, 1251, 1252, 1256, 1257, 1261, 1262, 1266, 1267, 1271, 1272, 1276, 1277, 1281, 1282, 1286, 1287, 1288, 1291, 1293, 1296, 1298, 1301, 1303, 1304, 1307, 1309, 1312, 1314, 1317, 1319, 1322, 1324, 1327, 1329, 1332, 1334, 1337, 1339, 1342, 1344, 1347, 1349, 1352, 1354, 1357, 1359, 1362, 1364, 1368, 1369, 1373, 1374, 1378, 1379, 1383, 1384, 1385, 1386, 1387, 1388, 1389, 1390, 1391, 1399, 1400, 1404, 1405, 1406, 1407, 1410, 1411, 1412, 1415, 1417, 1420, 1422, 1425, 1427, 1430, 1433, 1436, 1438, 1439, 1442, 1444, 1447, 1449, 1452, 1454, 1457, 1459, 1463, 1464, 1465, 1469, 1470, 1474, 1475, 1479, 1480, 1484, 1485, 1486, 1489, 1491, 1494, 1496, 1499, 1501, 1502, 1505, 1507, 1510, 1512, 1515, 1516, 1519, 1520, 1523, 1524, 1527, 1528, 1531, 1532, 1535, 1536, 1540, 1541, 1545, 1546, 1547, 1550, 1552, 1555], "travers": [43, 46, 47, 95, 96, 141, 143, 159, 1388, 1400], "lowest": [43, 46, 47, 74, 75, 95, 96, 123, 124, 150, 176, 1388, 1400, 1411, 1417, 1420, 1557], "to_n": [43, 95, 96, 159], "asarrai": [48, 49, 58, 59, 107, 108, 151, 152, 228, 849, 923, 926, 998, 1001, 1093, 1095, 1098, 1464, 1470, 1474], "boolean": [48, 49, 50, 51, 54, 55, 58, 59, 60, 61, 70, 71, 76, 77, 91, 92, 99, 100, 103, 104, 107, 108, 109, 110, 119, 120, 125, 126, 141, 153, 154, 155, 157, 228, 233, 235, 257, 310, 313, 316, 363, 400, 401, 416, 432, 435, 481, 484, 486, 489, 496, 499, 506, 509, 631, 634, 636, 639, 641, 644, 646, 649, 849, 850, 853, 857, 859, 919, 931, 934, 936, 952, 953, 956, 958, 961, 963, 966, 968, 971, 988, 989, 992, 994, 1036, 1040, 1042, 1057, 1059, 1074, 1092, 1303, 1339, 1342, 1384, 1385, 1386, 1388, 1398, 1501, 1524, 1527], "nativedtyp": [48, 49, 50, 51, 74, 75, 76, 77, 82, 83, 97, 98, 105, 106, 123, 124, 125, 126, 131, 132, 143, 144, 149, 153, 156, 159, 228, 230, 231, 233, 235, 243, 244, 247, 249, 250, 257, 258, 261, 263, 264, 266, 267, 274, 277, 284, 285, 287, 290, 302, 304, 305, 309, 310, 312, 313, 316, 334, 335, 336, 337, 339, 340, 341, 343, 345, 362, 363, 384, 391, 400, 1411, 1417, 1420, 1422, 1425, 1427, 1430, 1438, 1439, 1442, 1444, 1447, 1501, 1502, 1505, 1507, 1510, 1528, 1531, 1536, 1540], "datatyp": [48, 49, 91, 92, 228, 258, 261, 274, 277, 310, 334, 384, 391], "nativedevic": [48, 49, 52, 53, 74, 75, 97, 98, 101, 102, 123, 124, 143, 144, 147, 149, 156, 228, 230, 231, 233, 235, 243, 244, 247, 249, 250, 257, 258, 261, 263, 264, 266, 267, 274, 277, 279, 282, 284, 285, 287, 290, 302, 304, 305, 309, 401, 404, 405, 406, 407, 410, 412, 415, 419, 420, 421, 422, 423, 424, 425, 426, 430, 431, 434, 1411, 1412, 1415, 1417, 1420, 1422, 1425, 1427, 1430], "interpret": [48, 49, 142, 228, 233, 235, 274, 277], "copy_arrai": [48, 49, 228], "empty_lik": [48, 49, 97, 98, 157, 228], "deafult": [48, 49, 76, 77, 125, 126, 228, 244, 247, 1438, 1439, 1442], "uniniti": [48, 49, 228, 243, 244, 247], "from_dlpack": [48, 49, 97, 98, 228], "full_lik": [48, 49, 97, 98, 156, 228], "float": [48, 49, 50, 51, 54, 55, 56, 57, 58, 59, 60, 61, 66, 67, 68, 69, 72, 73, 74, 75, 82, 83, 89, 90, 97, 98, 99, 100, 103, 104, 105, 106, 107, 108, 109, 110, 115, 116, 117, 118, 121, 122, 123, 124, 131, 132, 138, 141, 143, 146, 147, 149, 150, 151, 152, 154, 155, 156, 157, 159, 161, 163, 189, 195, 198, 220, 223, 227, 228, 230, 231, 233, 235, 243, 249, 250, 257, 258, 261, 263, 264, 266, 267, 284, 285, 302, 304, 310, 313, 316, 333, 336, 337, 346, 349, 362, 369, 372, 385, 386, 389, 401, 412, 420, 423, 424, 431, 434, 435, 436, 439, 441, 444, 446, 449, 451, 454, 456, 459, 461, 464, 466, 469, 471, 474, 476, 479, 506, 509, 511, 514, 516, 519, 521, 524, 531, 534, 536, 539, 546, 549, 551, 554, 556, 559, 561, 564, 566, 569, 571, 574, 576, 579, 581, 584, 586, 589, 591, 594, 596, 599, 606, 609, 611, 614, 616, 619, 621, 624, 626, 629, 661, 664, 666, 669, 671, 674, 676, 679, 681, 684, 691, 694, 696, 699, 701, 704, 711, 714, 716, 719, 721, 724, 731, 735, 736, 740, 741, 745, 746, 750, 751, 755, 849, 865, 866, 869, 871, 874, 899, 902, 920, 921, 928, 931, 934, 990, 991, 993, 998, 1001, 1003, 1006, 1036, 1040, 1042, 1043, 1046, 1047, 1050, 1053, 1056, 1062, 1065, 1066, 1069, 1070, 1073, 1093, 1132, 1135, 1154, 1157, 1159, 1160, 1163, 1170, 1173, 1181, 1184, 1185, 1187, 1193, 1196, 1203, 1206, 1208, 1210, 1212, 1215, 1227, 1230, 1232, 1235, 1237, 1240, 1242, 1245, 1247, 1251, 1277, 1281, 1287, 1288, 1291, 1293, 1296, 1298, 1301, 1384, 1385, 1386, 1387, 1388, 1394, 1406, 1407, 1410, 1411, 1422, 1425, 1427, 1430, 1464, 1465, 1469, 1470, 1474, 1475, 1479, 1480, 1484, 1501, 1502, 1505, 1507, 1510, 1516, 1519, 1520, 1523, 1524, 1527, 1528, 1531, 1532, 1535, 1536, 1540, 1541, 1545], "scalar": [48, 49, 54, 55, 56, 57, 58, 59, 89, 90, 97, 98, 103, 104, 107, 108, 115, 116, 143, 176, 228, 258, 261, 279, 282, 435, 451, 454, 731, 735, 849, 1025, 1029, 1036, 1040, 1159, 1277, 1281], "fill": [48, 49, 74, 75, 76, 77, 91, 92, 97, 98, 123, 124, 125, 126, 154, 228, 243, 257, 258, 261, 279, 282, 284, 285, 287, 290, 302, 304, 305, 309, 1411, 1417, 1420, 1438, 1454, 1457], "000123": [48, 49, 228, 258, 261], "ones": [48, 49, 60, 61, 74, 75, 91, 92, 97, 98, 123, 124, 145, 149, 155, 161, 162, 228, 249, 250, 258, 261, 279, 282, 287, 290, 305, 309, 435, 511, 514, 1042, 1043, 1046, 1558], "meshgrid": [48, 49, 97, 98, 228], "spars": [48, 49, 68, 69, 97, 98, 117, 118, 228, 269, 272, 1287, 1298, 1301], "xy": [48, 49, 97, 98, 228, 269, 272], "one_hot": [48, 49, 97, 98, 164, 228, 1558], "on_valu": [48, 49, 97, 98, 228, 266, 267, 279, 282], "off_valu": [48, 49, 97, 98, 228, 266, 267, 279, 282], "scatter": [48, 49, 58, 59, 97, 98, 107, 108, 157, 228, 279, 282, 849, 978, 981, 983, 986], "hot": [48, 49, 97, 98, 228, 279, 282], "float32": [48, 49, 50, 51, 64, 65, 97, 98, 99, 100, 107, 108, 113, 114, 131, 132, 143, 145, 155, 228, 266, 267, 305, 309, 310, 311, 312, 341, 343, 345, 346, 349, 351, 352, 362, 369, 372, 374, 377, 435, 616, 619, 849, 1020, 1024, 1093, 1105, 1108], "cuda": [48, 49, 74, 75, 107, 108, 123, 124, 159, 176, 228, 263, 264, 266, 267, 279, 282, 401, 403, 422, 423, 1411, 1412, 1415, 1417, 1420, 1422, 1425, 1427, 1430, 1557], "unless": [48, 49, 66, 67, 97, 98, 140, 144, 152, 176, 228, 279, 282, 435, 661, 664, 1159, 1212, 1215], "overrid": [48, 49, 97, 98, 228, 279, 282], "ones_lik": [48, 49, 97, 98, 140, 164, 228, 1558], "tril": [48, 49, 97, 98, 228], "k": [48, 49, 64, 65, 66, 67, 74, 75, 97, 98, 103, 104, 113, 114, 115, 116, 123, 124, 137, 138, 153, 159, 228, 249, 250, 292, 296, 297, 301, 849, 857, 859, 1093, 1154, 1157, 1159, 1198, 1201, 1203, 1206, 1232, 1235, 1242, 1245, 1247, 1251, 1252, 1256, 1262, 1266, 1388, 1396, 1411, 1417, 1420, 1422, 1425, 1427, 1430, 1438, 1454, 1457], "innermost": [48, 49, 66, 67, 115, 116, 228, 292, 296, 297, 301, 1159, 1160, 1163, 1170, 1173, 1176, 1179, 1181, 1184, 1185, 1187, 1193, 1196, 1203, 1206, 1208, 1210, 1212, 1215, 1217, 1220, 1227, 1230, 1232, 1235, 1237, 1240, 1242, 1245, 1247, 1251, 1252, 1256, 1262, 1266], "mxn": [48, 49, 66, 67, 115, 116, 228, 292, 296, 297, 301, 1159, 1176, 1179, 1203, 1206, 1212, 1215, 1217, 1220, 1227, 1230, 1232, 1235, 1252, 1256, 1262, 1266], "diagon": [48, 49, 66, 67, 115, 116, 228, 249, 250, 292, 296, 297, 301, 1159, 1262, 1266], "triangular": [48, 49, 66, 67, 115, 116, 228, 292, 296, 297, 301, 1159, 1160, 1163, 1232, 1235], "triu": [48, 49, 97, 98, 228], "upper": [48, 49, 66, 67, 74, 75, 115, 116, 123, 124, 152, 155, 228, 249, 250, 297, 301, 1159, 1160, 1163, 1232, 1235, 1411, 1427, 1430], "zeros_lik": [48, 49, 97, 98, 153, 157, 228, 310, 313, 316, 435, 641, 644, 1042, 1043, 1046, 1053, 1056, 1062, 1065, 1070, 1073, 1093, 1127, 1130, 1303, 1304, 1307, 1558], "creation": [49, 88, 91, 92, 93, 94, 98, 143, 144, 147, 149, 151, 154, 155, 156, 159, 229, 230, 231, 233, 235, 237, 238, 239, 240, 242, 243, 244, 247, 249, 250, 252, 255, 257, 258, 261, 263, 264, 266, 267, 269, 272, 274, 277, 279, 282, 284, 285, 287, 290, 292, 296, 297, 301, 302, 304, 305, 309], "data_typ": [50, 51, 99, 100, 143, 155, 156, 310, 311, 312, 313, 316, 318, 321, 323, 326, 328, 331, 333, 334, 335, 336, 337, 339, 340, 341, 343, 345, 346, 349, 351, 352, 354, 355, 357, 360, 362, 363, 364, 367, 369, 372, 374, 377, 379, 382, 384, 385, 386, 389, 391, 392, 393, 394, 395, 396, 397, 398, 399, 400], "astyp": [50, 51, 64, 65, 99, 100, 113, 114, 143, 152, 153, 157, 310, 1093, 1105, 1108], "irrespect": [50, 51, 99, 100, 141, 152, 161, 310, 313, 316, 1159, 1247, 1251], "rule": [50, 51, 66, 67, 99, 100, 115, 116, 138, 139, 141, 143, 145, 148, 149, 150, 155, 157, 310, 313, 316, 328, 331, 384, 385, 386, 389, 435, 476, 479, 531, 534, 661, 664, 696, 699, 751, 755, 1159, 1160, 1163, 1165, 1168, 1188, 1191, 1208, 1210, 1222, 1225, 1242, 1245, 1303, 1309, 1312], "cast": [50, 51, 99, 100, 143, 150, 154, 159, 310, 313, 316, 328, 331, 1501, 1502, 1505, 1507, 1510, 1528, 1531, 1536, 1540, 1558], "nan": [50, 51, 54, 55, 56, 57, 58, 59, 82, 83, 99, 100, 103, 104, 105, 106, 107, 108, 138, 146, 155, 156, 227, 310, 313, 316, 435, 436, 439, 441, 444, 446, 449, 451, 454, 456, 459, 461, 464, 466, 469, 471, 474, 511, 514, 516, 519, 521, 524, 526, 529, 546, 549, 551, 554, 556, 559, 576, 579, 586, 589, 606, 609, 611, 614, 616, 619, 621, 624, 626, 629, 636, 639, 661, 664, 681, 684, 686, 689, 696, 699, 701, 704, 711, 714, 716, 719, 721, 724, 736, 740, 741, 745, 746, 750, 849, 931, 934, 1036, 1040, 1464, 1465, 1469, 1470, 1474, 1475, 1479, 1480, 1484, 1501, 1516, 1519, 1520, 1523, 1524, 1527, 1532, 1535, 1536, 1540, 1541, 1545, 1546, 1547, 1550, 1552, 1555], "infin": [50, 51, 54, 55, 58, 59, 99, 100, 103, 104, 115, 116, 138, 146, 227, 310, 313, 316, 435, 436, 439, 446, 449, 451, 454, 461, 464, 466, 469, 471, 474, 511, 514, 516, 519, 521, 524, 546, 549, 551, 554, 556, 559, 561, 564, 576, 579, 581, 584, 606, 609, 611, 614, 616, 619, 621, 624, 626, 629, 636, 639, 661, 664, 681, 684, 696, 699, 701, 704, 711, 714, 716, 719, 721, 724, 736, 740, 741, 745, 746, 750, 849, 931, 934, 1159, 1277, 1281, 1501, 1516, 1519, 1524, 1527, 1546, 1547, 1550, 1552, 1555], "non": [50, 51, 66, 67, 74, 75, 76, 77, 82, 83, 84, 85, 99, 100, 115, 116, 123, 124, 125, 126, 131, 132, 133, 134, 141, 143, 145, 151, 159, 225, 226, 310, 313, 316, 363, 385, 435, 636, 639, 641, 644, 1159, 1170, 1173, 1203, 1206, 1212, 1215, 1247, 1251, 1257, 1261, 1272, 1276, 1277, 1281, 1411, 1422, 1425, 1438, 1439, 1442, 1444, 1447, 1449, 1452, 1454, 1457, 1501, 1516, 1519, 1520, 1523, 1524, 1527, 1528, 1531, 1532, 1535, 1541, 1545, 1546, 1547, 1550, 1552, 1555], "float64": [50, 51, 74, 75, 82, 83, 99, 100, 123, 124, 131, 132, 143, 155, 228, 257, 310, 313, 316, 328, 331, 346, 349, 351, 352, 362, 363, 374, 377, 386, 389, 391, 400, 1411, 1422, 1425, 1427, 1430], "broadcast_arrai": [50, 51, 99, 100, 310], "arbitrari": [50, 51, 91, 92, 99, 100, 141, 149, 150, 152, 153, 155, 163, 176, 228, 269, 272, 310, 318, 321, 386, 389], "x3": [50, 51, 228, 305, 309, 310, 318, 321, 401, 419], "mix": [50, 51, 54, 55, 88, 93, 94, 99, 100, 103, 104, 107, 108, 117, 118, 123, 124, 137, 145, 152, 155, 157, 159, 310, 318, 321, 386, 389, 401, 419, 435, 481, 484, 496, 499, 501, 504, 506, 509, 531, 534, 536, 539, 561, 564, 566, 569, 571, 574, 596, 599, 646, 649, 661, 664, 671, 674, 696, 699, 849, 850, 853, 857, 859, 896, 898, 906, 909, 911, 914, 1014, 1018, 1020, 1024, 1025, 1029, 1093, 1095, 1098, 1105, 1108, 1119, 1122, 1127, 1130, 1139, 1142, 1154, 1157, 1159, 1160, 1163, 1257, 1261, 1287, 1288, 1291, 1298, 1301, 1303, 1304, 1307, 1406, 1407, 1410, 1438, 1459, 1463, 1501, 1512, 1515, 1520, 1523, 1532, 1535, 1557], "broadcast_to": [50, 51, 99, 100, 143, 310], "can_cast": [50, 51, 99, 100, 143, 150, 153, 310], "occur": [50, 51, 78, 79, 99, 100, 127, 128, 138, 310, 328, 331, 1438, 1439, 1442, 1444, 1447, 1464, 1465, 1469, 1470, 1474, 1475, 1479, 1480, 1484], "as_n": [50, 51, 52, 53, 99, 100, 101, 102, 143, 310, 335, 336, 337, 339, 340, 341, 343, 362, 401, 406, 407, 410, 422], "int32": [50, 51, 74, 75, 76, 77, 82, 83, 99, 100, 107, 108, 123, 124, 125, 126, 143, 155, 159, 228, 305, 309, 310, 313, 316, 328, 331, 334, 339, 341, 343, 351, 352, 357, 360, 362, 374, 377, 386, 389, 396, 401, 421, 849, 1020, 1024, 1411, 1422, 1425, 1427, 1430, 1438, 1444, 1447, 1501, 1502, 1505, 1507, 1510, 1528, 1531, 1536, 1540], "finfo": [50, 51, 99, 100, 155, 310], "iinfo": [50, 51, 99, 100, 148, 310], "119": [50, 51], "122": [50, 51, 435, 521, 524], "int8": [50, 51, 74, 75, 123, 124, 143, 155, 310, 339, 351, 352, 357, 360, 362], "min": [50, 51, 58, 59, 82, 83, 99, 100, 107, 108, 131, 132, 310, 346, 349, 357, 360, 435, 656, 659, 849, 886, 889, 978, 981, 983, 986, 998, 1001, 1159, 1203, 1206, 1232, 1235, 1247, 1251, 1252, 1256, 1277, 1281, 1501], "128": [50, 51, 64, 65, 88, 93, 94, 113, 114, 310, 357, 360, 849, 919, 1159, 1222, 1225], "max": [50, 51, 56, 57, 58, 59, 66, 67, 82, 83, 99, 100, 105, 106, 107, 108, 115, 116, 131, 132, 155, 310, 346, 349, 357, 360, 435, 651, 654, 849, 866, 869, 871, 874, 886, 889, 978, 981, 983, 986, 1159, 1203, 1206, 1212, 1215, 1227, 1230, 1501], "127": [50, 51, 56, 57, 105, 106, 310, 357, 360], "is_bool_dtyp": [50, 51, 99, 100, 310], "is_float_dtyp": [50, 51, 99, 100, 156, 310], "is_int_dtyp": [50, 51, 99, 100, 154, 156, 310], "is_uint_dtyp": [50, 51, 99, 100, 154, 156, 310], "result_typ": [50, 51, 99, 100, 143, 310], "arrays_and_dtyp": [50, 51, 99, 100, 310, 386, 389], "to_devic": [52, 53, 101, 102, 401, 406], "stream": [52, 53, 101, 102, 401, 426, 430], "ab": [54, 55, 103, 104, 143, 151, 153, 155, 435, 681, 684, 1159, 1203, 1206, 1252, 1256, 1277, 1281, 1388, 1396, 1399, 1558], "aco": [54, 55, 103, 104, 435, 1558], "real": [54, 55, 103, 104, 435, 591, 594, 741, 745, 1501, 1524, 1527, 1532, 1535], "cosin": [54, 55, 103, 104, 435, 441, 444, 446, 449, 516, 519, 521, 524], "57": [54, 55, 103, 104, 401, 412, 435, 441, 444, 446, 449, 456, 459, 461, 464, 471, 474, 506, 509, 521, 524, 526, 529, 686, 689], "69": [54, 55, 109, 110, 123, 124, 155, 162, 435, 616, 619, 1042, 1053, 1056, 1159, 1203, 1206], "acosh": [54, 55, 103, 104, 310, 351, 352, 354, 355, 435, 1558], "hyperbol": [54, 55, 103, 104, 435, 446, 449, 461, 464, 476, 479, 521, 524, 716, 719, 741, 745], "99": [54, 55, 60, 61, 103, 104, 123, 124, 228, 257, 435, 446, 449, 461, 464, 849, 998, 1001, 1042, 1053, 1056, 1501, 1512, 1515], "asin": [54, 55, 103, 104, 435, 1558], "sine": [54, 55, 103, 104, 435, 456, 459, 461, 464, 711, 714, 716, 719], "927": [54, 55, 103, 104], "asinh": [54, 55, 103, 104, 435, 1558], "atan": [54, 55, 103, 104, 435, 1558], "tangent": [54, 55, 103, 104, 146, 435, 466, 469, 471, 474, 476, 479, 736, 740, 741, 745], "785": [54, 55, 103, 104, 435, 466, 469, 471, 474], "464": [54, 55, 123, 124, 435, 471, 474], "atan2": [54, 55, 103, 104, 435, 1558], "coordin": [54, 55, 76, 77, 103, 104, 125, 126, 228, 269, 272, 435, 471, 474, 1438, 1454, 1457], "quotient": [54, 55, 103, 104, 435, 471, 474], "245": [54, 55, 113, 114, 1093, 1139, 1142], "atanh": [54, 55, 103, 104, 435, 1558], "549": [54, 55, 103, 104, 113, 114, 435, 476, 479, 1093, 1139, 1142], "47": [54, 55, 56, 57, 74, 75, 103, 104, 107, 108, 109, 110, 123, 124, 435, 721, 724, 849, 886, 889, 1042, 1053, 1056, 1093, 1139, 1142, 1411, 1427, 1430], "bitwise_and": [54, 55, 103, 104, 435], "11": [54, 55, 56, 57, 58, 59, 64, 65, 66, 67, 74, 75, 82, 83, 88, 93, 94, 103, 104, 105, 106, 107, 108, 113, 114, 115, 116, 119, 120, 123, 124, 131, 132, 141, 143, 145, 155, 156, 435, 466, 469, 481, 484, 696, 699, 701, 704, 849, 865, 906, 909, 937, 940, 942, 945, 983, 986, 1093, 1095, 1098, 1139, 1142, 1159, 1176, 1179, 1193, 1196, 1203, 1206, 1222, 1225, 1252, 1256, 1287, 1298, 1301, 1303, 1324, 1327, 1374, 1378, 1388, 1394, 1396, 1405, 1411, 1417, 1420, 1422, 1425, 1438, 1459, 1463, 1464, 1465, 1469, 1501, 1502, 1505, 1507, 1510, 1512, 1515], "bitwise_invert": [54, 55, 103, 104, 435], "bitiwse_invert": [54, 55], "bitwise_left_shift": [54, 55, 103, 104, 435], "bitwise_or": [54, 55, 103, 104, 435], "bitwise_xor": [54, 55, 103, 104, 435], "89": [54, 55, 74, 75, 99, 100, 103, 104, 123, 124, 310, 357, 360, 435, 506, 509, 1159, 1257, 1261, 1501, 1536, 1540], "51": [54, 55, 103, 104, 107, 108, 123, 124, 435, 716, 719], "18": [54, 55, 56, 57, 74, 75, 103, 104, 123, 124, 131, 132, 141, 145, 189, 200, 203, 435, 471, 474, 531, 534, 716, 719, 1159, 1176, 1179, 1198, 1201, 1222, 1225, 1411, 1422, 1425, 1501, 1507, 1510, 1512, 1515], "19": [54, 55, 56, 57, 74, 75, 103, 104, 115, 116, 123, 124, 145, 435, 736, 740, 1159, 1176, 1179, 1262, 1266, 1388, 1399, 1411, 1422, 1425, 1485, 1496, 1499], "26": [54, 55, 72, 73, 74, 75, 107, 108, 109, 110, 123, 124, 435, 506, 509, 531, 534, 716, 719, 849, 937, 940, 1042, 1043, 1046, 1093, 1127, 1130, 1159, 1176, 1179, 1222, 1225, 1257, 1261, 1388, 1390, 1406, 1407, 1410, 1501, 1512, 1515], "27": [54, 55, 66, 67, 74, 75, 115, 116, 123, 124, 435, 501, 504, 521, 524, 716, 719, 721, 724, 849, 942, 945, 1093, 1154, 1157, 1159, 1198, 1201, 1222, 1225, 1267, 1271, 1388, 1390, 1396, 1501, 1512, 1515], "23": [54, 55, 56, 57, 74, 75, 97, 98, 103, 104, 107, 108, 123, 124, 155, 159, 228, 258, 261, 435, 471, 474, 506, 509, 581, 584, 586, 589, 591, 594, 696, 699, 706, 709, 716, 719, 1093, 1119, 1122, 1154, 1157, 1159, 1176, 1179, 1203, 1206, 1252, 1256, 1388, 1390, 1396, 1438, 1459, 1463], "20": [54, 55, 64, 65, 74, 75, 82, 83, 103, 104, 107, 108, 123, 124, 131, 132, 157, 161, 435, 526, 529, 546, 549, 551, 554, 616, 619, 686, 689, 701, 704, 721, 724, 849, 911, 914, 919, 942, 945, 983, 986, 998, 1001, 1159, 1176, 1179, 1193, 1196, 1203, 1206, 1222, 1225, 1257, 1261, 1411, 1417, 1420, 1438, 1454, 1457, 1459, 1463, 1501, 1512, 1515, 1536, 1540], "74": [54, 55, 123, 124, 435, 626, 629], "41": [54, 55, 56, 57, 103, 104, 107, 108, 115, 116, 189, 200, 203, 435, 466, 469, 721, 724, 849, 866, 869, 871, 874, 1159, 1160, 1163, 1411, 1427, 1430, 1501, 1536, 1540], "59": [54, 55], "24": [54, 55, 66, 67, 82, 83, 107, 108, 113, 114, 115, 116, 123, 124, 162, 435, 506, 509, 721, 724, 849, 886, 889, 937, 940, 1159, 1176, 1179, 1222, 1225, 1388, 1390, 1501, 1502, 1505, 1512, 1515], "ceil": [54, 55, 103, 104, 228, 230, 231, 435, 1558], "radian": [54, 55, 56, 57, 103, 104, 105, 106, 146, 435, 441, 444, 456, 459, 466, 469, 471, 474, 516, 519, 526, 529, 686, 689, 711, 714, 736, 740], "54": [54, 55, 64, 65, 103, 104, 105, 106, 113, 114, 123, 124, 145, 435, 516, 519, 521, 524, 721, 724, 1093, 1139, 1142, 1154, 1157, 1159, 1222, 1225, 1501, 1512, 1515], "416": [54, 55, 435, 516, 519], "cosh": [54, 55, 103, 104, 435, 1558], "angl": [54, 55, 103, 104, 175, 435, 471, 474, 521, 524, 716, 719, 741, 745], "76": [54, 55, 99, 100, 103, 104, 123, 124, 310, 357, 360, 435, 521, 524, 1159, 1257, 1261, 1388, 1396, 1501, 1512, 1515], "03": [54, 55, 103, 104, 109, 110, 123, 124, 435, 616, 619, 849, 998, 1001, 1042, 1062, 1065, 1093, 1154, 1157, 1159, 1193, 1196], "81": [54, 55, 99, 100, 103, 104, 115, 116, 123, 124, 155, 310, 357, 360, 435, 616, 619, 701, 704, 726, 729, 1388, 1396, 1411, 1427, 1430, 1501, 1512, 1515], "deg2rad": [54, 55, 103, 104, 435], "degre": [54, 55, 82, 83, 103, 104, 131, 132, 435, 526, 529, 686, 689, 1501, 1532, 1535, 1541, 1545], "180": [54, 55, 103, 104, 435, 526, 529, 686, 689], "270": [54, 55, 103, 104, 435, 526, 529, 686, 689], "360": [54, 55, 103, 104, 435, 526, 529, 686, 689], "71": [54, 55, 103, 104, 435, 526, 529, 686, 689], "28": [54, 55, 72, 73, 103, 104, 107, 108, 123, 124, 435, 526, 529, 686, 689, 849, 937, 940, 1042, 1043, 1046, 1093, 1119, 1122, 1127, 1130, 1139, 1142, 1159, 1222, 1225, 1406, 1407, 1410, 1501, 1512, 1515], "divid": [54, 55, 58, 59, 70, 71, 91, 92, 103, 104, 119, 120, 139, 141, 145, 435, 561, 564, 849, 998, 1001, 1303, 1349, 1352], "dividend": [54, 55, 103, 104, 435, 531, 534, 696, 699, 751, 755], "divisor": [54, 55, 60, 61, 82, 83, 103, 104, 109, 110, 131, 132, 435, 531, 534, 696, 699, 751, 755, 1042, 1043, 1046, 1047, 1050, 1062, 1065, 1501, 1532, 1535, 1541, 1545], "375": [54, 55, 435, 536, 539], "erf": [54, 55, 103, 104, 435], "exponenti": [54, 55, 103, 104, 435, 541, 544, 546, 549, 626, 629, 681, 684], "gauss": [54, 55, 103, 104, 435, 541, 544], "exp": [54, 55, 103, 104, 435, 551, 554, 626, 629, 1558], "expm1": [54, 55, 103, 104, 143, 435], "244": [54, 55], "918": [54, 55], "48": [54, 55, 56, 57, 103, 104, 105, 106, 107, 108, 109, 110, 123, 124, 189, 195, 198, 435, 446, 449, 721, 724, 849, 937, 940, 1042, 1043, 1046, 1053, 1056, 1159, 1222, 1225, 1388, 1390, 1501, 1512, 1515], "147": [54, 55, 189, 215, 218, 435, 551, 554], "floor": [54, 55, 103, 104, 435, 501, 504, 1558], "floor_divid": [54, 55, 103, 104, 435], "greater_equ": [54, 55, 103, 104, 435], "isfinit": [54, 55, 103, 104, 153, 435], "out_i": [54, 55, 103, 104, 435, 576, 579, 581, 584, 586, 589, 591, 594], "self_i": [54, 55, 103, 104], "finit": [54, 55, 103, 104, 435, 451, 454, 471, 474, 576, 579, 661, 664, 681, 684, 696, 699], "inf": [54, 55, 58, 59, 66, 67, 103, 104, 107, 108, 115, 116, 155, 227, 435, 471, 474, 551, 554, 576, 579, 581, 584, 586, 589, 591, 594, 606, 609, 611, 614, 849, 931, 934, 1036, 1040, 1159, 1203, 1206, 1277, 1281], "isinf": [54, 55, 103, 104, 435], "neg": [54, 55, 66, 67, 70, 71, 74, 75, 84, 85, 89, 90, 103, 104, 115, 116, 119, 120, 123, 124, 133, 134, 141, 150, 152, 189, 195, 198, 228, 230, 231, 249, 250, 435, 576, 579, 581, 584, 661, 664, 681, 684, 696, 699, 1159, 1247, 1251, 1272, 1276, 1277, 1281, 1303, 1309, 1312, 1319, 1322, 1324, 1327, 1344, 1347, 1411, 1422, 1425, 1546, 1547, 1550, 1552, 1555], "isnan": [54, 55, 103, 104, 435], "isreal": [54, 55, 103, 104, 435], "1j": [54, 55, 103, 104, 849, 998, 1001], "5j": [54, 55, 103, 104, 435, 591, 594], "6j": [54, 55, 435, 591, 594], "less_equ": [54, 55, 103, 104, 147, 435], "61": [54, 55, 103, 104, 109, 110, 117, 118, 123, 124, 435, 606, 609, 616, 619, 726, 729, 1042, 1043, 1046, 1093, 1127, 1130, 1287, 1288, 1291], "log10": [54, 55, 103, 104, 435], "logarithm": [54, 55, 103, 104, 435, 546, 549, 606, 609, 611, 614, 616, 619, 621, 624, 626, 629, 1159, 1237, 1240], "602": [54, 55, 435, 611, 614], "699": [54, 55, 435, 611, 614], "log1p": [54, 55, 103, 104, 435], "693": [54, 55, 103, 104, 189, 215, 218, 435, 461, 464, 616, 619, 1287, 1298, 1301], "001": [54, 55, 72, 73, 162, 163, 310, 346, 349, 435, 706, 709, 1406, 1407, 1410], "0953": [54, 55, 103, 104, 435, 606, 609], "log2": [54, 55, 103, 104, 435], "logaddexp": [54, 55, 103, 104, 435], "05": [54, 55, 60, 61, 72, 73, 82, 83, 103, 104, 109, 110, 121, 122, 154, 155, 435, 626, 629, 849, 920, 937, 940, 990, 1042, 1043, 1046, 1062, 1065, 1159, 1203, 1206, 1406, 1407, 1410, 1501, 1520, 1523], "logical_and": [54, 55, 103, 104, 153, 157, 435, 1558], "logical_not": [54, 55, 103, 104, 143, 435, 1558], "logical_or": [54, 55, 103, 104, 435, 1558], "conform": [54, 55, 103, 104, 146, 228, 230, 231, 233, 235, 243, 244, 247, 249, 250, 252, 255, 257, 258, 261, 263, 264, 269, 272, 284, 285, 287, 290, 292, 296, 297, 301, 302, 304, 305, 309, 310, 328, 331, 346, 349, 357, 360, 386, 389, 435, 436, 439, 441, 444, 446, 449, 451, 454, 456, 459, 461, 464, 466, 469, 471, 474, 476, 479, 481, 484, 486, 489, 491, 494, 501, 504, 506, 509, 511, 514, 516, 519, 521, 524, 531, 534, 536, 539, 551, 554, 556, 559, 561, 564, 566, 569, 571, 574, 576, 579, 581, 584, 586, 589, 601, 604, 611, 614, 616, 619, 621, 624, 626, 629, 631, 634, 636, 639, 641, 644, 646, 649, 661, 664, 666, 669, 671, 674, 676, 679, 681, 684, 696, 699, 701, 704, 706, 709, 711, 714, 716, 719, 721, 724, 726, 729, 731, 735, 736, 740, 741, 745, 746, 750, 1159, 1160, 1163, 1165, 1168, 1170, 1173, 1176, 1179, 1181, 1184, 1185, 1187, 1193, 1196, 1198, 1201, 1203, 1206, 1208, 1210, 1212, 1215, 1217, 1220, 1222, 1225, 1227, 1230, 1232, 1235, 1237, 1240, 1242, 1245, 1247, 1251, 1252, 1256, 1257, 1261, 1272, 1276, 1277, 1281, 1303, 1309, 1312, 1319, 1322, 1324, 1327, 1329, 1332, 1339, 1342, 1344, 1347, 1354, 1357, 1359, 1362, 1438, 1439, 1442, 1444, 1447, 1454, 1457, 1459, 1463, 1464, 1465, 1469, 1470, 1474, 1475, 1479, 1480, 1484, 1485, 1486, 1489, 1496, 1499, 1501, 1516, 1519, 1520, 1523, 1524, 1527, 1528, 1531, 1532, 1535, 1536, 1540, 1541, 1545, 1546, 1547, 1550, 1552, 1555], "org": [54, 55, 103, 104, 109, 110, 146, 310, 328, 331, 435, 576, 579, 1042, 1043, 1046, 1047, 1050, 1501, 1532, 1535], "api_specif": [54, 55, 103, 104, 146, 310, 328, 331, 435, 576, 579, 1501, 1532, 1535], "elementwise_funct": [54, 55, 103, 104, 146, 435, 576, 579], "assum": [54, 55, 103, 104, 140, 143, 146, 154, 157, 161, 162, 176, 228, 230, 231, 233, 235, 243, 244, 247, 249, 250, 252, 255, 257, 258, 261, 263, 264, 266, 267, 269, 272, 284, 285, 287, 290, 292, 296, 297, 301, 302, 304, 305, 309, 310, 328, 331, 364, 367, 374, 377, 435, 436, 439, 441, 444, 446, 449, 451, 454, 456, 459, 461, 464, 466, 469, 471, 474, 476, 479, 481, 484, 486, 489, 491, 494, 501, 504, 506, 509, 511, 514, 516, 519, 521, 524, 531, 534, 536, 539, 551, 554, 556, 559, 561, 564, 566, 569, 571, 574, 576, 579, 581, 584, 586, 589, 591, 594, 601, 604, 611, 614, 616, 619, 621, 624, 626, 629, 631, 634, 636, 639, 641, 644, 646, 649, 661, 664, 666, 669, 671, 674, 676, 679, 681, 684, 696, 699, 701, 704, 706, 709, 711, 714, 716, 719, 721, 724, 726, 729, 731, 735, 736, 740, 741, 745, 746, 750, 849, 906, 909, 923, 926, 931, 934, 937, 940, 1025, 1029, 1042, 1057, 1059, 1075, 1079, 1082, 1086, 1087, 1091, 1093, 1105, 1108, 1127, 1130, 1139, 1142, 1154, 1157, 1159, 1160, 1163, 1165, 1168, 1170, 1173, 1176, 1179, 1181, 1184, 1185, 1187, 1193, 1196, 1198, 1201, 1203, 1206, 1208, 1210, 1212, 1215, 1217, 1220, 1222, 1225, 1227, 1230, 1232, 1235, 1237, 1240, 1242, 1245, 1247, 1251, 1252, 1256, 1257, 1261, 1272, 1276, 1277, 1281, 1282, 1286, 1303, 1304, 1307, 1309, 1312, 1314, 1317, 1319, 1322, 1324, 1327, 1329, 1332, 1334, 1337, 1339, 1342, 1344, 1347, 1349, 1352, 1354, 1357, 1359, 1362, 1364, 1368, 1369, 1373, 1374, 1378, 1379, 1383, 1406, 1407, 1410, 1438, 1439, 1442, 1444, 1447, 1454, 1457, 1459, 1463, 1464, 1465, 1469, 1470, 1474, 1475, 1479, 1480, 1484, 1485, 1486, 1489, 1496, 1499, 1501, 1516, 1519, 1520, 1523, 1524, 1527, 1528, 1531, 1532, 1535, 1536, 1540, 1541, 1545, 1546, 1547, 1550, 1552, 1555], "simplic": [54, 55, 103, 104, 146, 157, 163, 175, 228, 230, 231, 233, 235, 243, 244, 247, 249, 250, 252, 255, 257, 258, 261, 263, 264, 266, 267, 269, 272, 284, 285, 287, 290, 292, 296, 297, 301, 302, 304, 305, 309, 310, 328, 331, 364, 367, 374, 377, 435, 436, 439, 441, 444, 446, 449, 451, 454, 456, 459, 461, 464, 466, 469, 471, 474, 476, 479, 481, 484, 486, 489, 491, 494, 501, 504, 506, 509, 511, 514, 516, 519, 521, 524, 531, 534, 536, 539, 551, 554, 556, 559, 561, 564, 566, 569, 571, 574, 576, 579, 581, 584, 586, 589, 591, 594, 601, 604, 611, 614, 616, 619, 621, 624, 626, 629, 631, 634, 636, 639, 641, 644, 646, 649, 661, 664, 666, 669, 671, 674, 676, 679, 681, 684, 696, 699, 701, 704, 706, 709, 711, 714, 716, 719, 721, 724, 726, 729, 731, 735, 736, 740, 741, 745, 746, 750, 849, 906, 909, 923, 926, 931, 934, 937, 940, 1025, 1029, 1042, 1057, 1059, 1075, 1079, 1082, 1086, 1087, 1091, 1093, 1105, 1108, 1127, 1130, 1139, 1142, 1154, 1157, 1159, 1160, 1163, 1165, 1168, 1170, 1173, 1176, 1179, 1181, 1184, 1185, 1187, 1193, 1196, 1198, 1201, 1203, 1206, 1208, 1210, 1212, 1215, 1217, 1220, 1222, 1225, 1227, 1230, 1232, 1235, 1237, 1240, 1242, 1245, 1247, 1251, 1252, 1256, 1257, 1261, 1272, 1276, 1277, 1281, 1282, 1286, 1303, 1304, 1307, 1309, 1312, 1314, 1317, 1319, 1322, 1324, 1327, 1329, 1332, 1334, 1337, 1339, 1342, 1344, 1347, 1349, 1352, 1354, 1357, 1359, 1362, 1364, 1368, 1369, 1373, 1374, 1378, 1379, 1383, 1406, 1407, 1410, 1438, 1439, 1442, 1444, 1447, 1454, 1457, 1459, 1463, 1464, 1465, 1469, 1470, 1474, 1475, 1479, 1480, 1484, 1485, 1486, 1489, 1496, 1499, 1501, 1516, 1519, 1520, 1523, 1524, 1527, 1528, 1531, 1532, 1535, 1536, 1540, 1541, 1545], "nestabl": [54, 55, 103, 104, 137, 145, 146, 152, 155, 228, 230, 231, 233, 235, 243, 244, 247, 249, 250, 252, 255, 257, 258, 261, 263, 264, 266, 267, 269, 272, 284, 285, 287, 290, 292, 296, 297, 301, 302, 304, 305, 309, 310, 328, 331, 364, 367, 374, 377, 435, 436, 439, 441, 444, 446, 449, 451, 454, 456, 459, 461, 464, 466, 469, 471, 474, 476, 479, 481, 484, 486, 489, 491, 494, 501, 504, 506, 509, 511, 514, 516, 519, 521, 524, 531, 534, 536, 539, 551, 554, 556, 559, 561, 564, 566, 569, 571, 574, 576, 579, 581, 584, 586, 589, 601, 604, 611, 614, 616, 619, 621, 624, 626, 629, 631, 634, 636, 639, 641, 644, 646, 649, 661, 664, 666, 669, 671, 674, 676, 679, 681, 684, 696, 699, 701, 704, 706, 709, 711, 714, 716, 719, 721, 724, 726, 729, 731, 735, 736, 740, 741, 745, 746, 750, 849, 906, 909, 923, 926, 931, 934, 937, 940, 1008, 1012, 1025, 1029, 1042, 1057, 1059, 1075, 1079, 1082, 1086, 1087, 1091, 1093, 1105, 1108, 1127, 1130, 1139, 1142, 1154, 1157, 1159, 1160, 1163, 1165, 1168, 1170, 1173, 1176, 1179, 1181, 1184, 1185, 1187, 1193, 1196, 1198, 1201, 1203, 1206, 1208, 1210, 1212, 1215, 1217, 1220, 1222, 1225, 1227, 1230, 1232, 1235, 1237, 1240, 1242, 1245, 1247, 1251, 1252, 1256, 1257, 1261, 1272, 1276, 1277, 1281, 1282, 1286, 1303, 1304, 1307, 1309, 1312, 1314, 1317, 1319, 1322, 1324, 1327, 1329, 1332, 1334, 1337, 1339, 1342, 1344, 1347, 1349, 1352, 1354, 1357, 1359, 1362, 1364, 1368, 1369, 1373, 1374, 1378, 1379, 1383, 1406, 1407, 1410, 1438, 1439, 1442, 1444, 1447, 1454, 1457, 1459, 1463, 1464, 1465, 1469, 1470, 1474, 1475, 1479, 1480, 1484, 1485, 1486, 1489, 1496, 1499, 1501, 1516, 1519, 1520, 1523, 1524, 1527, 1528, 1531, 1532, 1535, 1536, 1540, 1541, 1545, 1546, 1547, 1550, 1552, 1555, 1557], "logical_xor": [54, 55, 103, 104, 435], "use_wher": [54, 55, 103, 104, 435, 651, 654, 656, 659], "formula": [54, 55, 103, 104, 435, 651, 654, 656, 659], "clip": [54, 55, 70, 71, 103, 104, 107, 108, 119, 120, 141, 150, 152, 162, 164, 435, 651, 654, 656, 659, 849, 866, 869, 871, 874, 1303, 1558], "minimum": [54, 55, 58, 59, 70, 71, 76, 77, 103, 104, 107, 108, 119, 120, 125, 126, 435, 436, 439, 849, 920, 921, 990, 991, 998, 1001, 1003, 1006, 1303, 1304, 1307, 1438, 1444, 1447, 1501, 1516, 1519, 1524, 1527, 1558], "exce": [54, 55, 435, 656, 659], "arguement": [54, 55], "condit": [54, 55, 76, 77, 125, 126, 138, 145, 147, 152, 155, 175, 225, 226, 435, 661, 664, 1388, 1398, 1399, 1438, 1459, 1463], "boradcastbl": [54, 55, 435, 661, 664], "thatth": [54, 55], "30": [54, 55, 107, 108, 123, 124, 131, 132, 435, 661, 664, 701, 704, 849, 911, 914, 937, 940, 942, 945, 983, 986, 993, 998, 1001, 1159, 1193, 1196, 1222, 1225, 1501, 1512, 1515], "56": [54, 55, 64, 65, 74, 75, 103, 104, 145, 435, 661, 664, 721, 724, 736, 740, 1042, 1043, 1046, 1093, 1119, 1122, 1159, 1222, 1225, 1252, 1256, 1501, 1512, 1515], "21": [54, 55, 56, 57, 58, 59, 74, 75, 103, 104, 105, 106, 107, 108, 123, 124, 131, 132, 310, 357, 360, 435, 471, 474, 501, 504, 506, 509, 661, 664, 849, 886, 889, 1159, 1176, 1179, 1222, 1225, 1287, 1298, 1301, 1388, 1394, 1501, 1502, 1505, 1512, 1515], "not_equ": [54, 55, 103, 104, 435], "pow": [54, 55, 103, 104, 138, 435], "expon": [54, 55, 58, 59, 107, 108, 435, 681, 684, 849, 1003, 1006, 1159, 1208, 1210], "rad2deg": [54, 55, 103, 104, 435], "286": [54, 55], "458": [54, 55], "573": [54, 55, 435, 686, 689], "reciproc": [54, 55, 103, 104, 435], "remaind": [54, 55, 56, 57, 70, 71, 91, 92, 103, 104, 105, 106, 119, 120, 435, 1303, 1349, 1352], "modulu": [54, 55, 103, 104, 435, 696, 699], "x2_i": [54, 55, 103, 104, 138, 435, 451, 454, 471, 474, 481, 484, 491, 494, 496, 499, 501, 504, 506, 509, 531, 534, 536, 539, 561, 564, 566, 569, 571, 574, 596, 599, 601, 604, 626, 629, 631, 634, 641, 644, 646, 649, 661, 664, 671, 674, 681, 684, 696, 699, 731, 735], "94": [54, 55, 60, 61, 74, 75, 103, 104, 109, 110, 123, 124, 401, 420, 1042, 1053, 1056], "256": [54, 55, 1093, 1119, 1122], "0001": [54, 55], "36": [54, 55, 64, 65, 107, 108, 115, 116, 435, 471, 474, 849, 886, 889, 1159, 1222, 1225, 1252, 1256, 1388, 1399, 1501, 1512, 1515], "67": [54, 55, 58, 59, 103, 104, 107, 108, 123, 124, 435, 506, 509, 521, 524, 849, 886, 889, 1042, 1052, 1061, 1081], "45": [54, 55, 88, 93, 94, 103, 104, 109, 110, 123, 124, 435, 471, 474, 531, 534, 1042, 1043, 1046, 1062, 1065, 1159, 1222, 1225, 1303, 1349, 1352, 1501, 1512, 1515], "678": [54, 55], "25": [54, 55, 58, 59, 66, 67, 68, 69, 74, 75, 82, 83, 89, 90, 103, 104, 105, 106, 107, 108, 113, 114, 115, 116, 121, 122, 123, 124, 131, 132, 141, 435, 501, 504, 531, 534, 716, 719, 721, 724, 726, 729, 849, 937, 940, 942, 945, 998, 1001, 1159, 1160, 1163, 1176, 1179, 1193, 1196, 1267, 1271, 1287, 1293, 1296, 1388, 1390, 1406, 1407, 1410, 1501, 1512, 1515, 1520, 1523], "33": [54, 55, 74, 75, 82, 83, 103, 104, 107, 108, 109, 110, 113, 114, 435, 466, 469, 501, 504, 849, 942, 945, 998, 1001, 1042, 1053, 1056, 1093, 1139, 1142, 1159, 1222, 1225, 1388, 1405, 1501, 1512, 1515], "sin": [54, 55, 58, 59, 103, 104, 139, 159, 435, 849, 899, 902, 1558], "841": [54, 55, 103, 104, 189, 190, 193, 435, 711, 714], "909": [54, 55, 103, 104, 107, 108, 435, 711, 714], "141": [54, 55, 103, 104, 310, 313, 316, 435, 711, 714], "sinh": [54, 55, 103, 104, 435, 1558], "63": [54, 55, 89, 90, 103, 104, 115, 116, 435, 686, 689, 716, 719, 721, 724, 1159, 1160, 1163, 1222, 1225, 1388, 1390, 1501, 1512, 1515], "232": [54, 55, 103, 104, 435, 716, 719], "sqrt": [54, 55, 103, 104, 435, 1159, 1277, 1281], "squar": [54, 55, 66, 67, 103, 104, 115, 116, 435, 721, 724, 1042, 1052, 1061, 1081, 1159, 1160, 1163, 1170, 1173, 1181, 1184, 1185, 1187, 1193, 1196, 1208, 1210, 1237, 1240, 1242, 1245, 1247, 1251, 1267, 1271, 1388, 1394], "tan": [54, 55, 103, 104, 141, 146, 149, 150, 152, 153, 159, 435, 849, 856, 1558], "tanh": [54, 55, 103, 104, 159, 435, 1558], "762": [54, 55, 103, 104, 435, 611, 614, 741, 745], "964": [54, 55, 103, 104, 435, 741, 745], "trunc": [54, 55, 103, 104, 435], "trunc_divid": [54, 55, 103, 104, 435], "elementwis": [55, 72, 73, 104, 121, 122, 150, 156, 159, 436, 439, 441, 444, 446, 449, 451, 454, 456, 459, 461, 464, 466, 469, 471, 474, 476, 479, 481, 484, 486, 489, 491, 494, 496, 499, 501, 504, 506, 509, 511, 514, 516, 519, 521, 524, 526, 529, 531, 534, 536, 539, 541, 544, 546, 549, 551, 554, 556, 559, 561, 564, 566, 569, 571, 574, 576, 579, 581, 584, 586, 589, 591, 594, 596, 599, 601, 604, 606, 609, 611, 614, 616, 619, 621, 624, 626, 629, 631, 634, 636, 639, 641, 644, 646, 649, 651, 654, 656, 659, 661, 664, 666, 669, 671, 674, 676, 679, 681, 684, 686, 689, 691, 694, 696, 699, 701, 704, 706, 709, 711, 714, 716, 719, 721, 724, 726, 729, 731, 735, 736, 740, 741, 745, 746, 750, 751, 755, 1159, 1267, 1271, 1406, 1407, 1410], "flatten": [56, 57, 58, 59, 70, 71, 76, 77, 78, 79, 105, 106, 107, 108, 115, 116, 119, 120, 125, 126, 127, 128, 849, 899, 902, 1159, 1188, 1191, 1222, 1225, 1277, 1281, 1303, 1309, 1312, 1334, 1337, 1344, 1347, 1438, 1439, 1442, 1444, 1447, 1464, 1465, 1469, 1470, 1474, 1475, 1479, 1480, 1484], "start_dim": [56, 57, 105, 106], "end_dim": [56, 57, 105, 106], "dim": [56, 57, 91, 92, 97, 98, 105, 106, 143, 154, 157, 228, 279, 282, 1093, 1094, 1124, 1125, 1137], "flipud": [56, 57, 105, 106], "flip": [56, 57, 70, 71, 105, 106, 119, 120, 153, 161, 162, 164, 435, 486, 489, 1303, 1558], "diag": [56, 57, 105, 106, 1159], "fmax": [56, 57, 105, 106], "fmod": [56, 57, 105, 106], "divis": [56, 57, 58, 59, 60, 61, 105, 106, 107, 108, 109, 110, 150, 435, 501, 504, 531, 534, 561, 564, 696, 699, 751, 755, 849, 921, 991, 998, 1001, 1042, 1043, 1046, 1047, 1050, 1062, 1065], "heavisid": [56, 57, 105, 106], "0000": [56, 57, 105, 106], "5000": [56, 57, 1159, 1193, 1196], "lcm": [56, 57, 105, 106], "60": [56, 57, 105, 106, 107, 108, 123, 124, 849, 942, 945, 998, 1001, 1041, 1159, 1222, 1225, 1501, 1502, 1505, 1512, 1515], "max_pool2d": [56, 57, 105, 106], "kernel": [56, 57, 64, 65, 105, 106, 113, 114, 157, 159, 176, 1093, 1144, 1147], "stride": [56, 57, 64, 65, 105, 106, 113, 114, 1093, 1094, 1095, 1098, 1100, 1103, 1105, 1108, 1110, 1112, 1114, 1117, 1119, 1122, 1124, 1125, 1127, 1130, 1138], "pad": [56, 57, 64, 65, 105, 106, 113, 114, 849, 899, 902, 1093, 1094, 1095, 1098, 1100, 1103, 1105, 1108, 1110, 1112, 1114, 1117, 1119, 1122, 1124, 1125, 1126, 1127, 1130, 1138, 1303, 1314, 1317, 1379, 1383], "data_format": [56, 57, 64, 65, 105, 106, 113, 114, 1093, 1094, 1095, 1098, 1100, 1103, 1105, 1108, 1110, 1112, 1114, 1117, 1119, 1122, 1124, 1125, 1127, 1130, 1137], "nhwc": [56, 57, 64, 65, 105, 106, 113, 114, 1093, 1105, 1108, 1110, 1112, 1127, 1130], "batch_siz": [56, 57, 64, 65, 74, 75, 105, 106, 113, 114, 123, 124, 162, 1093, 1095, 1098, 1100, 1103, 1105, 1108, 1110, 1112, 1114, 1117, 1119, 1122, 1124, 1125, 1127, 1130, 1411, 1412, 1415], "h": [56, 57, 64, 65, 105, 106, 107, 108, 113, 114, 137, 141, 849, 891, 894, 1093, 1105, 1108, 1110, 1112, 1114, 1117, 1119, 1122, 1124, 1125, 1127, 1130, 1388, 1391, 1404], "w": [56, 57, 60, 61, 64, 65, 91, 92, 103, 104, 105, 106, 107, 108, 109, 110, 113, 114, 159, 162, 163, 849, 891, 894, 998, 1001, 1042, 1043, 1046, 1047, 1050, 1051, 1053, 1056, 1062, 1065, 1066, 1069, 1070, 1073, 1093, 1095, 1098, 1100, 1103, 1105, 1108, 1110, 1112, 1114, 1117, 1119, 1122, 1124, 1125, 1127, 1130, 1139, 1142, 1388, 1394], "d_in": [56, 57, 64, 65, 105, 106, 113, 114, 1093, 1095, 1098, 1100, 1103, 1105, 1108, 1110, 1112, 1114, 1117, 1119, 1122, 1124, 1125, 1127, 1130], "slide": [56, 57, 64, 65, 105, 106, 113, 114, 1093, 1095, 1098, 1100, 1103, 1105, 1108, 1110, 1112, 1114, 1117, 1119, 1122, 1124, 1125, 1127, 1130], "valid": [56, 57, 64, 65, 84, 85, 105, 106, 113, 114, 133, 134, 140, 143, 145, 154, 155, 310, 334, 1093, 1095, 1098, 1100, 1103, 1105, 1108, 1110, 1112, 1114, 1117, 1119, 1122, 1124, 1125, 1127, 1130, 1303, 1319, 1322, 1359, 1362, 1546, 1547, 1550, 1552, 1555], "algorithm": [56, 57, 64, 65, 89, 90, 105, 106, 113, 114, 153, 157, 176, 1093, 1095, 1098, 1100, 1103, 1105, 1108, 1110, 1112, 1114, 1117, 1119, 1122, 1124, 1125, 1127, 1130], "nchw": [56, 57, 64, 65, 105, 106, 113, 114, 1093, 1105, 1108, 1110, 1112, 1127, 1130], "pool": [56, 57, 105, 106], "arang": [56, 57, 66, 67, 105, 106, 115, 116, 143, 228, 263, 264, 266, 267, 849, 974, 1041, 1159, 1203, 1206, 1501, 1512, 1515, 1558], "reshap": [56, 57, 66, 67, 70, 71, 91, 92, 105, 106, 113, 114, 115, 116, 119, 120, 152, 153, 155, 159, 161, 164, 849, 1041, 1093, 1105, 1108, 1127, 1130, 1159, 1203, 1206, 1303, 1558], "40": [56, 57, 58, 59, 88, 93, 94, 105, 106, 107, 108, 123, 124, 435, 501, 504, 521, 524, 721, 724, 849, 911, 914, 983, 986, 998, 1001, 1041, 1159, 1193, 1196, 1222, 1225, 1501, 1512, 1515], "46": [56, 57, 74, 75, 113, 114, 123, 124, 435, 616, 619, 706, 709, 1388, 1390], "median": [56, 57, 105, 106, 153], "keepdim": [56, 57, 66, 67, 70, 71, 76, 77, 82, 83, 84, 85, 91, 92, 105, 106, 115, 116, 119, 120, 125, 126, 131, 132, 133, 134, 147, 153, 159, 1159, 1203, 1206, 1277, 1281, 1303, 1374, 1378, 1438, 1439, 1442, 1444, 1447, 1501, 1516, 1519, 1520, 1523, 1524, 1527, 1528, 1531, 1532, 1535, 1536, 1540, 1541, 1545, 1546, 1547, 1550, 1552, 1555], "reduc": [56, 57, 58, 59, 66, 67, 76, 77, 82, 83, 84, 85, 91, 92, 105, 106, 107, 108, 115, 116, 125, 126, 131, 132, 133, 134, 147, 153, 157, 159, 161, 401, 425, 849, 886, 889, 1159, 1232, 1235, 1438, 1439, 1442, 1444, 1447, 1501, 1516, 1519, 1520, 1523, 1524, 1527, 1528, 1531, 1532, 1535, 1536, 1540, 1541, 1545, 1546, 1547, 1550, 1552, 1555], "moveaxi": [56, 57, 105, 106], "destin": [56, 57, 105, 106], "unstack": [56, 57, 70, 71, 91, 92, 119, 120, 141, 159, 162, 1303, 1558], "reorder": [56, 57, 105, 106, 1303, 1324, 1327], "pad_width": [56, 57, 70, 71, 105, 106, 119, 120, 1303, 1314, 1317, 1379, 1383], "constant": [56, 57, 72, 73, 105, 106, 121, 122, 150, 156, 163, 164, 176, 1303, 1314, 1317, 1388, 1394, 1406, 1407, 1410], "stat_length": [56, 57, 105, 106], "constant_valu": [56, 57, 105, 106], "end_valu": [56, 57, 105, 106], "reflect_typ": [56, 57, 105, 106], "637": [56, 57, 105, 106], "212": [56, 57, 64, 65, 105, 106, 1464, 1465, 1469], "0909": [56, 57, 105, 106], "all_equ": [58, 59, 107, 108, 849, 857, 859], "equality_matrix": [58, 59, 107, 108, 849, 850, 853], "compar": [58, 59, 80, 81, 91, 92, 107, 108, 129, 130, 140, 145, 148, 154, 155, 162, 849, 850, 853, 857, 859, 1159, 1252, 1256, 1464, 1465, 1469, 1470, 1474, 1475, 1479, 1480, 1484, 1485, 1486, 1489, 1496, 1499], "array_equ": [58, 59, 849], "assert_supports_inplac": [58, 59, 107, 108, 849], "clip_matrix_norm": [58, 59, 107, 108, 849], "max_norm": [58, 59, 107, 108, 849, 866, 869, 871, 874], "norm": [58, 59, 66, 67, 73, 107, 108, 115, 116, 122, 156, 849, 866, 869, 871, 874, 1159, 1203, 1206, 1277, 1281, 1407, 1410, 1558], "downscal": [58, 59, 107, 108, 849, 866, 869, 871, 874], "894": [58, 59, 107, 108, 849, 866, 869, 871, 874, 1406, 1407, 1410], "79": [58, 59, 107, 108, 123, 124, 435, 506, 509, 531, 534, 849, 866, 869, 871, 874], "clip_vector_norm": [58, 59, 107, 108, 849], "vector": [58, 59, 64, 65, 66, 67, 107, 108, 113, 114, 115, 116, 175, 228, 269, 272, 849, 871, 874, 1041, 1093, 1139, 1142, 1159, 1165, 1168, 1181, 1184, 1188, 1191, 1198, 1201, 1222, 1225, 1247, 1251, 1252, 1256, 1267, 1271, 1272, 1276, 1277, 1281, 1282, 1286], "default_v": [58, 59, 849, 878, 880], "catch_except": [58, 59, 849, 878, 880], "rev": [58, 59, 849, 878, 880], "with_cal": [58, 59, 849, 878, 880], "catch": [58, 59, 155, 849, 878, 880], "callabl": [58, 59, 107, 108, 147, 153, 155, 159, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 225, 226, 228, 237, 238, 239, 310, 351, 352, 354, 355, 401, 413, 414, 425, 849, 855, 865, 878, 880, 886, 889, 904, 905, 974, 1030, 1041, 1093, 1149, 1152, 1384, 1385, 1386, 1387, 1388, 1394, 1395, 1396, 1398, 1399, 1400, 1401], "einops_rearrang": [58, 59, 107, 108, 849], "axes_length": [58, 59, 107, 108, 849, 881, 884, 886, 889, 891, 894], "arrang": [58, 59, 849, 881, 884], "rearrang": [58, 59, 107, 108, 849, 881, 884, 891, 894], "einops_reduc": [58, 59, 107, 108, 849], "reduct": [58, 59, 68, 69, 84, 85, 91, 92, 107, 108, 117, 118, 133, 134, 143, 155, 161, 849, 886, 889, 978, 981, 983, 986, 1287, 1288, 1291, 1293, 1296, 1298, 1301, 1546, 1547, 1550, 1552, 1555, 1558], "One": [58, 59, 70, 71, 74, 75, 107, 108, 119, 120, 123, 124, 143, 145, 154, 155, 159, 161, 162, 849, 886, 889, 1303, 1339, 1342, 1411, 1417, 1420], "prod": [58, 59, 82, 83, 107, 108, 131, 132, 143, 145, 159, 849, 886, 889, 1501], "einops_repeat": [58, 59, 107, 108, 849], "fourier_encod": [58, 59, 107, 108, 849], "max_freq": [58, 59, 107, 108, 849, 899, 902], "num_band": [58, 59, 107, 108, 849, 899, 902], "linear": [58, 59, 64, 65, 89, 90, 107, 108, 113, 114, 146, 153, 155, 157, 159, 162, 163, 164, 189, 190, 193, 195, 198, 205, 208, 220, 223, 849, 899, 902, 974, 1093, 1132, 1135, 1242, 1245, 1558], "concat": [58, 59, 70, 71, 91, 92, 119, 120, 154, 157, 159, 401, 425, 849, 899, 902, 1303, 1558], "band": [58, 59, 107, 108, 849, 899, 902], "linearli": [58, 59, 107, 108, 849, 899, 902, 1159, 1242, 1245], "oppos": [58, 59, 107, 108, 143, 849, 899, 902], "geometr": [58, 59, 107, 108, 849, 899, 902, 1159, 1267, 1271], "concaten": [58, 59, 70, 71, 154, 157, 159, 162, 849, 899, 902, 1303, 1309, 1312, 1558], "seper": [58, 59, 145, 849, 899, 902], "batch": [58, 59, 91, 92, 107, 108, 115, 116, 141, 150, 162, 401, 423, 424, 849, 899, 902, 906, 909, 1041, 1093, 1139, 1142, 1159, 1277, 1281, 1384, 1385, 1386, 1387, 1406, 1407, 1410], "expand": [58, 59, 70, 71, 107, 108, 141, 849, 899, 902, 1303, 1319, 1322], "gather": [58, 59, 107, 108, 849, 911, 914, 919], "gather_nd": [58, 59, 107, 108, 849, 1558], "get_num_dim": [58, 59, 107, 108, 849, 1558], "as_arrai": [58, 59, 107, 108, 849, 923, 926, 996], "has_nan": [58, 59, 107, 108, 849], "include_inf": [58, 59, 107, 108, 849, 931, 934, 1036, 1040], "inplace_decr": [58, 59, 107, 108, 849], "val": [58, 59, 91, 92, 107, 108, 152, 161, 849, 937, 940, 942, 945, 947, 950, 990, 991], "decrement": [58, 59, 107, 108, 849, 937, 940], "inplace_incr": [58, 59, 107, 108, 849], "inplace_upd": [58, 59, 107, 108, 152, 849], "ensure_in_backend": [58, 59, 152, 849, 947, 950], "inplac": [58, 59, 60, 61, 91, 92, 107, 108, 137, 139, 145, 149, 151, 154, 157, 161, 163, 849, 856, 860, 863, 936, 947, 950, 952, 1159, 1193, 1196], "is_arrai": [58, 59, 107, 108, 153, 849], "exclus": [58, 59, 60, 61, 82, 83, 91, 92, 107, 108, 109, 110, 131, 132, 141, 143, 150, 153, 156, 164, 228, 230, 231, 849, 953, 956, 958, 961, 968, 971, 1042, 1057, 1059, 1411, 1417, 1420, 1501, 1502, 1505, 1507, 1510], "trace": [58, 59, 66, 67, 91, 92, 107, 108, 115, 116, 138, 159, 176, 849, 953, 956, 958, 961, 968, 971, 989, 1032, 1159, 1557], "is_ivy_arrai": [58, 59, 107, 108, 152, 161, 849], "is_ivy_contain": [58, 59, 107, 108, 849], "is_native_arrai": [58, 59, 107, 108, 161, 849], "scatter_flat": [58, 59, 107, 108, 849], "occupi": [58, 59, 310, 346, 349, 357, 360, 849, 978, 981, 983, 986], "hold": [58, 59, 66, 67, 82, 83, 115, 116, 131, 132, 162, 849, 978, 981, 983, 986, 1159, 1203, 1206, 1501, 1507, 1510], "scatter_nd": [58, 59, 107, 108, 157, 161, 849, 1558], "arr": [58, 59, 99, 100, 143, 144, 310, 369, 372], "stable_divid": [58, 59, 107, 108, 150, 849], "denomin": [58, 59, 72, 73, 107, 108, 121, 122, 150, 176, 849, 921, 991, 998, 1001, 1406, 1407, 1410], "min_denomin": [58, 59, 107, 108, 849, 998, 1001], "_min_denomin": [58, 59, 107, 108, 849, 998, 1001], "stable_pow": [58, 59, 107, 108, 849], "min_bas": [58, 59, 107, 108, 849, 1003, 1006], "_min_bas": [58, 59, 72, 73, 107, 108, 121, 122, 849, 1003, 1006, 1406, 1407, 1410], "power": [58, 59, 66, 67, 107, 108, 115, 116, 155, 161, 162, 163, 435, 501, 504, 546, 549, 681, 684, 849, 920, 990, 1003, 1006, 1159, 1208, 1210, 1267, 1271, 1388, 1394], "supports_inplace_upd": [58, 59, 107, 108, 849], "supports_inplac": [58, 59, 107, 108], "to_list": [58, 59, 107, 108, 849, 1558], "represent": [58, 59, 88, 91, 92, 93, 94, 107, 108, 175, 227, 310, 311, 312, 346, 349, 357, 360, 401, 403, 404, 435, 436, 439, 451, 454, 481, 484, 496, 499, 506, 509, 646, 649, 661, 664, 849, 855, 1014, 1018], "to_numpi": [58, 59, 107, 108, 162, 849, 1558], "to_scalar": [58, 59, 107, 108, 849], "value_is_nan": [58, 59, 107, 108, 849], "92": [58, 59, 123, 124, 1042, 1070, 1073, 1159, 1170, 1173], "adam_step": [60, 61, 109, 110, 1042], "mw": [60, 61, 109, 110, 163, 1042, 1043, 1046, 1047, 1050], "vw": [60, 61, 109, 110, 163, 1042, 1043, 1046, 1047, 1050], "beta1": [60, 61, 109, 110, 163, 849, 856, 1042, 1043, 1046, 1047, 1050, 1062, 1065], "beta2": [60, 61, 109, 110, 163, 849, 856, 1042, 1043, 1046, 1047, 1050, 1062, 1065], "999": [60, 61, 103, 104, 109, 110, 163, 435, 741, 745, 1042, 1043, 1046, 1047, 1050, 1062, 1065, 1070, 1073], "epsilon": [60, 61, 66, 67, 68, 69, 72, 73, 109, 110, 115, 116, 117, 118, 121, 122, 141, 150, 152, 163, 849, 856, 1042, 1043, 1046, 1047, 1050, 1062, 1065, 1159, 1212, 1215, 1227, 1230, 1287, 1288, 1291, 1293, 1296, 1298, 1301, 1406, 1407, 1410], "1e": [60, 61, 68, 69, 72, 73, 109, 110, 117, 118, 121, 122, 141, 150, 152, 154, 163, 164, 310, 346, 349, 435, 616, 619, 849, 920, 921, 990, 991, 998, 1001, 1042, 1043, 1046, 1047, 1050, 1062, 1065, 1070, 1073, 1159, 1247, 1251, 1287, 1288, 1291, 1293, 1296, 1298, 1301, 1406, 1407, 1410, 1558], "07": [60, 61, 68, 69, 103, 104, 109, 110, 117, 118, 123, 124, 163, 435, 471, 474, 606, 609, 626, 629, 706, 709, 1042, 1043, 1046, 1047, 1050, 1052, 1053, 1056, 1061, 1062, 1065, 1081, 1287, 1288, 1291, 1293, 1296, 1298, 1301], "cost": [60, 61, 109, 110, 157, 1042, 1043, 1046, 1047, 1050, 1053, 1056, 1062, 1065, 1066, 1069, 1070, 1073, 1384, 1385, 1386, 1387], "weight": [60, 61, 64, 65, 72, 73, 109, 110, 113, 114, 121, 122, 141, 150, 159, 163, 164, 1042, 1043, 1046, 1047, 1050, 1053, 1056, 1062, 1065, 1066, 1069, 1070, 1073, 1093, 1139, 1142, 1144, 1147, 1154, 1157, 1406, 1407, 1410], "dc": [60, 61, 109, 110, 1042, 1043, 1046, 1047, 1050, 1053, 1056, 1062, 1065, 1066, 1069, 1070, 1073], "dw": [60, 61, 109, 110, 1042, 1043, 1046, 1047, 1050, 1053, 1056, 1062, 1065, 1066, 1069, 1070, 1073], "averag": [60, 61, 109, 110, 1042, 1043, 1046, 1047, 1050, 1062, 1065, 1384, 1385, 1386], "forget": [60, 61, 109, 110, 143, 1042, 1043, 1046, 1047, 1050, 1062, 1065], "adam": [60, 61, 109, 110, 162, 163, 164, 849, 856, 1042, 1043, 1046, 1047, 1050, 1062, 1065, 1558], "delta": [60, 61, 109, 110, 1042, 1043, 1046], "dcdw": [60, 61, 109, 110, 1042, 1043, 1046, 1047, 1050, 1053, 1056, 1062, 1065, 1066, 1069], "adam_step_delta": [60, 61, 109, 110, 1042, 1043, 1046], "182": [60, 61, 1042, 1043, 1046], "adam_upd": [60, 61, 109, 110, 163, 1042], "lr": [60, 61, 109, 110, 162, 163, 849, 856, 1042, 1047, 1050, 1053, 1056, 1062, 1065, 1066, 1069, 1070, 1073], "mw_tm1": [60, 61, 109, 110, 1042, 1047, 1050, 1062, 1065], "vw_tm1": [60, 61, 109, 110, 1042, 1047, 1050, 1062, 1065], "stop_gradi": [60, 61, 109, 110, 163, 401, 425, 849, 856, 1042, 1047, 1050, 1053, 1056, 1062, 1065, 1066, 1069, 1070, 1073, 1384, 1385, 1386, 1387, 1558], "rate": [60, 61, 109, 110, 1042, 1047, 1050, 1053, 1056, 1062, 1065, 1066, 1069, 1070, 1073, 1384, 1385, 1386, 1387], "stop": [60, 61, 97, 98, 109, 110, 149, 157, 159, 176, 228, 230, 231, 263, 264, 266, 267, 401, 402, 425, 1042, 1047, 1050, 1053, 1056, 1062, 1065, 1066, 1069, 1070, 1073, 1075, 1079, 1384, 1385, 1386, 1387, 1388, 1399], "ws_new": [60, 61, 109, 110, 1042, 1047, 1050, 1062, 1065, 1066, 1069, 1070, 1073], "gradient_descent_upd": [60, 61, 109, 110, 1042, 1384, 1385, 1386, 1387, 1558], "handl": [60, 61, 88, 91, 92, 93, 94, 137, 141, 143, 144, 149, 150, 151, 152, 153, 154, 155, 157, 163, 225, 226, 401, 403, 404, 405, 406, 407, 410, 415, 419, 420, 431, 434], "higher": [60, 61, 158, 159, 164, 176], "descent": [60, 61, 109, 110, 163, 1042, 1053, 1056], "new_weight": [60, 61, 109, 110, 162, 1042, 1053, 1056, 1062, 1065], "95": [60, 61, 74, 75, 109, 110, 123, 124, 189, 190, 193, 435, 706, 709, 1042, 1043, 1046, 1053, 1056, 1070, 1073, 1411, 1422, 1425], "97": [60, 61, 103, 104, 109, 110, 123, 124, 435, 461, 464, 1042, 1053, 1056], "96": [60, 61, 103, 104, 105, 106, 107, 108, 123, 124, 435, 516, 519, 736, 740, 849, 886, 889, 1042, 1053, 1056, 1159, 1222, 1225, 1501, 1512, 1515], "is_var": [60, 61, 109, 110, 1042, 1057, 1059], "lamb_upd": [60, 61, 109, 110, 1042], "max_trust_ratio": [60, 61, 109, 110, 1042, 1062, 1065], "decay_lambda": [60, 61, 109, 110, 1042, 1062, 1065, 1066, 1069], "trust": [60, 61, 109, 110, 1042, 1062, 1065], "ratio": [60, 61, 109, 110, 1042, 1062, 1065], "decai": [60, 61, 109, 110, 1042, 1062, 1065, 1066, 1069], "lamb": [60, 61, 109, 110, 163, 1042, 1062, 1065], "784": [60, 61, 1042, 1062, 1065], "78": [60, 61, 435, 506, 509, 606, 609, 611, 614, 706, 709, 1042, 1062, 1065, 1159, 1222, 1225, 1411, 1422, 1425, 1501, 1512, 1515], "02": [60, 61, 72, 73, 74, 75, 103, 104, 109, 110, 123, 124, 435, 626, 629, 849, 998, 1001, 1042, 1043, 1046, 1062, 1065, 1406, 1407, 1410, 1411, 1427, 1430], "5e": [60, 61, 1042, 1062, 1065], "04": [60, 61, 109, 110, 154, 155, 189, 200, 203, 310, 346, 349, 435, 551, 554, 616, 619, 849, 990, 1042, 1043, 1046, 1062, 1065, 1093, 1154, 1157], "0e": [60, 61, 109, 110, 1042, 1062, 1065], "lars_upd": [60, 61, 109, 110, 1042], "lar": [60, 61, 109, 110, 163, 1042, 1066, 1069], "optimizer_upd": [60, 61, 109, 110, 1042], "effective_grad": [60, 61, 109, 110, 1042, 1070, 1073], "3e": [60, 61, 109, 110, 1042, 1070, 1073], "preserve_typ": [60, 61, 109, 110, 1042, 1075, 1079], "preserv": [60, 61, 88, 91, 92, 93, 94, 109, 110, 155, 164, 176, 1042, 1075, 1079, 1303, 1324, 1327], "variable_data": [60, 61, 109, 110, 1042], "intern": [60, 61, 91, 92, 109, 110, 139, 141, 144, 146, 152, 1042, 1087, 1091, 1388, 1389, 1398, 1399], "gradient": [61, 110, 156, 162, 163, 175, 176, 401, 425, 1043, 1046, 1047, 1050, 1051, 1052, 1053, 1056, 1057, 1059, 1061, 1062, 1065, 1066, 1069, 1070, 1073, 1074, 1075, 1079, 1080, 1081, 1082, 1086, 1087, 1091, 1092, 1384, 1385, 1386, 1387, 1558], "conv1d": [64, 65, 113, 114, 1093], "nwc": [64, 65, 113, 114, 1093, 1095, 1098, 1100, 1103], "dilat": [64, 65, 105, 106, 113, 114, 1093, 1094, 1095, 1098, 1100, 1103, 1105, 1108, 1110, 1112, 1114, 1117, 1119, 1122, 1124, 1125, 1126, 1127, 1130], "convolut": [64, 65, 113, 114, 1093, 1095, 1098, 1100, 1103, 1105, 1108, 1110, 1112, 1114, 1117, 1119, 1122, 1124, 1125, 1127, 1130], "fw": [64, 65, 113, 114, 154, 155, 1093, 1095, 1098, 1100, 1103, 1105, 1108, 1110, 1112, 1114, 1117, 1119, 1122, 1124, 1125, 1127, 1130], "d_out": [64, 65, 113, 114, 1093, 1095, 1098, 1100, 1103, 1105, 1108, 1110, 1112, 1114, 1117, 1119, 1122, 1124, 1125], "ncw": [64, 65, 113, 114, 1093, 1095, 1098, 1100, 1103], "wio": [64, 65, 1093, 1095, 1098], "conv1d_transpos": [64, 65, 113, 114, 1093], "output_shap": [64, 65, 113, 114, 1093, 1094, 1100, 1103, 1110, 1112, 1119, 1122, 1125], "conv2d": [64, 65, 113, 114, 1093, 1558], "fh": [64, 65, 113, 114, 1093, 1105, 1108, 1110, 1112, 1114, 1117, 1119, 1122, 1124, 1125, 1127, 1130], "hwio": [64, 65, 1093, 1105, 1108], "conv3d": [64, 65, 113, 114, 1093], "ndhwc": [64, 65, 113, 114, 1093, 1114, 1117, 1119, 1122], "conv3d_transpos": [64, 65, 113, 114, 1093], "depthwise_conv2d": [64, 65, 113, 114, 1093, 1558], "randint": [64, 65, 74, 75, 113, 114, 123, 124, 143, 1411, 1558], "255": [64, 65, 113, 114, 435, 501, 504], "random_norm": [64, 65, 74, 75, 113, 114, 123, 124, 1093, 1119, 1122, 1127, 1130, 1159, 1247, 1251, 1411, 1464, 1465, 1469], "std": [64, 65, 74, 75, 82, 83, 113, 114, 123, 124, 131, 132, 145, 1093, 1119, 1122, 1127, 1130, 1411, 1417, 1420, 1422, 1425, 1464, 1465, 1469, 1501], "dropout": [64, 65, 113, 114, 162, 1093], "prob": [64, 65, 113, 114, 123, 124, 1093, 1132, 1135, 1411, 1412, 1415], "scale": [64, 65, 109, 110, 113, 114, 401, 423, 424, 1042, 1066, 1069, 1093, 1132, 1135, 1149, 1152, 1154, 1157], "bia": [64, 65, 72, 73, 113, 114, 121, 122, 159, 163, 849, 974, 1093, 1139, 1142, 1144, 1147, 1406, 1407, 1410], "transform": [64, 65, 113, 114, 164, 175, 1093, 1132, 1135, 1139, 1142, 1557], "outer_batch_shap": [64, 65, 113, 114, 1093, 1139, 1142], "inner_batch_shap": [64, 65, 113, 114, 1093, 1139, 1142], "in_featur": [64, 65, 113, 114, 1093, 1139, 1142], "out_featur": [64, 65, 113, 114, 1093, 1132, 1135, 1139, 1142], "84": [64, 65, 103, 104, 121, 122, 123, 124, 310, 357, 360, 401, 412, 1159, 1222, 1225, 1406, 1407, 1410, 1501, 1512, 1515], "133": [64, 65, 849, 871, 874], "134": [64, 65], "lstm_updat": [64, 65, 113, 114, 159, 1093], "init_h": [64, 65, 113, 114, 159, 1093, 1144, 1147], "init_c": [64, 65, 113, 114, 159, 1093, 1144, 1147], "recurrent_kernel": [64, 65, 113, 114, 159, 1093, 1144, 1147], "recurrent_bia": [64, 65, 113, 114, 159, 1093, 1144, 1147], "multi_head_attent": [64, 65, 113, 114, 152, 1093], "num_head": [64, 65, 113, 114, 1093, 1149, 1152], "mask": [64, 65, 113, 114, 157, 849, 919, 1093, 1149, 1152, 1154, 1157], "to_q_fn": [64, 65, 113, 114, 1093, 1149, 1152], "to_kv_fn": [64, 65, 113, 114, 1093, 1149, 1152], "to_out_fn": [64, 65, 113, 114, 152, 1093, 1149, 1152], "to_q_v": [64, 65, 113, 114, 1093, 1149, 1152], "to_kv_v": [64, 65, 113, 114, 1093, 1149, 1152], "to_out_v": [64, 65, 113, 114, 1093, 1149, 1152], "scaled_dot_product_attent": [64, 65, 113, 114, 1093], "linear_algebra": [66, 67, 115, 116, 156, 1159, 1160, 1163, 1165, 1168, 1170, 1173, 1175, 1176, 1179, 1181, 1184, 1185, 1187, 1188, 1191, 1193, 1196, 1198, 1201, 1203, 1206, 1208, 1210, 1212, 1215, 1217, 1220, 1222, 1225, 1227, 1230, 1232, 1235, 1237, 1240, 1242, 1245, 1247, 1251, 1252, 1256, 1257, 1261, 1262, 1266, 1267, 1271, 1272, 1276, 1277, 1281, 1282, 1286], "choleski": [66, 67, 115, 116, 152, 1159], "symmetr": [66, 67, 105, 106, 115, 116, 141, 1159, 1160, 1163, 1181, 1184, 1185, 1187, 1282, 1286], "625": [66, 67, 1159, 1160, 1163], "cross": [66, 67, 68, 69, 115, 116, 117, 118, 142, 1159, 1287, 1288, 1291, 1293, 1296, 1298, 1301, 1558], "vif": [66, 67, 115, 116, 1159, 1165, 1168], "det": [66, 67, 115, 116, 1159], "offset": [66, 67, 115, 116, 1159, 1175, 1176, 1179, 1262, 1266], "axis1": [66, 67, 70, 71, 115, 116, 119, 120, 1159, 1176, 1179, 1262, 1266, 1303, 1364, 1368], "axis2": [66, 67, 115, 116, 1159, 1176, 1179, 1262, 1266], "eigh": [66, 67, 115, 116, 1159], "eigvalsh": [66, 67, 1159], "inv": [66, 67, 115, 116, 1159, 1558], "adjoint": [66, 67, 115, 116, 1159, 1193, 1196, 1247, 1251], "matmul": [66, 67, 115, 116, 140, 155, 156, 159, 849, 1041, 1159, 1247, 1251, 1558], "matrix_norm": [66, 67, 115, 116, 1159], "ord": [66, 67, 115, 116, 1159, 1203, 1206, 1277, 1281], "fro": [66, 67, 115, 116, 1159, 1203, 1206], "liter": [66, 67, 115, 116, 148, 1159, 1203, 1206, 1277, 1281], "nuc": [66, 67, 115, 116, 1159, 1203, 1206], "matrix_rank": [66, 67, 115, 116, 1159], "atol": [66, 67, 115, 116, 1159, 1212, 1215], "rtol": [66, 67, 115, 116, 154, 1159, 1212, 1215, 1227, 1230], "rank": [66, 67, 70, 71, 84, 85, 115, 116, 119, 120, 133, 134, 228, 269, 272, 1159, 1165, 1168, 1212, 1215, 1232, 1235, 1242, 1245, 1262, 1266, 1272, 1276, 1277, 1281, 1303, 1314, 1317, 1319, 1322, 1359, 1362, 1374, 1378, 1379, 1383, 1438, 1454, 1457, 1546, 1547, 1550, 1552, 1555], "singular": [66, 67, 115, 116, 1159, 1203, 1206, 1212, 1215, 1227, 1230, 1247, 1251, 1252, 1256], "toler": [66, 67, 115, 116, 138, 154, 1159, 1212, 1215, 1227, 1230], "small": [66, 67, 72, 73, 115, 116, 121, 122, 145, 150, 154, 157, 159, 163, 176, 435, 661, 664, 1159, 1212, 1215, 1227, 1230, 1406, 1407, 1410], "largest_singular_valu": [66, 67, 115, 116, 1159, 1212, 1215, 1227, 1230], "equival": [66, 67, 115, 116, 152, 153, 157, 162, 164, 228, 230, 231, 435, 501, 504, 636, 639, 641, 644, 696, 699, 1159, 1212, 1215, 1227, 1230, 1242, 1245, 1277, 1281], "ep": [66, 67, 115, 116, 310, 346, 349, 1159, 1212, 1215, 1227, 1230], "defici": [66, 67, 1159, 1212, 1215], "matrix_transpos": [66, 67, 115, 116, 161, 1159], "pinv": [66, 67, 115, 116, 1159, 1558], "0426": [66, 67, 115, 116, 1411, 1422, 1425], "0964": [66, 67, 115, 116], "0605": [66, 67, 115, 116], "1368": [66, 67, 115, 116], "qr": [66, 67, 115, 116, 1159], "slogdet": [66, 67, 115, 116, 1159], "namedtupl": [66, 67, 78, 79, 115, 116, 127, 128, 1159, 1181, 1184, 1232, 1235, 1237, 1240, 1247, 1251, 1464, 1465, 1469, 1470, 1474, 1475, 1479], "logabsdet": [66, 67, 115, 116, 1159, 1237, 1240], "6931472": [66, 67, 1159, 1237, 1240], "solv": [66, 67, 115, 116, 138, 153, 160, 175, 1159], "svd": [66, 67, 115, 116, 1159, 1252, 1256, 1558], "compute_uv": [66, 67, 115, 116, 1159, 1247, 1251], "full_matric": [66, 67, 115, 116, 1159, 1247, 1251], "svdval": [66, 67, 115, 116, 1159], "tensordot": [66, 67, 115, 116, 143, 1159], "vander": [66, 67, 115, 116, 1159], "vandermond": [66, 67, 115, 116, 1159, 1267, 1271], "column": [66, 67, 115, 116, 228, 249, 250, 1159, 1181, 1184, 1203, 1206, 1232, 1235, 1242, 1245, 1247, 1251, 1267, 1271], "len": [66, 67, 115, 116, 152, 153, 155, 161, 164, 228, 269, 272, 1159, 1267, 1271], "125": [66, 67, 115, 116, 435, 501, 504, 1159, 1267, 1271], "vecdot": [66, 67, 115, 116, 1159], "vector_norm": [66, 67, 115, 116, 1159], "vector_to_skew_symmetric_matrix": [66, 67, 115, 116, 1159, 1558], "binary_cross_entropi": [68, 69, 117, 118, 1287], "pred": [68, 69, 117, 118, 141, 150, 152, 1287, 1288, 1291, 1293, 1296, 1298, 1301], "predict": [68, 69, 117, 118, 1287, 1288, 1291, 1293, 1296, 1298, 1301], "amount": [68, 69, 117, 118, 144, 154, 401, 431, 1287, 1288, 1291, 1293, 1296, 1298, 1301], "smooth": [68, 69, 117, 118, 1287, 1288, 1291, 1293, 1296, 1298, 1301], "binari": [68, 69, 117, 118, 435, 481, 484, 496, 499, 506, 509, 646, 649, 1287, 1288, 1291], "entropi": [68, 69, 117, 118, 1287, 1288, 1291, 1293, 1296, 1298, 1301], "357": [68, 69, 117, 118, 1287, 1288, 1291, 1298, 1301], "223": [68, 69, 117, 118, 1287, 1288, 1291], "cross_entropi": [68, 69, 117, 118, 141, 150, 152, 1287, 1298, 1301], "3862944": [68, 69, 1287, 1293, 1296], "sparse_cross_entropi": [68, 69, 117, 118, 1287], "logit": [68, 69, 117, 118, 1287, 1298, 1301], "loss": [69, 118, 143, 150, 153, 156, 162, 163, 164, 1288, 1291, 1293, 1296, 1298, 1301, 1558], "x_min": [70, 71, 119, 120, 164, 1303, 1304, 1307], "x_max": [70, 71, 119, 120, 164, 1303, 1304, 1307], "join": [70, 71, 91, 92, 147, 1303, 1309, 1312, 1359, 1362, 1558], "count": [70, 71, 78, 79, 84, 85, 127, 128, 133, 134, 145, 162, 401, 419, 1159, 1272, 1276, 1303, 1309, 1312, 1324, 1327, 1464, 1465, 1469, 1470, 1474, 1546, 1547, 1550, 1552, 1555], "constant_pad": [70, 71, 119, 120, 1303], "expand_dim": [70, 71, 119, 120, 153, 159, 162, 1093, 1127, 1130, 1303, 1558], "permute_dim": [70, 71, 119, 120, 1303], "nativeshap": [70, 71, 74, 75, 119, 120, 123, 124, 228, 243, 257, 284, 285, 302, 304, 849, 983, 986, 996, 1013, 1019, 1093, 1100, 1103, 1110, 1112, 1119, 1122, 1303, 1339, 1342, 1411, 1417, 1420, 1422, 1425, 1427, 1430], "length": [70, 71, 88, 91, 92, 93, 94, 119, 120, 148, 155, 162, 228, 230, 231, 269, 272, 849, 1041, 1159, 1247, 1251, 1252, 1256, 1303, 1339, 1342], "valueerror": [70, 71, 107, 108, 119, 120, 147, 849, 1008, 1012, 1303, 1339, 1342, 1354, 1357], "reus": [70, 71, 119, 120, 147, 155, 1303, 1339, 1342], "memori": [70, 71, 119, 120, 144, 152, 153, 157, 159, 174, 176, 228, 269, 272, 401, 405, 420, 425, 431, 434, 1093, 1144, 1147, 1303, 1339, 1342, 1558], "buffer": [70, 71, 119, 120, 176, 1303, 1339, 1342], "roll": [70, 71, 119, 120, 141, 149, 1303], "larger": [70, 71, 82, 83, 119, 120, 131, 132, 155, 310, 346, 349, 1303, 1304, 1307, 1344, 1347, 1501, 1532, 1535, 1541, 1545], "restor": [70, 71, 119, 120, 1303, 1344, 1347], "num_or_size_split": [70, 71, 91, 92, 119, 120, 159, 1303, 1349, 1352], "with_remaind": [70, 71, 91, 92, 119, 120, 1303, 1349, 1352], "evenli": [70, 71, 91, 92, 119, 120, 228, 230, 231, 263, 264, 266, 267, 1303, 1349, 1352], "entri": [70, 71, 91, 92, 119, 120, 143, 228, 263, 264, 266, 267, 1303, 1349, 1352, 1388, 1401], "squeez": [70, 71, 119, 120, 1303, 1558], "swapax": [70, 71, 119, 120, 1303], "axis0": [70, 71, 119, 120, 1303, 1364, 1368], "swap_ax": [70, 71], "tile": [70, 71, 107, 108, 119, 120, 1303, 1558], "rep": [70, 71, 119, 120, 1303, 1369, 1373], "unpack": [70, 71, 119, 120, 148, 154, 155, 1303, 1374, 1378], "zero_pad": [70, 71, 119, 120, 1303, 1558], "layer_norm": [72, 73, 121, 122, 1406], "normalized_idx": [72, 73, 121, 122, 1406, 1407, 1410], "new_std": [72, 73, 121, 122, 1406, 1407, 1410], "learnabl": [72, 73, 121, 122, 164, 1406, 1407, 1410], "gamma": [72, 73, 121, 122, 1406, 1407, 1410], "0976": [72, 73, 1406, 1407, 1410], "3452": [72, 73, 1406, 1407, 1410], "2740": [72, 73, 1406, 1407, 1410], "1047": [72, 73, 1406, 1407, 1410], "5886": [72, 73, 1406, 1407, 1410], "2732": [72, 73, 1406, 1407, 1410], "7696": [72, 73, 1406, 1407, 1410], "7024": [72, 73, 1406, 1407, 1410], "2518": [72, 73, 1406, 1407, 1410], "826": [72, 73, 1406, 1407, 1410], "178": [72, 73, 1406, 1407, 1410], "981": [72, 73, 1406, 1407, 1410], "831": [72, 73, 1406, 1407, 1410], "421": [72, 73, 1406, 1407, 1410], "multinomi": [74, 75, 123, 124, 1411], "population_s": [74, 75, 123, 124, 1411, 1412, 1415], "num_sampl": [74, 75, 123, 124, 1411, 1412, 1415], "seed": [74, 75, 91, 92, 123, 124, 1411, 1412, 1415, 1417, 1420, 1422, 1425, 1433, 1436, 1558], "unnorm": [74, 75, 123, 124, 155, 1411, 1412, 1415], "popul": [74, 75, 82, 83, 91, 92, 123, 124, 131, 132, 143, 144, 155, 159, 1411, 1412, 1415, 1501, 1532, 1535, 1541, 1545], "uniform": [74, 75, 123, 124, 163, 1411, 1412, 1415, 1417, 1420, 1427, 1430], "batch_shap": [74, 75, 97, 98, 123, 124, 157, 159, 161, 228, 249, 250, 279, 282, 1093, 1144, 1147, 1149, 1152, 1154, 1157, 1159, 1282, 1286, 1411, 1412, 1415], "sampl": [74, 75, 82, 83, 123, 124, 131, 132, 151, 154, 155, 228, 263, 264, 1093, 1132, 1135, 1411, 1412, 1415, 1417, 1420, 1422, 1425, 1427, 1430, 1501, 1532, 1535, 1541, 1545], "independ": [74, 75, 123, 124, 138, 145, 151, 159, 164, 1159, 1165, 1168, 1242, 1245, 1411, 1412, 1415], "drawn": [74, 75, 123, 124, 155, 1411, 1412, 1415, 1417, 1420, 1422, 1425, 1427, 1430], "parameter": [74, 75, 123, 124, 1411, 1422, 1425, 1427, 1430], "highest": [74, 75, 123, 124, 1411, 1417, 1420], "low": [74, 75, 123, 124, 153, 157, 159, 1411, 1417, 1420, 1427, 1430], "half": [74, 75, 123, 124, 157, 228, 230, 231, 1411, 1417, 1420, 1427, 1430], "int16": [74, 75, 99, 100, 123, 124, 143, 155, 159, 310, 328, 331, 339, 351, 352, 374, 377, 1501, 1502, 1505, 1507, 1510, 1528, 1531, 1536, 1540], "int64": [74, 75, 76, 77, 80, 81, 99, 100, 123, 124, 125, 126, 129, 130, 131, 132, 143, 155, 159, 310, 328, 331, 339, 345, 351, 352, 357, 360, 379, 382, 1438, 1439, 1442, 1444, 1447, 1485, 1491, 1494, 1501, 1502, 1505, 1507, 1510, 1528, 1531, 1536, 1540], "44": [74, 75, 103, 104, 123, 124, 435, 461, 464, 701, 704, 721, 724, 726, 729, 849, 865, 1159, 1222, 1225, 1388, 1396, 1438, 1459, 1463, 1501, 1512, 1515], "72": [74, 75, 109, 110, 435, 546, 549, 551, 554, 1042, 1053, 1056, 1159, 1222, 1225, 1501, 1512, 1515], "235": [74, 75], "float16": [74, 75, 123, 124, 143, 155, 310, 334, 346, 349, 354, 355], "49": [74, 75, 115, 116, 189, 215, 218, 435, 721, 724, 1501, 1512, 1515], "807": [74, 75], "42": [74, 75, 89, 90, 109, 110, 121, 122, 123, 124, 159, 164, 189, 220, 223, 435, 501, 504, 1042, 1043, 1046, 1053, 1056, 1159, 1203, 1206, 1222, 1225, 1406, 1407, 1410, 1411, 1432, 1501, 1502, 1505, 1512, 1515], "random_uniform": [74, 75, 123, 124, 144, 155, 163, 1411, 1558], "boundari": [74, 75, 123, 124, 1411, 1427, 1430], "86": [74, 75, 123, 124, 1042, 1043, 1046], "06": [74, 75, 103, 104, 109, 110, 155, 162, 189, 190, 193, 310, 346, 349, 1042, 1062, 1065], "53": [74, 75, 103, 104, 401, 431, 1042, 1052, 1061, 1081, 1406, 1407, 1410], "shuffl": [74, 75, 91, 92, 123, 124, 1411, 1558], "argmax": [76, 77, 125, 126, 1438, 1558], "output_dtyp": [76, 77, 125, 126, 1438, 1439, 1442, 1444, 1447], "insert": [76, 77, 125, 126, 1303, 1319, 1322, 1388, 1393, 1438, 1439, 1442, 1485, 1491, 1494], "occurr": [76, 77, 1438, 1439, 1442, 1444, 1447, 1464, 1465, 1469], "argmin": [76, 77, 125, 126, 1438, 1558], "singleton": [76, 77, 82, 83, 84, 85, 115, 116, 125, 126, 131, 132, 133, 134, 159, 1159, 1277, 1281, 1303, 1319, 1322, 1354, 1357, 1438, 1444, 1447, 1501, 1516, 1519, 1520, 1523, 1524, 1527, 1528, 1531, 1532, 1535, 1536, 1540, 1541, 1545, 1546, 1547, 1550, 1552, 1555], "accordingli": [76, 77, 82, 83, 84, 85, 115, 116, 125, 126, 131, 132, 133, 134, 148, 153, 159, 228, 269, 272, 435, 551, 554, 616, 619, 1159, 1277, 1281, 1438, 1444, 1447, 1464, 1465, 1469, 1470, 1474, 1475, 1479, 1480, 1484, 1501, 1516, 1519, 1520, 1523, 1524, 1527, 1528, 1531, 1532, 1535, 1536, 1540, 1541, 1545, 1546, 1547, 1550, 1552, 1555], "argwher": [76, 77, 125, 126, 148, 1438], "nonzero": [76, 77, 125, 126, 435, 451, 454, 661, 664, 1438], "as_tupl": [76, 77, 125, 126, 1438, 1454, 1457], "fewer": [76, 77, 125, 126, 1438, 1454, 1457], "yield": [76, 77, 142, 148, 1438, 1459, 1463], "unique_al": [78, 79, 127, 128, 1464], "unique_count": [78, 79, 127, 128, 1464], "field": [78, 79, 127, 128, 175, 1159, 1181, 1184, 1232, 1235, 1247, 1251, 1464, 1465, 1469, 1470, 1474, 1475, 1479], "unique_invers": [78, 79, 127, 128, 1464], "inverse_indic": [78, 79, 127, 128, 1464, 1465, 1469, 1475, 1479], "reconstruct": [78, 79, 127, 128, 1159, 1247, 1251, 1464, 1465, 1469, 1475, 1479], "unique_valu": [78, 79, 127, 128, 1464], "argsort": [80, 81, 129, 130, 1485, 1491, 1494], "descend": [80, 81, 129, 130, 1159, 1247, 1251, 1252, 1256, 1485, 1486, 1489, 1496, 1499], "ascend": [80, 81, 129, 130, 1485, 1486, 1489, 1491, 1494], "stabil": [80, 81, 129, 130, 157, 849, 998, 1001, 1003, 1006, 1485, 1486, 1489, 1496, 1499], "searchsort": [80, 81, 129, 130, 1485], "sorter": [80, 81, 129, 130, 1485, 1491, 1494], "ret_dtyp": [80, 81, 129, 130, 1485, 1491, 1494], "cumprod": [82, 83, 131, 132, 153, 164, 1501], "cumul": [82, 83, 131, 132, 175, 1501, 1502, 1505, 1507, 1510], "120": [82, 83, 88, 93, 94, 131, 132, 1159, 1222, 1225], "cumsum": [82, 83, 131, 132, 143, 1501, 1558], "einsum": [82, 83, 131, 132, 1501], "equat": [82, 83, 131, 132, 1159, 1242, 1245, 1501, 1512, 1515], "arithmet": [82, 83, 131, 132, 153, 435, 501, 504, 1501, 1520, 1523], "x_i": [82, 83, 103, 104, 146, 435, 436, 439, 441, 444, 446, 449, 456, 459, 461, 464, 466, 469, 486, 489, 511, 514, 516, 519, 521, 524, 546, 549, 551, 554, 556, 559, 576, 579, 581, 584, 586, 589, 591, 594, 606, 609, 611, 614, 616, 619, 621, 624, 636, 639, 666, 669, 701, 704, 706, 709, 711, 714, 716, 719, 721, 724, 726, 729, 736, 740, 741, 745, 746, 750, 1464, 1465, 1469, 1470, 1474, 1475, 1479, 1480, 1484, 1501, 1516, 1519, 1520, 1523, 1524, 1527, 1532, 1535, 1536, 1540, 1541, 1545], "propag": [82, 83, 435, 501, 504, 1501, 1516, 1519, 1520, 1523, 1524, 1527, 1532, 1535, 1536, 1540, 1541, 1545], "By": [82, 83, 84, 85, 131, 132, 133, 134, 143, 145, 150, 152, 153, 159, 163, 164, 1159, 1272, 1276, 1303, 1334, 1337, 1501, 1502, 1505, 1516, 1519, 1520, 1523, 1524, 1527, 1528, 1531, 1532, 1535, 1536, 1540, 1541, 1545, 1546, 1547, 1550, 1552, 1555], "var": [82, 83, 131, 132, 135, 136, 145, 159, 1384, 1385, 1386, 1501], "varianc": [82, 83, 131, 132, 1501, 1541, 1545], "freedom": [82, 83, 131, 132, 140, 1501, 1532, 1535, 1541, 1545], "constitut": [82, 83, 131, 132, 150, 159, 1501, 1532, 1535, 1541, 1545], "unbias": [82, 83, 131, 132, 1501, 1541, 1545], "commonli": [82, 83, 131, 132, 147, 150, 1501, 1532, 1535, 1541, 1545], "bessel": [82, 83, 131, 132, 1501, 1532, 1535, 1541, 1545], "6666665": [82, 83, 162, 1501, 1541, 1545], "667": [82, 83, 107, 108, 435, 531, 534, 849, 998, 1001, 1464, 1465, 1469, 1501, 1541, 1545], "AND": [84, 85, 133, 134, 435, 481, 484, 631, 634, 1546, 1547, 1550], "backward": [84, 85, 133, 134, 176, 435, 696, 699, 1159, 1272, 1276, 1546, 1547, 1550, 1552, 1555], "add_ivy_array_instance_method": 86, "cl": [86, 87, 135, 136], "to_ignor": [86, 87, 135, 136, 1388, 1399], "loop": [86, 87, 135, 136, 140, 148, 176, 1384, 1385, 1386, 1387], "_wrap_funct": [86, 87, 135, 136, 150, 151], "toi": [86, 87, 135, 136], "arrayexampl": [86, 87], "hasattr": [86, 87, 135, 136], "dict_in": [88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134], "queue": [88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 162, 849, 928, 993, 1034], "queue_load_s": [88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134], "container_combine_method": [88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134], "list_join": [88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134], "queue_timeout": [88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134], "print_limit": [88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134], "key_length_limit": [88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134], "print_ind": [88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134], "print_line_spac": [88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134], "ivyh": [88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134], "default_key_color": [88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134], "keyword_color_dict": [88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134], "rebuild_child_contain": [88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134], "types_to_iteratively_nest": [88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134], "alphabetical_kei": [88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134], "containerwithactiv": [88, 89, 93, 94], "containerwithconvers": [88, 93, 94, 95], "containerwithcr": [88, 93, 94, 97], "containerwithdatatyp": [88, 93, 94, 99], "containerwithdevic": [88, 93, 94, 101], "containerwithelementwis": [88, 93, 94, 103, 141], "containerwithextens": [88, 93, 94, 105], "containerwithgener": [88, 93, 94, 107], "containerwithgradi": [88, 93, 94, 109], "containerwithimag": [88, 93, 94, 111], "containerwithlay": [88, 93, 94, 113], "containerwithlinearalgebra": [88, 93, 94, 115], "containerwithloss": [88, 93, 94, 117], "containerwithnorm": [88, 93, 94, 121], "containerwithrandom": [88, 93, 94, 123], "containerwithsearch": [88, 93, 94, 125], "containerwithset": [88, 93, 94, 127], "containerwithsort": [88, 93, 94, 129], "containerwithstatist": [88, 93, 94, 131], "containerwithutil": [88, 93, 94, 133], "dictionari": [88, 91, 92, 93, 94, 143, 162, 176, 401, 424, 1042, 1051], "multiprocess": [88, 91, 92, 93, 94, 162, 176, 849], "asynchron": [88, 91, 92, 93, 94], "arriv": [88, 91, 92, 93, 94, 157, 849, 993], "timeout": [88, 91, 92, 93, 94, 849, 928, 993, 1034], "whitespac": [88, 91, 92, 93, 94], "indent": [88, 91, 92, 93, 94, 162], "extra": [88, 91, 92, 93, 94, 139, 143, 145, 151, 153, 154, 157, 159, 849, 1041], "newlin": [88, 91, 92, 93, 94, 146], "color": [88, 91, 92, 93, 94, 1606, 1607], "map": [88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 113, 114, 115, 116, 117, 118, 119, 120, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 141, 143, 149, 150, 153, 155, 156, 162, 175, 176, 849, 1041, 1388, 1395, 1396, 1400, 1401, 1557], "termcolor": [88, 91, 92, 93, 94], "constructor": [88, 91, 92, 93, 94, 143, 144, 161, 849, 856], "alphabet": [88, 91, 92, 93, 94], "rshift": [88, 93, 94], "43": [88, 93, 94, 123, 124, 435, 501, 504, 1411, 1422, 1425, 1427, 1430, 1438, 1459, 1463], "143": [88, 93, 94, 103, 104, 145, 435, 736, 740], "containerbas": [89, 90, 91, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 141], "key_chain": [89, 90, 91, 92, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 113, 114, 115, 116, 117, 118, 119, 120, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 1388, 1401], "to_appli": [89, 90, 91, 92, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 113, 114, 115, 116, 117, 118, 119, 120, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 1388, 1401], "prune_unappli": [89, 90, 91, 92, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 113, 114, 115, 116, 117, 118, 119, 120, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 1388, 1401], "map_sequ": [89, 90, 91, 92, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 113, 114, 115, 116, 117, 118, 119, 120, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134], "formul": [89, 90], "chain": [89, 90, 91, 92, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 113, 114, 115, 116, 117, 118, 119, 120, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 139, 141, 153, 163, 164, 176, 1384, 1385, 1386, 1388, 1401], "prune": [89, 90, 91, 92, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 113, 114, 115, 116, 117, 118, 119, 120, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 1388, 1401, 1402, 1403], "slope": [89, 90, 189, 195, 198], "leaki": [89, 90, 189, 195, 198], "371": [89, 90], "rectifi": [89, 90, 189, 195, 198, 205, 208], "revert": [89, 90, 189, 220, 223], "535": [89, 90, 189, 220, 223], "948": [89, 90], "static_gelu": [89, 90], "static_leaky_relu": [89, 90], "static_log_softmax": [89, 90], "static_relu": [89, 90], "static_sigmoid": [89, 90], "static_softmax": [89, 90], "static_softplu": [89, 90], "__getitem__": [91, 92, 141], "queri": [91, 92, 141, 143, 161, 401, 412, 424, 849, 919, 1093, 1149, 1152, 1154, 1157], "slice": [91, 92, 107, 108, 849, 906, 909, 911, 914, 919, 1388, 1397], "__setitem__": [91, 92, 139, 141, 161], "all_fals": [91, 92], "assert_is_bool": [91, 92], "all_key_chain": [91, 92], "include_empti": [91, 92], "all_tru": [91, 92, 141, 162], "as_bool": [91, 92], "assert_contains_sub_contain": [91, 92], "sub_cont": [91, 92], "diff": [91, 92, 141, 145, 162], "assert_contains_sub_structur": [91, 92], "assert_ident": [91, 92], "check_typ": [91, 92], "same_arrai": [91, 92, 162], "arrays_equ": [91, 92], "assert_identical_structur": [91, 92], "at_key_chain": [91, 92], "ignore_key_error": [91, 92], "ignore_non": [91, 92], "at_kei": [91, 92], "ignor": [91, 92, 142, 145, 155, 176, 228, 269, 272, 1388, 1399], "substr": [91, 92], "duplic": [91, 92, 140, 146, 148, 151, 154, 163], "container_rightmost": [91, 92], "common_key_chain": [91, 92, 141], "cont_inplace_upd": [91, 92], "contains_sub_contain": [91, 92], "contains_sub_structur": [91, 92], "create_if_abs": [91, 92], "noth": [91, 92, 157], "cutoff_at_depth": [91, 92], "depth_cutoff": [91, 92], "cutoff_at_height": [91, 92], "height_cutoff": [91, 92], "deep_copi": [91, 92, 162], "dev_str": [91, 92], "diff_kei": [91, 92], "detect_key_diff": [91, 92], "detect_value_diff": [91, 92], "detect_shape_diff": [91, 92], "treat": [91, 92, 155, 160, 164, 225, 226], "container0": [91, 92], "duplicate_array_keychain": [91, 92], "find_sub_contain": [91, 92], "sub_cont_to_find": [91, 92], "exsit": [91, 92], "find_sub_structur": [91, 92], "sub_struc_to_find": [91, 92], "flatten_key_chain": [91, 92, 162], "__": [91, 92, 145, 162], "above_height": [91, 92, 162], "below_depth": [91, 92, 162], "format_key_chain": [91, 92], "format_fn": [91, 92], "string": [91, 92, 140, 143, 144, 147, 148, 159, 162, 310, 311, 312, 341, 343, 363, 400, 401, 403, 404, 405, 406, 412, 420, 426, 430, 431, 434, 849, 877], "from_disk_as_hdf5": [91, 92, 162], "h5_obj_or_filepath": [91, 92], "slice_obj": [91, 92], "load": [91, 92, 176], "disk": [91, 92, 162], "h5py": [91, 92], "hdf5": [91, 92, 162], "h5": [91, 92], "from_disk_as_json": [91, 92, 162], "json_filepath": [91, 92], "from_disk_as_pickl": [91, 92, 162], "pickle_filepath": [91, 92], "pickl": [91, 92, 141, 162], "from_flat_list": [91, 92], "flat_list": [91, 92], "flat": [91, 92, 849, 978, 981, 1303, 1334, 1337], "h5_file_s": [91, 92], "handle_inplac": [91, 92], "prime": [91, 92], "overwritten": [91, 92, 139, 140], "has_kei": [91, 92], "query_kei": [91, 92], "somewher": [91, 92], "has_key_chain": [91, 92], "identical_array_shap": [91, 92], "identical_config": [91, 92], "identical_structur": [91, 92], "if_exist": [91, 92], "key_chains_contain": [91, 92], "sub_str": [91, 92], "list_stack": [91, 92, 162], "map_cont": [91, 92], "include_self": [91, 92], "possibi": [91, 92], "max_depth": [91, 92, 849, 929, 1388, 1400], "multi_map": [91, 92, 141], "map_nest": [91, 92], "leftmost": [91, 92, 1388, 1401], "multi_map_in_static_method": [91, 92, 141], "fn_name": [91, 92, 140, 154, 155], "num_arrai": [91, 92, 154, 155], "overwrite_at_key_chain": [91, 92], "target_dict": [91, 92], "return_dict": [91, 92], "prune_empti": [91, 92], "keep_non": [91, 92], "prune_key_chain": [91, 92], "key1": [91, 92, 163], "key2": [91, 92], "key3": [91, 92], "prune_key_from_key_chain": [91, 92], "prune_kei": [91, 92], "prune_keys_from_key_chain": [91, 92], "remove_key_length_limit": [91, 92], "remove_print_limit": [91, 92], "reshape_lik": [91, 92], "leading_shap": [91, 92], "return_cont": [91, 92], "restructur": [91, 92], "keep_orig": [91, 92], "restructure_key_chain": [91, 92], "keychain_map": [91, 92], "set_at_key_chain": [91, 92], "set_at_kei": [91, 92], "attribut": [91, 92, 141, 143, 146, 151, 152, 160, 161, 162, 163, 310, 346, 349, 351, 352, 354, 355, 357, 360, 401, 413, 414, 421, 849, 904, 905], "show_sub_contain": [91, 92], "sub_cont_or_keychain": [91, 92], "shuffle_h5_fil": [91, 92], "seed_valu": [91, 92, 1411, 1432], "dataset": [91, 92, 162, 174, 1558], "size_ordered_arrai": [91, 92], "keychain": [91, 92], "smallest": [91, 92, 310, 346, 349, 357, 360, 435, 511, 514, 1159, 1203, 1206], "largest": [91, 92, 175, 310, 346, 349, 357, 360, 1159, 1203, 1206, 1247, 1251], "slice_kei": [91, 92], "key_slic": [91, 92], "all_depth": [91, 92], "slice_via_kei": [91, 92], "sort_by_kei": [91, 92], "split_cont": [91, 92], "constitu": [91, 92, 164], "structural_diff": [91, 92], "to_dict": [91, 92], "to_disk_as_hdf5": [91, 92, 162], "starting_index": [91, 92], "max_batch_s": [91, 92], "to_disk_as_json": [91, 92, 162], "to_disk_as_pickl": [91, 92, 162], "to_flat_list": [91, 92], "to_iter": [91, 92, 141], "leaf_keys_onli": [91, 92], "to_iterator_kei": [91, 92], "to_iterator_valu": [91, 92], "to_json": [91, 92], "to_nested_list": [91, 92], "to_raw": [91, 92], "raw": [91, 92, 146], "trim_kei": [91, 92], "max_length": [91, 92], "trim": [91, 92], "try_kc": [91, 92], "tri": [91, 92], "concatten": [91, 92, 401, 425], "unstack_cont": [91, 92], "dim_siz": [91, 92, 1093, 1126], "update_config": [91, 92], "with_default_key_color": [91, 92], "with_entries_as_list": [91, 92], "with_ivy_backend": [91, 92], "ivy_backend": [91, 92], "with_key_length_limit": [91, 92, 162], "with_print_ind": [91, 92, 162], "with_print_limit": [91, 92, 162], "with_print_line_spac": [91, 92], "static_to_ivi": [95, 96], "static_to_n": [95, 96], "2324": [97, 98, 228, 258, 261], "234": [97, 98, 228, 258, 261, 1093, 1139, 1142], "123": [97, 98, 155, 228, 258, 261, 849, 896, 898], "static_arang": [97, 98], "static_asarrai": [97, 98], "static_empty_lik": [97, 98], "static_ey": [97, 98], "n_row": [97, 98, 228, 249, 250], "n_col": [97, 98, 228, 249, 250], "static_from_dlpack": [97, 98], "static_full_lik": [97, 98], "static_linspac": [97, 98], "endpoint": [97, 98, 149, 228, 263, 264], "static_logspac": [97, 98], "static_meshgrid": [97, 98], "static_native_arrai": [97, 98], "static_one_hot": [97, 98], "static_on": [97, 98], "static_ones_lik": [97, 98], "static_tril": [97, 98], "static_triu": [97, 98], "static_zero": [97, 98], "static_zeros_lik": [97, 98], "718": [99, 100, 103, 104, 310, 313, 316, 435, 641, 644], "618": [99, 100, 103, 104, 310, 313, 316, 435, 641, 644], "broadcats": [99, 100], "1800": [99, 100, 310, 357, 360], "32768": [99, 100], "32767": [99, 100], "2147483648": [99, 100, 310, 357, 360], "2147483647": [99, 100, 310, 357, 360], "static_astyp": [99, 100], "static_broadcast_arrai": [99, 100], "And": [99, 100, 155], "static_broadcast_to": [99, 100], "static_can_cast": [99, 100], "from_": [99, 100, 310, 328, 331], "static_default_float_dtyp": [99, 100], "float_dtyp": [99, 100, 310, 336, 337, 392], "static_dtyp": [99, 100], "static_finfo": [99, 100], "static_function_supported_dtyp": [99, 100], "static_function_unsupported_dtyp": [99, 100], "static_iinfo": [99, 100], "static_is_bool_dtyp": [99, 100], "dtype_in": [99, 100, 310, 311, 312, 345, 363, 364, 367, 369, 372, 374, 377, 379, 382, 400], "static_is_float_dtyp": [99, 100], "roughli": [99, 100], "static_is_int_dtyp": [99, 100], "static_is_uint_dtyp": [99, 100], "static_result_typ": [99, 100], "static_dev": [101, 102], "static_to_devic": [101, 102], "__dlpack__": [101, 102, 228, 252, 255, 401, 426, 430], "caveat": [101, 102, 401, 426, 430], "portabl": [101, 102, 401, 426, 430, 1558], "524": [103, 104, 435, 456, 459], "644": [103, 104, 163, 435, 456, 459], "305": [103, 104, 113, 114, 435, 456, 459], "915": [103, 104, 435, 471, 474], "29": [103, 104, 107, 108, 109, 110, 123, 124, 435, 471, 474, 849, 886, 889, 1042, 1062, 1065], "983": [103, 104, 435, 471, 474], "75": [103, 104, 107, 108, 113, 114, 123, 124, 435, 461, 464, 471, 474, 531, 534, 606, 609, 849, 937, 940, 1159, 1193, 1196, 1222, 1225, 1388, 1396, 1411, 1427, 1430], "978": [103, 104, 189, 210, 213, 435, 471, 474], "696": [103, 104, 123, 124, 435, 471, 474], "993": [103, 104, 435, 471, 474], "203": [103, 104, 121, 122, 1406, 1407, 1410], "34": [103, 104, 107, 108, 123, 124, 310, 357, 360, 435, 506, 509, 626, 629, 721, 724, 849, 865, 886, 889, 1411, 1427, 1430], "52": [103, 104, 107, 108, 109, 110, 123, 124, 435, 471, 474, 531, 534, 849, 886, 889, 942, 945, 1042, 1043, 1046, 1093, 1139, 1142, 1159, 1222, 1225, 1464, 1465, 1469, 1501, 1512, 1515], "351": [103, 104, 435, 526, 529], "50": [103, 104, 107, 108, 161, 435, 526, 529, 686, 689, 721, 724, 849, 911, 914, 937, 940, 942, 945, 983, 986, 998, 1001, 1159, 1193, 1196, 1222, 1225, 1388, 1390, 1438, 1454, 1457, 1501, 1512, 1515], "00613": [103, 104], "0154": [103, 104], "0262": [103, 104, 435, 526, 529, 686, 689], "873": [103, 104, 435, 526, 529, 686, 689], "333": [103, 104, 435, 531, 534, 849, 871, 874, 1093, 1127, 1130], "thefunct": [103, 104], "649": [103, 104], "220": [103, 104], "959": [103, 104, 435, 711, 714], "865": [103, 104], "metho": [103, 104], "999999999999": [103, 104, 435, 576, 579], "7j": [103, 104, 435, 591, 594], "3j": [103, 104, 435, 591, 594], "0j": [103, 104, 435, 591, 594], "898": [103, 104, 435, 611, 614], "0414": [103, 104, 435, 611, 614], "956": [103, 104], "65": [103, 104, 109, 110, 123, 124, 435, 501, 504, 849, 937, 940, 1042, 1043, 1046, 1159, 1222, 1225, 1501, 1512, 1515], "2860": [103, 104], "413": [103, 104], "recirpoc": [103, 104], "300": [103, 104, 107, 108, 155, 435, 701, 704, 849, 911, 914, 983, 986, 1159, 1193, 1196], "527": [103, 104, 435, 701, 704], "301": [103, 104, 435, 701, 704], "757": [103, 104, 435, 711, 714], "279": [103, 104, 435, 711, 714, 849, 866, 869], "835": [103, 104], "347": [103, 104], "721": [103, 104], "static_ab": [103, 104], "static_aco": [103, 104], "static_acosh": [103, 104], "static_add": [103, 104, 141, 145, 146], "static_asin": [103, 104], "412": [103, 104, 113, 114, 435, 456, 459], "201": [103, 104, 435, 456, 459], "static_asinh": [103, 104], "static_atan": [103, 104], "static_atan2": [103, 104], "static_atanh": [103, 104], "static_bitwise_and": [103, 104], "static_bitwise_invert": [103, 104], "static_bitwise_left_shift": [103, 104], "static_bitwise_or": [103, 104], "static_bitwise_right_shift": [103, 104], "static_bitwise_xor": [103, 104], "static_ceil": [103, 104], "static_co": [103, 104], "static_cosh": [103, 104], "static_deg2rad": [103, 104], "static_divid": [103, 104], "static_equ": [103, 104], "static_erf": [103, 104], "static_exp": [103, 104], "static_expm1": [103, 104, 435, 551, 554], "areal": [103, 104], "static_floor": [103, 104], "static_floor_divid": [103, 104], "static_great": [103, 104], "static_greater_equ": [103, 104], "static_isfinit": [103, 104], "static_isinf": [103, 104, 435, 581, 584], "static_isnan": [103, 104, 435, 586, 589], "static_isr": [103, 104], "23j": [103, 104], "9j": [103, 104, 435, 591, 594], "static_less": [103, 104], "static_less_equ": [103, 104], "static_log": [103, 104], "static_log10": [103, 104], "static_log1p": [103, 104, 435, 616, 619], "static_log2": [103, 104], "static_logaddexp": [103, 104], "static_logical_and": [103, 104], "static_logical_not": [103, 104], "static_logical_or": [103, 104, 435, 641, 644], "static_logical_xor": [103, 104], "static_maximum": [103, 104], "static_minimum": [103, 104], "static_multipli": [103, 104], "static_neg": [103, 104], "static_not_equ": [103, 104], "static_posit": [103, 104], "static_pow": [103, 104], "static_rad2deg": [103, 104], "5160": [103, 104], "10300": [103, 104, 435, 686, 689], "15500": [103, 104], "20600": [103, 104], "static_reciproc": [103, 104], "static_remaind": [103, 104], "static_round": [103, 104], "thevfunct": [103, 104], "static_sign": [103, 104], "static_sin": [103, 104], "static_sinh": [103, 104], "static_sqrt": [103, 104], "static_squar": [103, 104], "static_subtract": [103, 104], "static_tan": [103, 104, 141, 145], "38": [103, 104, 123, 124, 145, 310, 346, 349, 435, 736, 740], "static_tanh": [103, 104], "995": [103, 104, 435, 741, 745], "9999": [103, 104], "static_trunc": [103, 104], "static_trunc_divid": [103, 104], "hann_window": [105, 106], "hann": [105, 106], "7500": [105, 106], "3455": [105, 106], "9045": [105, 106], "kaiser_window": [105, 106], "lenght": [105, 106], "spectral": [105, 106], "analysi": [105, 106], "kaiser": [105, 106], "static_kaiser_window": [105, 106], "2049": [105, 106], "8712": [105, 106], "0367": [105, 106], "7753": [105, 106], "1080": [105, 106], "1550": [105, 106], "130": [105, 106], "0707": [105, 106], "0579": [105, 106], "static_flatten": [105, 106], "static_flipud": [105, 106], "static_fmax": [105, 106], "static_fmod": [105, 106], "static_hann_window": [105, 106], "window_length": [105, 106], "static_hann": [105, 106], "static_heavisid": [105, 106], "static_lcm": [105, 106], "static_max_pool2d": [105, 106], "max_pool2dd": [105, 106], "static_median": [105, 106], "static_moveaxi": [105, 106], "static_pad": [105, 106], "static_sinc": [105, 106], "636": [105, 106], "090": [105, 106], "070": [105, 106], "057": [105, 106], "static_all_equ": [107, 108], "833": [107, 108], "200": [107, 108, 162, 435, 501, 504, 849, 911, 914, 983, 986], "400": [107, 108, 849, 911, 914, 983, 986, 1159, 1193, 1196], "500": [107, 108, 849, 911, 914], "600": [107, 108], "700": [107, 108], "static_assert_supports_inplac": [107, 108], "static_clip_matrix_norm": [107, 108], "849": [107, 108, 849, 866, 869, 871, 874], "static_clip_vector_norm": [107, 108], "static_einops_rearrang": [107, 108], "static_einops_reduc": [107, 108], "93": [107, 108, 123, 124, 401, 412, 435, 721, 724, 849, 886, 889], "66": [107, 108, 109, 110, 435, 506, 509, 849, 886, 889, 1042, 1053, 1056, 1159, 1222, 1225, 1501, 1512, 1515], "static_einops_repeat": [107, 108], "static_fourier_encod": [107, 108], "static_gath": [107, 108], "static_gather_nd": [107, 108], "static_get_num_dim": [107, 108], "static_has_nan": [107, 108], "leafwis": [107, 108], "static_inplace_decr": [107, 108], "static_inplace_incr": [107, 108], "static_inplace_upd": [107, 108], "static_is_arrai": [107, 108], "static_is_ivy_arrai": [107, 108], "static_is_ivy_contain": [107, 108], "static_is_native_arrai": [107, 108], "static_scatter_flat": [107, 108], "ref": [107, 108, 115, 116, 146, 435, 596, 599, 671, 674, 696, 699, 731, 735, 1303, 1359, 1362], "static_scatter_nd": [107, 108], "static_stable_divid": [107, 108], "22222222": [107, 108], "11111111": [107, 108], "857": [107, 108, 849, 998, 1001, 1464, 1465, 1469], "444": [107, 108], "static_stable_pow": [107, 108], "static_supports_inplace_upd": [107, 108], "static_to_list": [107, 108], "static_to_numpi": [107, 108], "static_to_scalar": [107, 108], "static_value_is_nan": [107, 108], "452": [107, 108], "425": [107, 108], "87": [109, 110, 435, 501, 504, 616, 619, 1042, 1043, 1046], "976": [109, 110, 435, 741, 745, 1042, 1043, 1046], "49e": [109, 110, 1042, 1043, 1046], "74e": [109, 110, 1042, 1043, 1046], "95e": [109, 110, 1042, 1043, 1046], "024": [109, 110, 1042, 1043, 1046], "096": [109, 110, 435, 526, 529, 1042, 1043, 1046], "216": [109, 110, 115, 116, 1042, 1043, 1046], "384": [109, 110, 1042, 1043, 1046], "626": [109, 110, 1042, 1043, 1046], "en": [109, 110, 1042, 1043, 1046, 1047, 1050], "wikipedia": [109, 110, 1042, 1043, 1046, 1047, 1050], "wiki": [109, 110, 1042, 1043, 1046, 1047, 1050], "stochastic_gradient_desc": [109, 110, 1042, 1043, 1046, 1047, 1050], "w_new": [109, 110, 1042, 1053, 1056], "88": [109, 110, 123, 124, 189, 195, 198, 435, 506, 509, 1042, 1053, 1056, 1159, 1222, 1225, 1252, 1256, 1411, 1427, 1430, 1501, 1512, 1515], "708": [109, 110, 1042, 1062, 1065], "445": [109, 110, 1042, 1062, 1065], "6e": [109, 110, 1042, 1062, 1065], "00036": [109, 110, 1042, 1062, 1065], "00016": [109, 110, 1042, 1062, 1065], "00049": [109, 110, 1042, 1062, 1065], "layerwis": [109, 110, 1042, 1066, 1069], "static_is_vari": [109, 110], "static_stop_gradi": [109, 110], "static_vari": [109, 110], "static_variable_data": [109, 110], "ey": [113, 114, 157, 164, 228, 1093, 1105, 1108, 1127, 1130], "conv2d_transpos": [113, 114, 1093], "inp": [113, 114, 1093, 1127, 1130], "278": [113, 114, 1093, 1139, 1142], "105": [113, 114, 1093, 1139, 1142, 1159, 1222, 1225, 1287, 1288, 1291], "352": [113, 114, 1093, 1139, 1142], "195": [113, 114], "static_conv1d": [113, 114], "static_conv1d_transpos": [113, 114], "static_conv2d": [113, 114], "static_conv2d_transpos": [113, 114], "static_conv3d": [113, 114], "static_conv3d_transpos": [113, 114], "static_depthwise_conv2d": [113, 114], "static_dropout": [113, 114], "static_linear": [113, 114], "static_lstm_upd": [113, 114], "static_multi_head_attent": [113, 114], "static_scaled_dot_product_attent": [113, 114], "73": [115, 116, 155, 435, 721, 724, 1159, 1160, 1163, 1411, 1422, 1425], "577": [115, 116, 1159, 1160, 1163], "707": [115, 116, 1159, 1160, 1163], "matrix_pow": [115, 116, 1159], "pseudo": [115, 116, 1159, 1227, 1230], "static_choleski": [115, 116], "static_rol": [115, 116, 119, 120, 141, 145], "static_cross": [115, 116], "static_det": [115, 116], "static_diagon": [115, 116], "static_inn": [115, 116], "static_inv": [115, 116, 1159, 1193, 1196], "static_matmul": [115, 116], "matul": [115, 116], "static_matrix_norm": [115, 116], "deimens": [115, 116], "static_matrix_pow": [115, 116], "static_matrix_rank": [115, 116], "static_matrix_transpos": [115, 116], "static_out": [115, 116], "static_pinv": [115, 116], "static_qr": [115, 116], "static_slogdet": [115, 116], "static_solv": [115, 116], "static_svd": [115, 116], "static_svdv": [115, 116], "static_tensordot": [115, 116], "static_trac": [115, 116], "static_vand": [115, 116], "343": [115, 116, 435, 701, 704], "512": [115, 116], "729": [115, 116, 163], "static_vecdot": [115, 116], "static_vector_norm": [115, 116], "mathemat": [115, 116, 153, 157, 227, 435, 451, 454, 471, 474, 551, 554, 616, 619, 661, 664, 1159, 1203, 1206, 1277, 1281], "l1": [115, 116, 162, 1159, 1277, 1281], "manhattan": [115, 116, 1159, 1277, 1281], "l2": [115, 116, 1159, 1277, 1281], "euclidean": [115, 116, 1159, 1277, 1281], "static_vector_to_skew_symmetric_matrix": [115, 116], "511": [117, 118, 1287, 1288, 1291], "5108256": [117, 118], "609438": [117, 118], "static_binary_cross_entropi": [117, 118], "static_cross_entropi": [117, 118], "20397282": [117, 118], "83258148": [117, 118], "60943794": [117, 118], "static_sparse_cross_entropi": [117, 118], "static_stack": [119, 120], "static_clip": [119, 120], "static_concat": [119, 120], "static_constant_pad": [119, 120], "static_expand_dim": [119, 120], "container_axi": [119, 120, 1303, 1319, 1322], "static_flip": [119, 120], "static_permute_dim": [119, 120], "static_repeat": [119, 120], "static_reshap": [119, 120], "positivclip": [119, 120], "static_split": [119, 120], "static_squeez": [119, 120], "static_swapax": [119, 120], "static_til": [119, 120], "static_unstack": [119, 120], "static_zero_pad": [119, 120], "classivi": [119, 120, 127, 128, 1303, 1349, 1352, 1464, 1470, 1474], "342": [121, 122, 1406, 1407, 1410], "0427": [121, 122, 1406, 1407, 1410], "299": [121, 122, 1406, 1407, 1410], "241": [121, 122], "102": [123, 124], "431": [123, 124], "68": [123, 124, 189, 200, 203, 228, 257, 435, 461, 464, 471, 474, 1406, 1407, 1410], "83": [123, 124, 435, 721, 724, 1093, 1139, 1142], "274": [123, 124], "91": [123, 124, 435, 506, 509, 1093, 1139, 1142, 1159, 1222, 1225, 1411, 1422, 1425, 1501, 1512, 1515], "static_multinomi": [123, 124], "static_randint": [123, 124], "static_random_norm": [123, 124], "651": [123, 124], "static_random_uniform": [123, 124], "481": [123, 124], "0999": [123, 124], "static_shuffl": [123, 124], "static_argmax": [125, 126], "static_argmin": [125, 126], "static_argwher": [125, 126], "static_nonzero": [125, 126], "static_wher": [125, 126], "static_unique_al": [127, 128], "static_unique_count": [127, 128], "static_unique_invers": [127, 128], "static_unique_valu": [127, 128], "static_argsort": [129, 130], "static_searchsort": [129, 130], "static_sort": [129, 130], "static_cumprod": [131, 132], "static_cumsum": [131, 132], "static_sum": [131, 132], "static_var": [131, 132], "12666667": [131, 132, 1501, 1541, 1545], "11555555": [131, 132, 1501, 1541, 1545], "contian": [131, 132], "6666667": [131, 132, 1501, 1541, 1545], "static_al": [133, 134], "static_ani": [133, 134], "add_ivy_container_instance_method": 135, "containerexampl": [135, 136], "who": [137, 158, 176], "target": [137, 156, 158, 162, 163, 164, 401, 405, 1558], "hood": [137, 141, 145, 150, 153, 155, 157, 158, 159, 162, 164], "weed": [137, 158], "tour": 137, "primari": [137, 140, 143, 152, 153, 155, 157, 176, 1557], "superset": [137, 176], "goe": [137, 157], "dynam": [137, 143, 144, 152, 153, 159, 225, 226], "runtim": [137, 155, 157, 401], "borrow": 137, "conjunct": 138, "establish": 138, "2020": 138, "group": [138, 141, 150, 153, 154], "intend": [138, 149, 1501, 1536, 1540], "popular": [138, 1558, 1564], "sens": [138, 145, 153, 161], "unconnect": 138, "decis": [138, 141, 143, 153, 157, 159, 161], "initialis": [138, 155, 401], "checkout": [138, 155], "everytim": [138, 143], "init": [138, 164], "thoroughli": 138, "ci": [138, 143, 148, 155, 176], "insert_chosen_backend": 138, "test_linalg": 138, "test_set_funct": 138, "test_signatur": 138, "excess": [138, 140, 145], "explicitli": [138, 139, 140, 141, 143, 146, 147, 150, 151, 152, 155, 159, 176, 1159, 1181, 1184, 1185, 1187], "array_modul": 138, "vv": 138, "test_manipulation_funct": 138, "test_concat": [138, 155], "typic": [138, 150, 1485, 1491, 1494], "nb": 138, "varieti": [138, 142, 143, 144, 155], "known": [138, 143, 153, 155], "test_asarray_arrai": 138, "test_floor_divid": 138, "health": 138, "test_iop": 138, "__imod__": 138, "x1_i": [138, 435, 451, 454, 471, 474, 481, 484, 491, 494, 496, 499, 501, 504, 506, 509, 531, 534, 536, 539, 561, 564, 566, 569, 571, 574, 596, 599, 601, 604, 626, 629, 631, 634, 641, 644, 646, 649, 661, 664, 671, 674, 681, 684, 696, 699, 731, 735], "isequ": 138, "test_matrix_norm": 138, "alter": 138, "tweak": 138, "array_api_methods_to_test": 138, "identifi": [138, 142, 155, 157], "202": [138, 435, 521, 524], "test_trac": 138, "latter": [138, 140, 143, 146, 153], "hand": [138, 143, 150, 155, 176], "scheme": [138, 163], "edg": [138, 155, 1303, 1304, 1307, 1314, 1317, 1379, 1383, 1558], "test_special_cas": 138, "__ipow__": 138, "is_integ": 138, "unskip": 138, "temporarili": [138, 156], "straightforward": [138, 162], "tf": [139, 143, 144, 149, 152, 153, 155, 156, 157, 159, 164, 176, 1557, 1558], "wrapper": [139, 141, 143, 151, 152, 161, 1557], "_data": [139, 153, 161], "meta": [139, 156, 1385, 1386, 1387], "organiz": [139, 141, 153], "inherit": [139, 141, 147, 161, 176, 1557], "bear": [139, 141, 143, 153], "necessarili": [139, 141], "although": [139, 141, 153], "underpin": [139, 141, 159], "programmat": [139, 141], "backup": [139, 141], "accident": [139, 141, 153], "readabl": [139, 141, 147, 149, 156, 161, 162], "absent": [139, 141], "perk": [139, 141], "auto": [139, 141, 162], "__mul__": [139, 141, 145, 149, 157, 161], "__truediv__": [139, 141, 145], "throw": [139, 143, 147, 161], "imposs": 139, "inputs_to_native_arrai": [139, 151, 177], "outputs_to_ivy_arrai": [139, 143, 144, 149, 151, 177], "firstli": [139, 143, 145, 146, 147, 150, 151, 152, 157, 162], "anywai": [139, 151, 153], "secondli": [139, 143], "permit": [139, 149, 153, 155, 157], "dictat": [139, 145, 149, 152], "implicit_backend": [140, 159], "ivy_original_dict": [140, 159], "unmodifi": [140, 143], "opt": [140, 143, 152, 155, 156, 157], "fallback": 140, "forward": [140, 146, 155, 156, 157, 164, 175, 176], "layout": [140, 153, 157], "requires_grad": [140, 154], "memory_format": 140, "preserve_format": 140, "weren": 140, "break": [140, 143, 148, 149, 156, 176, 1558], "Not": [140, 154, 162, 163, 176, 227], "vast": [140, 143], "minor": [140, 157, 159, 176], "fn_name_v_1p12_and_abov": 140, "similarli": [140, 143, 153, 157, 161, 228, 269, 272], "fn_name_v_1p01_to_1p1": 140, "inclus": [140, 152, 153, 157, 228, 230, 231, 1411, 1417, 1420], "vari": [141, 145, 153, 155, 161, 1464, 1465, 1469, 1470, 1474, 1475, 1479, 1480, 1484], "five": [141, 162], "recap": [141, 145, 163], "arbitrarili": [141, 151, 162], "__repr__": 141, "control": [141, 143, 152, 153, 157, 161, 162, 175, 1557], "__getattr__": 141, "underli": [141, 157, 435, 481, 484, 496, 499, 506, 509, 646, 649], "__setattr__": 141, "__contains__": 141, "__getstate__": 141, "__setstate__": 141, "unpickl": 141, "lefthand": 141, "righthand": 141, "operand": [141, 146, 153, 435, 441, 444, 446, 449, 451, 454, 456, 459, 461, 464, 466, 469, 471, 474, 506, 509, 511, 514, 516, 519, 521, 524, 546, 549, 551, 554, 556, 559, 606, 609, 611, 614, 616, 619, 621, 624, 626, 629, 661, 664, 681, 684, 696, 699, 701, 704, 711, 714, 716, 719, 721, 724, 736, 740, 741, 745, 746, 750, 1501, 1512, 1515, 1516, 1519, 1524, 1527, 1536, 1540], "decor": [141, 143, 144, 150, 151, 152, 153, 154, 155, 849, 865], "handle_nest": [141, 150, 151, 159, 177], "addition": [141, 152, 153], "counterpart": [141, 151], "behavior": [141, 143, 153, 155, 157, 159, 176, 435, 681, 684, 696, 699, 1464, 1465, 1469, 1470, 1474, 1475, 1479, 1480, 1484], "presenc": [141, 152], "absenc": [141, 149], "implicitli": [141, 159], "themselv": [141, 143, 144, 146, 150, 153, 163, 1388, 1389], "log_pr": [141, 150, 152], "intuit": [141, 162, 163], "chronolog": 141, "concurr": [141, 150], "had": [141, 152], "consum": [141, 149, 154, 155], "sequenti": [141, 163], "But": [141, 146, 151, 152, 164], "flow": [141, 175], "compil": [141, 153, 156, 157, 158, 160, 176, 1557, 1558], "implic": 141, "whatsoev": [141, 150, 1557], "implicit": [141, 146, 153, 155, 159], "eager": [141, 176], "children": 141, "shallowest": 141, "deepest": 141, "event": [142, 155], "ex": 142, "reopen": 142, "review_request": 142, "yml": 142, "dispatch": [142, 176], "pair": [142, 435, 471, 474, 1093, 1154, 1157, 1159, 1165, 1168], "test_nn": 142, "test_stat": 142, "yellow": 142, "dot": [142, 1093, 1149, 1152, 1154, 1157, 1159, 1272, 1276], "queu": 142, "redirect": 142, "book": 142, "procedur": [142, 145], "decoupl": [142, 163], "ran": 142, "badg": 142, "clickabl": 142, "uint8": [143, 155, 310, 328, 331, 340, 351, 352, 379, 382, 386, 389, 394, 399], "uint16": [143, 155, 159, 310, 334, 340, 354, 355, 357, 360, 379, 382, 1501, 1502, 1505, 1507, 1510, 1528, 1531, 1536, 1540], "uint32": [143, 155, 159, 310, 340, 354, 355, 357, 360, 362, 399, 1501, 1502, 1505, 1507, 1510, 1528, 1531, 1536, 1540], "uint64": [143, 155, 159, 310, 340, 354, 355, 362, 363, 386, 389, 391, 394, 1501, 1502, 1505, 1507, 1510, 1528, 1531, 1536, 1540], "bfloat16": [143, 153, 155, 310, 351, 352], "all_dtyp": 143, "all_numeric_dtyp": 143, "all_int_dtyp": 143, "all_float_dtyp": 143, "replic": [143, 145, 153, 157], "four": [143, 145, 149, 150, 155, 157, 162], "thirdli": 143, "native_float32": 143, "importantli": [143, 161, 164, 175], "conveni": [143, 144, 149, 154, 160, 162, 163, 1557], "set_default_dtyp": [143, 150, 310, 396], "default_dtyp": [143, 150, 310], "arguabl": [143, 144, 153], "promote_typ": [143, 310], "type_promote_arrai": [143, 310], "promote_types_of_input": [143, 310], "jaxarrai": [143, 144, 149, 152, 156, 159], "jnp": [143, 144, 149, 152, 154, 156, 159, 164, 1558], "_handle_0_dim_output": [143, 152], "experiment": [143, 156, 159], "subtli": [143, 152], "On": [143, 153, 155, 160, 164], "promote_types_frontend_nam": 143, "promote_types_of_frontend_name_input": 143, "frontend_nam": 143, "compound": 143, "infer_dtyp": [143, 144, 149, 151, 177], "default_int_dtyp": [143, 310], "default_float_dtyp": [143, 310], "settabl": [143, 144], "set_default_int_dtyp": [143, 310, 339, 362], "set_default_float_dtyp": [143, 310, 362], "irrelev": [143, 145], "handle_out_argu": [143, 144, 149, 151, 152, 159, 177], "infer_devic": [143, 144, 149, 151, 177], "deleg": 143, "shape_to_tupl": 143, "supported_dtyp": [143, 153], "unsupported_dtyp": 143, "unment": 143, "function_supported_dtyp": [143, 310], "function_unsupported_dtyp": [143, 310], "invalid_dtyp": [143, 310], "former": [143, 146, 153], "uint": [143, 154, 310, 339, 340, 379, 382, 394, 399], "lack": [143, 152], "precis": [143, 153, 157, 310, 346, 349, 435, 661, 664, 721, 724], "rang": [143, 147, 155, 159, 162, 163, 164, 228, 230, 231, 263, 264, 266, 267, 849, 1041, 1042, 1080, 1464, 1465, 1469, 1501, 1502, 1505, 1507, 1510, 1528, 1531, 1536, 1540, 1558], "patch": 143, "achiev": [143, 148, 151, 155, 162, 164, 1557], "subtl": [143, 156], "upcast": 143, "unsign": [143, 154, 159, 1501, 1502, 1505, 1507, 1510, 1528, 1531, 1536, 1540], "offici": [143, 159], "inconsist": [143, 147], "unexpect": [143, 310, 385], "84530": 143, "unwarr": 143, "risk": 143, "needlessli": 143, "bloat": 143, "with_unsupported_dtyp": [143, 177], "undergo": [143, 176], "unsupported_devic": 143, "supported_devic": 143, "slight": [143, 163], "downsid": 143, "coverag": [143, 155], "inflat": 143, "idx": [144, 161, 849, 855], "tpu": [144, 401, 423, 432], "get_all_ivy_arrays_on_dev": [144, 401], "aliv": [144, 401, 415, 419, 421, 849, 916, 976, 977], "num_gpu": [144, 155, 401], "total_mem_on_dev": [144, 401], "dev_util": [144, 401], "num_cpu_cor": [144, 401], "default_devic": [144, 147, 401, 419, 422, 423, 433], "outsid": [144, 148, 150, 161, 1303, 1304, 1307, 1359, 1362], "dual": 144, "categor": [144, 150, 153], "thrown": [144, 147, 176, 849, 947, 950], "far": [144, 145, 160, 1388, 1389, 1399], "set_default_devic": [144, 401, 433], "eight": [145, 158], "func_nam": [145, 146, 150, 153], "static_func_nam": 145, "op_nam": 145, "__r": 145, "combinatori": 145, "variat": [145, 155], "grid": [145, 155, 175, 228, 269, 272], "unus": [145, 148, 152, 225, 226], "okai": [145, 157, 159], "showcas": [145, 175], "demonstr": [145, 161], "meant": 145, "imaginari": 145, "spec": [145, 146], "my_func": [145, 156], "some_flag": 145, "another_flag": 145, "jointli": 145, "x0": [145, 849, 857, 859], "5574077": 145, "1850398": 145, "5463025": 145, "8422884": 145, "91601413": 145, "9647598": 145, "3738229": 145, "1597457": 145, "0963247": 145, "9955841": 145, "3278579": 145, "multi": [145, 158, 176, 1093, 1149, 1152, 1159, 1165, 1168, 1558, 1564], "pars": [145, 176], "satisfi": [145, 155], "asid": [145, 175], "increasingli": 145, "14254655": 145, "1578213": 145, "380515": 145, "trivial": 145, "exlud": 145, "failing_fn_nam": 145, "onlin": [145, 146], "minutest": 145, "suffici": 145, "segment": 145, "fault": 145, "contrast": [146, 149, 153], "account": [146, 153], "instanti": 146, "templat": [146, 155, 1558], "array_api": 146, "preview": 146, "render": 146, "incorrectli": 146, "domain": [146, 435, 441, 444, 446, 449, 456, 459, 461, 464, 466, 469, 471, 474, 516, 519, 521, 524, 546, 549, 551, 554, 606, 609, 611, 614, 621, 624, 711, 714, 716, 719, 721, 724, 736, 740, 741, 745], "codomain": [146, 435, 441, 444, 446, 449, 456, 459, 461, 464, 466, 469, 471, 474, 516, 519, 521, 524, 546, 549, 551, 554, 606, 609, 611, 614, 621, 624, 711, 714, 716, 719, 721, 724, 736, 740, 741, 745], "needless": [146, 154], "info": [146, 155, 1558], "subset": [146, 149, 153, 155, 159], "renam": 146, "judgment": 146, "beyond": [146, 153, 1303, 1344, 1347], "pure": [146, 149, 153, 157, 161, 164, 176], "operator_nam": 146, "succinct": 146, "contstructor": 146, "_forward": [146, 159, 162, 163, 1558], "docst": 146, "ivyexcept": [147, 153, 1042, 1074, 1092], "super": [147, 159, 162, 163, 164], "ivybackendexcept": 147, "_default": 147, "current_backend_str": [147, 159, 161, 849], "_delimit": 147, "indexerror": [147, 1042, 1080, 1303, 1319, 1322], "ivyerror": 147, "repetit": [147, 1303, 1334, 1337, 1369, 1373], "caught": 147, "functool": [147, 153, 161], "new_fn": [147, 153], "__name__": [147, 849, 1030], "comparison": 147, "error_stack": 147, "axiserror": 147, "bound": [147, 155, 159], "got": [147, 1558], "assertionerror": [147, 155], "elif": [147, 152, 153], "polici": [147, 155, 175], "moreov": 147, "cleaner": [147, 162], "lesser": 147, "set_split_factor": [147, 401], "split_factor": [147, 401, 423], "met": 147, "flake8": 148, "undefin": 148, "statement": [148, 152, 155, 157, 176], "handler": [148, 158, 160, 164, 1557, 1558], "annot": [148, 149], "star": 148, "byte": 148, "notimpl": 148, "notimplementederror": 148, "unsuccess": 148, "reformat": 148, "exceed": 148, "black": 148, "disobei": 148, "taken": [148, 156, 164, 1159, 1176, 1179], "successfulli": 148, "inde": [148, 149, 157, 176], "adress": 149, "revisit": 149, "dedic": [149, 161, 163, 1042, 1087, 1091], "to_native_arrays_and_back": [149, 151, 159, 177], "extern": [149, 153, 155, 156], "usabl": [149, 156], "sole": [149, 156], "nearli": [149, 151], "strictli": [149, 152], "linspac": [149, 157, 159, 228, 230, 231, 1558], "rational": 149, "__div__": [149, 157], "dicat": 149, "futher": 149, "pep": 149, "484": 149, "brittl": 149, "freeli": 149, "flexibl": [149, 156], "technic": [149, 152, 176], "original_typ": 149, "cumbersom": 149, "omit": [149, 152, 153, 435, 701, 704, 1464, 1465, 1469, 1470, 1474, 1475, 1479, 1480, 1484], "venn": 150, "diagram": 150, "light": [150, 153, 176, 1557], "array_arg": 150, "cache_fn": [150, 849], "cach": [150, 155, 401, 405, 849, 865], "deal": [150, 154, 176], "modif": 150, "briefli": [150, 155, 162], "get_all_arrays_on_dev": 150, "nested_map": [150, 1388], "index_nest": [150, 1388], "inputs_to_ivy_arrai": [151, 177], "heavili": [151, 153, 176], "facilit": 151, "integer_array_to_float": 151, "handle_cmd_line_arg": [151, 154, 155], "as_vari": [151, 154, 155], "with_out": [151, 154, 155], "instance_method": [151, 155], "test_gradi": 151, "topic": [151, 161], "suffic": [151, 155], "program": 152, "ration": [152, 157], "speak": 152, "x_nativ": 152, "val_n": 152, "unspecifi": [152, 435, 681, 684, 696, 699, 1159, 1181, 1184, 1303, 1359, 1362], "predominantli": [152, 156, 175], "support_native_out": 152, "math": [152, 153, 155, 164, 1558], "mx": 152, "nd": 152, "_wrap_fn": 152, "dim0": 152, "dim1": 152, "maxim": [152, 157, 159], "third": [152, 176, 1159, 1247, 1251, 1464, 1465, 1469], "leverag": 152, "capabl": [152, 157], "input_arrai": 152, "plai": [153, 155, 164], "tf_frontend": 153, "lax": [153, 154, 157, 164, 176], "neither": [153, 157, 435, 451, 454, 661, 664, 1042, 1074, 1092], "fn_tree": [153, 154], "wrong": [153, 157], "carefulli": 153, "acceler": [153, 1558], "algebra": 153, "xla": [153, 176, 1557], "decompos": 153, "dynamic": 153, "extent": 153, "mimic": 153, "arithmetic_oper": 153, "same_kind": 153, "subok": [153, 154, 157], "as_ivy_dtyp": [153, 310], "recov": 153, "obtain": 153, "unhandl": 153, "seek": 153, "subclass": [153, 157], "trigonometric_funct": 153, "from_zero_dim_arrays_to_float": [153, 177], "pointwise_op": 153, "affect": 153, "preferred_element_typ": 153, "conv_general_dil": [153, 1093], "finer": 153, "nor": [153, 435, 451, 454, 661, 664, 1042, 1074, 1092], "margin": 153, "fit": [153, 159, 1303, 1334, 1337], "meet": 153, "criteria": 153, "incorpor": [153, 162], "omiss": 153, "sensibl": 153, "deem": 153, "reserv": 153, "resum": 153, "possibli": [153, 155, 176, 849, 1014, 1018], "straight": [153, 155, 161, 1558], "ahead": 153, "heavi": [153, 154, 157], "logicaland": 153, "truth": [153, 155, 435, 536, 539, 566, 569, 571, 574, 596, 599, 601, 604, 671, 674], "restrict": 153, "np_frontend": 153, "radd": 153, "_init_data": 153, "isinst": [153, 155, 156, 163, 164, 849, 1014, 1018], "_process_str_data": 153, "2d": 153, "_shape": [153, 161], "_dtype": [153, 161], "govern": 153, "promote_types_of_": 153, "_input": 153, "promote_types_of_tensorflow_input": 153, "saniti": 153, "handle_numpy_cast": 153, "func_wrapp": [153, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187], "to_ivy_arrays_and_back": 153, "handle_numpy_casting_speci": 153, "equiv": 153, "safe": 153, "unsaf": 153, "array_type_test": 153, "watch": 153, "youtub": 153, "seri": [153, 155], "jump": 154, "knowledg": 154, "test_frontend_funct": 154, "lift": 154, "get_dtyp": [154, 155], "dtype_and_valu": [154, 155], "num_positional_arg": [154, 155], "get_shap": [154, 155], "np_frontend_help": 154, "nn": [154, 157, 164, 228, 269, 272, 1558], "test_jax": 154, "test_jax_lax_oper": 154, "dtype_and_x": [154, 155], "available_dtyp": [154, 155], "test_jax_lax_tan": 154, "input_dtyp": [154, 155], "as_variable_flag": [154, 155], "native_array_flag": [154, 155], "test_numpi": 154, "test_mathematical_funct": 154, "test_np_trigonometric_funct": 154, "test_numpy_tan": 154, "handle_where_and_array_bool": 154, "test_tensorflow": 154, "test_math": 154, "test_tensorflow_tan": 154, "test_torch": 154, "test_non_linear_activation_funct": 154, "st": [154, 155], "min_valu": [154, 155], "max_valu": [154, 155], "with_inplac": 154, "test_torch_leaky_relu": 154, "negative_slop": 154, "_fill_valu": 154, "allow_non": [154, 155], "min_num_dim": [154, 155], "max_num_dim": [154, 155], "min_dim_s": [154, 155], "max_dim_s": 154, "test_jax_lax_ful": 154, "test_from_shape_or_valu": 154, "test_numpy_ful": 154, "test_tf_funct": 154, "test_tensorflow_ful": 154, "discrep": 154, "test_creation_op": 154, "_requires_grad": 154, "test_torch_ful": 154, "accommod": 154, "test_frontend_instance_method": 154, "frontend_class": 154, "test_jax_devicearrai": 154, "shared_dtyp": 154, "test_jax_instance_add": 154, "test_frontend_array_instance_method": 154, "test_ndarrai": 154, "test_numpy_ndarray_add": 154, "test_frontend_method": 154, "input_dtypes_init": 154, "as_variable_flags_init": 154, "num_positional_args_init": 154, "native_array_flags_init": 154, "all_as_kwargs_np_init": 154, "input_dtypes_method": 154, "as_variable_flags_method": 154, "num_positional_args_method": 154, "native_array_flags_method": 154, "all_as_kwargs_np_method": 154, "class_nam": 154, "method_nam": 154, "test_tensor": 154, "test_tensorflow_instance_add": 154, "1e04": 154, "allow_inf": [154, 155], "1e06": 154, "allow_infin": 154, "test_torch_instance_add": 154, "somewhat": [154, 176], "value_test": 154, "dtype_x": 154, "test_jax_special_add": 154, "ret_gt": 154, "flatten_and_to_np": 154, "zip": [154, 159], "ret_from_gt": 154, "ground_truth_backend": 154, "_arrays_idx_n_dtyp": 154, "test_manipul": [154, 155], "surprisingli": 154, "cat": [154, 157, 159, 164], "closest_relevant_group": 154, "strive": [154, 155, 157, 176], "cycl": 155, "exhaust": 155, "fixtur": 155, "hit": [155, 159], "eleg": 155, "intellig": [155, 157], "unexplor": 155, "repeatedli": [155, 1388, 1397], "upload": 155, "artifact": 155, "parametr": 155, "impli": [155, 1464, 1465, 1469, 1470, 1474, 1475, 1479, 1480, 1484], "bespok": 155, "_array_or_typ": 155, "standalon": [155, 1557], "test_default_int_dtyp": 155, "clariti": [155, 157], "print_hypothesis_exampl": 155, "searchstrategi": 155, "custom_strategi": 155, "sampled_from": 155, "randomis": 155, "simplist": 155, "intricaci": 155, "one_of": 155, "datum": 155, "pipe": 155, "overload": 155, "shorthand": 155, "isclos": 155, "flatmap": 155, "suppos": 155, "scaler": 155, "array_or_scal": 155, "len_of_arrai": 155, "interact": [155, 1558], "bodi": 155, "reusabl": [155, 176], "snippet": 155, "container_flag": 155, "thankfulli": 155, "advis": 155, "seamlessli": 155, "encount": 155, "criterion": 155, "array_valu": 155, "valid_ax": 155, "craft": 155, "hoc": 155, "intersect": [155, 175], "44758124e": 155, "308": [155, 310, 346, 349], "11228": 155, "456": [155, 1464, 1465, 1469], "268": 155, "wherev": 155, "dtype_values_axi": 155, "9622": 155, "28136": 155, "6375": 155, "12720": 155, "21354": 155, "900e": 155, "00": [155, 435, 551, 554], "955e": 155, "exclude_min": 155, "large_abs_safety_factor": 155, "safety_factor_scal": 155, "57384": 155, "25687": 155, "248": 155, "array_dtyp": 155, "min_siz": 155, "max_siz": 155, "array_bool": 155, "na": 155, "test_devic": 155, "array_shap": 155, "common_shap": 155, "test_lay": 155, "size_bound": 155, "reshape_shap": 155, "stand": 155, "fashion": 155, "some_sequ": 155, "allow_nan": 155, "allow_subnorm": 155, "get_bound": 155, "arrays_valu": 155, "36418": 155, "213": 155, "21716926": 155, "none_or_list_of_float": 155, "get_prob": 155, "get_mean_std": 155, "103515625e": 155, "099609375": 155, "probabilist": 155, "get_axi": 155, "number_positional_argu": 155, "unreproduc": 155, "test_valu": 155, "enough": [155, 161, 162, 163], "report": 155, "valid_float_dtyp": 155, "test_demo": 155, "falsifi": 155, "failing_test": 155, "traceback": 155, "file_nam": [155, 156], "shrink": 155, "prescrib": 155, "closest": [155, 157, 310, 334, 435, 511, 514, 556, 559, 561, 564, 701, 704, 746, 750], "scratch": 155, "databas": 155, "therebi": 155, "test_gelu": 155, "test_fil": 155, "brief": 155, "phase": [155, 176], "notabl": 155, "verbos": [155, 159, 1558, 1607], "newer": 155, "max_exampl": 155, "impact": [155, 163], "deadlin": 155, "weird": 155, "systemat": 155, "safeguard": 155, "inabl": 155, "test_result_typ": 155, "9090909090909091": 155, "overlap": [156, 157], "judgement": 156, "some_namespac": 156, "some_backend": 156, "another_backend": 156, "refactor": 156, "ongo": 156, "cooler": 156, "something_cool": 156, "clean": [156, 157, 159, 160, 162], "_assert_fill_value_and_dtype_are_compat": 156, "_to_devic": 156, "focus": [156, 175], "prior": 156, "older": 156, "grow": [156, 1558], "unbound": 156, "battl": 156, "face": [157, 159], "answer": [157, 161, 176], "contradict": 157, "entail": 157, "sacrif": 157, "dimems": 157, "conv": [157, 1093], "jacfwd": 157, "jacrev": 157, "banner": 157, "pointwis": 157, "unnecessari": 157, "fuse": 157, "tensorrt": 157, "highli": 157, "expens": 157, "incredibli": [157, 162, 176], "six": 157, "__gt__": 157, "price": 157, "pai": 157, "intrus": 157, "x_beta": 157, "equip": 157, "deliber": [157, 435, 701, 704], "priorit": 157, "simplif": 157, "allevi": 157, "ineffici": [157, 176], "fledg": [159, 160], "syntact": [159, 164], "logspac": [159, 228], "construct": [159, 163, 164, 1303, 1369, 1373], "power_seq": 159, "backend_stack": 159, "cprint": [159, 1606], "_determine_backend_from_arg": 159, "importlib": 159, "import_modul": 159, "_backend_dict": 159, "illustr": [159, 175], "un": [159, 310, 363], "unrol": [159, 162, 1093, 1144, 1147], "lstm": [159, 1093, 1144, 1147], "cell": [159, 1093, 1144, 1147], "hidden": [159, 163, 1093, 1144, 1147], "recurr": [159, 1093, 1144, 1147], "timestep": [159, 1093, 1144, 1147], "x_shape": 159, "input_channel": [159, 163], "x_flat": 159, "wi": 159, "wi_x": 159, "wii_x": 159, "wif_x": 159, "wig_x": 159, "wio_x": 159, "wh": 159, "ht": 159, "ct": 159, "hts_list": 159, "wii_xt": 159, "wif_xt": 159, "wig_xt": 159, "wio_xt": 159, "htm1": 159, "ctm1": 159, "wh_htm1": 159, "whi_htm1": 159, "whf_htm1": 159, "whg_htm1": 159, "who_htm1": 159, "ft": 159, "gt": 159, "ot": 159, "reliabl": 159, "sacrific": 159, "hear": 159, "virtu": 159, "pure_ivi": 159, "compile_graph": [159, 164], "pure_torch": 159, "backbon": [159, 162], "_layer": 159, "random_unifrom": 159, "unclean": 159, "wx": 159, "temp": 159, "torchscript": [159, 1557], "example_input": [159, 225, 226], "static_argnum": [159, 225, 226], "static_argnam": [159, 225, 226], "jit": [159, 176], "primit": [160, 176], "upcom": 160, "hierarch": [160, 162, 163], "_init": 161, "_size": 161, "mul": 161, "_devic": 161, "_dev_str": 161, "as_ivy_dev": [161, 401], "_pre_repr": 161, "_post_repr": 161, "framework_str": 161, "_is_vari": 161, "noinspect": 161, "pypep8nam": 161, "typeerror": 161, "immut": 161, "claim": 161, "truli": 161, "_native_wrapp": 161, "attributeerror": 161, "genuin": 161, "some_method": 161, "rewritten": 161, "__pow__": 161, "strang": 161, "enforc": 161, "compartment": 161, "public": [161, 849, 876], "newshap": 161, "new_shap": 161, "tidi": 161, "shorter": 161, "crystal": 161, "ton": 162, "ado": [162, 163], "soup": 162, "walk": [162, 163], "dct": 162, "cnt": 162, "combo": [162, 1558, 1564], "1000": [162, 435, 721, 724], "3333335": 162, "grad": [162, 163, 164, 1042, 1043, 1046, 1558], "delimit": 162, "autocomplet": 162, "midwai": 162, "agent": 162, "total_spe": 162, "total_height": 162, "total_width": 162, "ag": 162, "tot": 162, "total_": 162, "total_h": 162, "cnt0": 162, "cnt1": 162, "diff_0": 162, "diff_1": 162, "config0": 162, "config1": 162, "decod": 162, "l0": 162, "truncat": 162, "decoder__l0": 162, "decoder__l1": 162, "encoder__l0": 162, "encoder__l1": 162, "height": 162, "l0__b": 162, "l0__w": 162, "l1__b": 162, "l1__w": 162, "printabl": 162, "obviou": 162, "foresight": 162, "untidili": 162, "update_ag": 162, "normalize_img": 162, "img": 162, "img_max": 162, "reduce_max": [162, 1558], "img_min": 162, "reduce_min": [162, 1558], "img_rang": 162, "agent_posit": 162, "agent_veloc": 162, "agent_cam_front_rgb": 162, "agent_cam_front_depth": 162, "agent_cam_rear_rgb": 162, "agent_cam_rear_depth": 162, "agent_cam_lidar": 162, "camera": 162, "front_rgb": 162, "front_depth": 162, "rear_rgb": 162, "rear_depth": 162, "lidar": 162, "rgb": 162, "rear": 162, "veloc": 162, "cam": 162, "cam_max": 162, "cam_min": 162, "cam_rang": 162, "Of": 162, "perman": 162, "afterward": 162, "thread": 162, "pretti": 162, "dataload": [162, 174, 1558], "_cnt": 162, "img_": 162, "_dataset_s": 162, "_batch_siz": 162, "_count": [162, 163], "__next__": 162, "filenam": 162, "img_fnam": 162, "fname": 162, "loaded_img": 162, "cv2": 162, "imread": 162, "from_numpi": 162, "loader": [162, 176], "batch_slic": 162, "model": [162, 163, 1557, 1558], "mymodel": [162, 1558], "linear0": [162, 163, 1558], "linear1": [162, 163, 1558], "x_in": [162, 163, 164, 1558], "loss_fn": [162, 163, 164, 1558], "reduce_mean": [162, 163, 164, 1558], "execute_with_gradi": [162, 163, 164, 176, 1042, 1558], "0145": 162, "grad_fn": [162, 1042, 1052, 1081], "addbackward0": 162, "_create_vari": 163, "output_channel": 163, "with_bia": 163, "_input_channel": 163, "_output_channel": 163, "_w_shape": 163, "_b_shape": 163, "_with_bia": 163, "396": 163, "764": 163, "872": 163, "211": 163, "439": 163, "nightmar": 163, "overcom": 163, "fc": 163, "v0": 163, "v1": 163, "key0": 163, "linear3": 163, "v2": 163, "counter": 163, "fed": [163, 401, 425], "weight_initi": 163, "glorotuniform": 163, "bias_initi": 163, "_w_init": 163, "_b_init": 163, "create_vari": 163, "var_shap": 163, "fan_out": 163, "fan_in": 163, "fan_mod": 163, "fan_sum": 163, "misnom": 163, "saw": 163, "vanilla": [163, 1384, 1386], "compile_on_next_step": [163, 849, 856], "_beta1": 163, "_beta2": 163, "_epsilon": 163, "_mw": 163, "_vw": 163, "_first_pass": 163, "_should_compil": 163, "_step": 163, "new_v": 163, "_lr": 163, "_inplac": 163, "_stop_gradi": 163, "set_stat": 163, "clamp": 164, "clip_by_valu": 164, "captur": 164, "sparse_funct": 164, "num_class": 164, "num_dim": 164, "new_axi": 164, "_linear": 164, "to_backend": 164, "jax_graph": 164, "to_ivy_modul": 164, "thinli": 164, "whilst": [164, 1557], "to_haiku_modul": 164, "hk": 164, "loss_fn_t": 164, "without_apply_rng": 164, "rng": 164, "prngkei": 164, "update_rul": 164, "tree_multimap": 164, "mechan": [174, 176, 1558], "robot": [174, 1558], "perfect": 175, "3d": 175, "differenti": 175, "orient": 175, "pose": 175, "euler": [175, 227], "quaternion": 175, "rotat": 175, "ivy_mech": 175, "target_facing_rotation_matrix": 175, "polar_to_cartesian_coord": 175, "ordin": [175, 1159, 1242, 1245], "warp": 175, "optic": 175, "voxel": 175, "ivy_vis": 175, "coords_to_voxel_grid": 175, "render_pixel_coord": 175, "neural": [175, 1093, 1558], "radianc": 175, "nerf": 175, "trajectori": 175, "motion": 175, "plan": [175, 1558], "mobil": 175, "sample_spline_path": 175, "rigidmobil": 175, "sample_bodi": 175, "drone": 175, "sample_link": 175, "openai": 175, "swimmer": 175, "reward": 175, "supervis": 175, "reinforc": 175, "door": [175, 176], "cartpol": 175, "mountain_car": 175, "pendulum": 175, "reacher": 175, "learnt": 175, "ture": 175, "ntm": 175, "egospher": 175, "spatial": 175, "esm": 175, "ivy_memori": 175, "egocentr": 175, "room": 175, "inspir": 175, "doubt": 176, "grate": 176, "probe": 176, "remark": 176, "surpris": 176, "lock": 176, "gold": 176, "dex": 176, "ye": 176, "scan": 176, "tricki": [176, 1557], "predictor": 176, "tight": 176, "driver": 176, "schedul": 176, "Will": 176, "ast": 176, "cond": 176, "jacobian": [176, 1042, 1061], "checkpoint": 176, "autodiff": 176, "shine": 176, "merci": 176, "autograd": 176, "cluster": 176, "compet": 176, "paradigm": 176, "parallelis": 176, "spmd": 176, "mixtur": 176, "expert": 176, "sophist": 176, "depart": 176, "routin": 176, "hundr": 176, "thousand": 176, "deepli": [176, 1388, 1390], "broadli": 176, "supplementari": 176, "fanci": 176, "fusion": 176, "lose": 176, "vmap": [176, 849], "pmap": 176, "overhead": 176, "eventu": 176, "supplement": 176, "backdoor": 176, "callback": 176, "record": 176, "metric": 176, "outsourc": 176, "integer_arrays_to_float": 177, "with_supported_device_and_dtyp": 177, "version_dict": 177, "with_supported_devic": 177, "with_supported_dtyp": 177, "with_unsupported_device_and_dtyp": 177, "with_unsupported_devic": 177, "gaussian": [189, 190, 193], "138": [189, 190, 193], "165": [189, 190, 193, 1093, 1139, 1142], "126": [189, 190, 193, 435, 686, 689, 1501, 1512, 1515], "166": [189, 190, 193, 1464, 1465, 1469], "159": [189, 190, 193, 1093, 1139, 1142], "703": [189, 200, 203], "683": [189, 200, 203], "408": [189, 200, 203], "313": [189, 200, 203], "437": [189, 200, 203], "214": [189, 210, 213], "891": [189, 210, 213], "0768": [189, 215, 218, 435, 526, 529], "231": [189, 215, 218], "363": [189, 215, 218], "invoc": [225, 226], "718281828459045": 227, "newaxi": 227, "pi": 227, "141592653589793": 227, "nestedsequ": [228, 233, 235], "protocol": [228, 229], "_t_co": [228, 229], "ml_framework": [228, 230, 231], "distanc": [228, 230, 231], "adjac": [228, 230, 231], "obj": [228, 233, 235], "typevar": [228, 233, 235], "supportsbufferprotocol": [228, 233, 235], "asarray_handle_nest": 228, "asarray_infer_devic": 228, "asarray_to_native_arrays_and_back": 228, "static_copy_arrai": [228, 240, 242], "row": [228, 249, 250, 1159, 1203, 1206, 1242, 1245, 1247, 1251, 1267, 1271, 1411, 1412, 1415, 1438, 1454, 1457], "interchang": [228, 252, 255, 1303, 1364, 1368], "conserv": [228, 269, 272], "cartesian": [228, 269, 272], "ij": [228, 269, 272, 1501, 1512, 1515], "ni": [228, 269, 272], "xi": [228, 269, 272], "n1": [228, 269, 272], "n2": [228, 269, 272], "n3": [228, 269, 272], "xv": [228, 269, 272], "yv": [228, 269, 272], "y1": [228, 305, 309], "y2": [228, 305, 309], "y3": [228, 305, 309], "intdtyp": [228, 305, 309, 310, 339, 379, 382], "defaultdtyp": 310, "defaultfloatdtyp": 310, "defaultintdtyp": 310, "defaultuintdtyp": 310, "uint_dtyp": [310, 340, 394], "as_native_dtyp": 310, "incompat": [310, 323, 326], "data_type_funct": [310, 328, 331], "check_float": 310, "closest_valid_dtyp": 310, "xtype": [310, 334], "ytype": [310, 334], "native_uint16": [310, 334], "floatdtyp": [310, 336, 337], "int_dtyp": [310, 339, 393], "4294967346": [310, 339, 340], "default_uint_dtyp": [310, 394, 399], "uintdtyp": [310, 340, 379, 382, 394, 399], "defualt": [310, 340], "set_default_uint_dtyp": [310, 340, 362, 399], "dtype_bit": 310, "native_bool": [310, 345], "followng": [310, 346, 349], "smallest_norm": [310, 346, 349], "4028235e": [310, 346, 349], "7976931348623157e": [310, 346, 349], "55040e": [310, 346, 349], "encapsul": [310, 357, 360], "314": [310, 357, 360], "9223372036854775808": [310, 357, 360], "9223372036854775807": [310, 357, 360], "65535": [310, 357, 360], "4294967295": [310, 357, 360], "infer_default_dtyp": 310, "native_uint8": [310, 363], "type1": [310, 384], "type2": [310, 384], "array_api_promot": [310, 384, 385], "default_dtype_stack": [310, 391, 396], "unset_default_dtyp": [310, 391], "native_uint64": [310, 391], "ret1": [310, 395], "ret2": [310, 395], "reset": [310, 396, 399, 401, 433, 849, 1031, 1032, 1033, 1034, 1035], "unset_default_float_dtyp": 310, "unset_default_int_dtyp": 310, "unset_default_uint_dtyp": 310, "valid_dtyp": 310, "native_float16": [310, 400], "defaultdevic": 401, "__enter__": 401, "_dev": 401, "__exit__": 401, "exc_typ": 401, "exc_val": 401, "exc_tb": 401, "exit": 401, "profil": 401, "save_dir": [401, 402], "as_native_dev": [401, 420], "clear_mem_on_dev": 401, "function_supported_devic": 401, "function_unsupported_devic": 401, "139740789224448": [401, 415], "gpu_is_avail": 401, "physic": [401, 417], "num_ivy_arrays_on_dev": 401, "x4": [401, 419], "percent_used_mem_on_dev": 401, "process_specif": [401, 420, 434], "percentag": [401, 420], "ram": [401, 420, 431, 434], "036902561555": [401, 420], "7024003467681645": [401, 420], "7095597456708771": [401, 420], "print_all_ivy_arrays_on_dev": 401, "attr_onli": [401, 421], "chunk": [401, 423, 424, 425], "split_func_cal": 401, "max_chunk_s": [401, 425], "chunk_siz": [401, 425], "input_ax": [401, 425], "output_ax": [401, 425], "feed": [401, 425], "fist": [401, 425], "gb": [401, 431, 434], "66700032": [401, 431], "589934592": [401, 431], "tpu_is_avail": 401, "unset_default_devic": 401, "used_mem_on_dev": 401, "219563008": [401, 434], "902400346": [401, 434], "525205504": [401, 434], "magnitud": [435, 436, 439, 451, 454, 661, 664, 1159, 1247, 1251, 1252, 1256], "princip": [435, 441, 444, 456, 459, 466, 469], "nearest": [435, 451, 454, 661, 664, 701, 704], "2019": [435, 451, 454, 551, 554, 616, 619, 661, 664], "commut": [435, 451, 454], "809": [435, 461, 464], "199": [435, 461, 464], "569": [435, 461, 464], "733": [435, 461, 464], "notat": [435, 471, 474, 1501, 1512, 1515], "denot": [435, 471, 474, 1042, 1074, 1092], "quadrant": [435, 471, 474], "3\u03c0": [435, 471, 474], "588": [435, 471, 474], "719": [435, 471, 474], "197": [435, 471, 474], "bitwis": [435, 481, 484, 496, 499, 506, 509, 646, 649], "invert": [435, 486, 489, 1159, 1208, 1210], "170": [435, 501, 504], "243": [435, 501, 504], "225": [435, 501, 504], "xor": [435, 506, 509, 646, 649], "77": [435, 506, 509, 1159, 1222, 1225, 1501, 1512, 1515], "654": [435, 516, 519], "368": [435, 521, 524], "670": [435, 521, 524], "548": [435, 521, 524, 716, 719], "1490": [435, 521, 524], "0192": [435, 526, 529], "0384": [435, 526, 529], "0576": [435, 526, 529], "115": [435, 526, 529, 686, 689], "698": [435, 531, 534], "accur": [435, 551, 554, 616, 619], "fdlibm": [435, 551, 554, 616, 619], "compliant": [435, 551, 554, 616, 619, 636, 639, 641, 644, 1501, 1516, 1519, 1520, 1523, 1524, 1527, 1532, 1535], "85e": [435, 551, 554], "632": [435, 551, 554], "20e": [435, 551, 554], "72e": [435, 551, 554], "22000": [435, 551, 554], "442000": [435, 551, 554], "greatest": [435, 556, 559, 561, 564], "742": [435, 616, 619], "y_i": [435, 666, 669], "versu": [435, 681, 684], "189": [435, 686, 689], "252": [435, 686, 689], "315": [435, 686, 689], "378": [435, 686, 689], "1150": [435, 686, 689], "2890": [435, 686, 689], "172": [435, 686, 689], "229": [435, 686, 689], "487": [435, 686, 689, 1093, 1139, 1142], "344": [435, 686, 689], "decim": [435, 701, 704, 746, 750], "imprecis": [435, 701, 704], "5654": [435, 701, 704], "034": [435, 701, 704], "433": [435, 701, 704, 1042, 1052, 1061, 1081], "124": [435, 706, 709, 1093, 1139, 1142], "932": [435, 711, 714], "746": [435, 711, 714], "443": [435, 711, 714], "657": [435, 711, 714, 849, 871, 874], "253": [435, 716, 719], "indistinguish": [435, 721, 724], "infinit": [435, 721, 724], "32455532": [435, 721, 724], "89897949": [435, 721, 724], "169": [435, 721, 724], "546": [435, 736, 740, 1093, 1139, 1142], "842": [435, 736, 740], "916": [435, 736, 740, 1287, 1288, 1291], "996": [435, 736, 740], "328": [435, 736, 740], "462": [435, 741, 745], "604": [435, 741, 745], "984": [435, 741, 745], "997": [435, 741, 745], "is_ivy_sparse_arrai": 756, "arg_info": 849, "inspect": [849, 855], "arg_nam": 849, "recalcul": [849, 865], "my_sum": [849, 865], "val1": [849, 865], "val2": [849, 865], "cached_sum": [849, 865], "line_eq": [849, 865], "slp": [849, 865], "itc": [849, 865], "cached_line_eq": [849, 865], "0353": [849, 866, 869], "424": [849, 866, 869], "58": [849, 866, 869, 1464, 1465, 1469], "176": [849, 866, 869, 1464, 1465, 1469], "339": [849, 866, 869], "271": [849, 866, 869], "135": [849, 866, 869], "406": [849, 866, 869], "168": [849, 866, 869], "391": [849, 866, 869], "417": [849, 871, 874], "583": [849, 871, 874], "0667": [849, 871, 874], "267": [849, 871, 874], "131": [849, 871, 874], "263": [849, 871, 874], "394": [849, 871, 874], "526": [849, 871, 874], "788": [849, 871, 874], "container_typ": 849, "default_str": [849, 878, 880], "405": [849, 886, 889], "fourier": [849, 899, 902], "function_supported_devices_and_dtyp": 849, "function_unsupported_devices_and_dtyp": 849, "get_all_arrays_in_memori": [849, 977], "get_array_mod": [849, 988, 1031], "array_mod": [849, 917], "set_array_mod": [849, 917, 1031], "get_exception_trace_mod": [849, 922, 989, 1032], "exception_trace_mod": [849, 918], "set_exception_trace_mod": [849, 918, 1032], "get_item": 849, "get_min_bas": [849, 990], "get_min_denomin": [849, 991], "get_nestable_mod": [849, 992, 1033], "set_nestable_mod": [849, 922, 1033], "get_queue_timeout": [849, 993, 1034], "set_queue_timeout": [849, 928, 1034], "get_referrers_recurs": 849, "seen_set": [849, 929], "local_set": [849, 929], "get_tmp_dir": 849, "inplace_arrays_support": 849, "inplace_variables_support": 849, "isscalar": 849, "match_kwarg": 849, "allow_dupl": [849, 974], "forkserv": [849, 975], "spawn": [849, 975], "num_arrays_in_memori": 849, "print_all_arrays_in_memori": 849, "garbag": [849, 977], "collector": [849, 977], "set_min_bas": 849, "set_min_denomin": 849, "set_shape_array_mod": [849, 997, 1035], "shape_array_mod": [849, 994, 1035], "set_tmp_dir": 849, "tmp_dr": [849, 995], "49999999999975": [849, 998, 1001], "5015015015010504": [849, 998, 1001], "000444502911705e": [849, 998, 1001], "9999999999995j": [849, 998, 1001], "to_ivy_shap": 849, "100000023841858": [849, 1014, 1018], "200000047683716": [849, 1014, 1018], "299999952316284": [849, 1014, 1018], "400000095367432": [849, 1014, 1018], "599999904632568": [849, 1014, 1018], "to_native_shap": 849, "try_else_non": 849, "dictionai": [849, 1030], "hemant": [849, 1030], "unset_array_mod": 849, "unset_shape_array_mod": [849, 1031, 1034], "unset_exception_trace_mod": 849, "unset_nestable_mod": 849, "unset_queue_timeout": 849, "451": [849, 1036, 1040], "in_ax": [849, 1041], "out_ax": [849, 1041], "thereof": [849, 1041], "fun": [849, 1041, 1388, 1399], "summaris": [849, 1041], "gradienttrack": 1042, "with_grad": [1042, 1074, 1080], "0125": [1042, 1043, 1046], "171": [1042, 1043, 1046], "retain_grad": [1042, 1051], "grad_idx": [1042, 1051], "func_ret": [1042, 1051], "retain": [1042, 1051, 1557], "933": [1042, 1052, 1061, 1081], "jac": 1042, "jac_fn": [1042, 1061], "639": [1042, 1062, 1065], "361": [1042, 1062, 1065, 1411, 1422, 1425], "set_with_grad": [1042, 1080, 1092], "with_grads_stack": [1042, 1074, 1080, 1092], "unset_with_grad": 1042, "value_and_grad": 1042, "value_grad": [1042, 1081], "423332": [1042, 1081], "channel_last": [1093, 1094, 1124, 1125], "feature_group_count": [1093, 1094, 1124, 1125], "x_dilat": [1093, 1094, 1124], "fd": [1093, 1114, 1117, 1119, 1122, 1124, 1125], "ncdhw": [1093, 1114, 1117, 1119, 1122], "dhwio": [1093, 1114, 1117], "258": [1093, 1119, 1122], "channel_first": [1093, 1124, 1125, 1137], "conv_general_transpos": 1093, "deconv_length": 1093, "stride_s": [1093, 1126], "kernel_s": [1093, 1126], "depthwis": [1093, 1127, 1130], "hwi": [1093, 1127, 1130], "randomli": [1093, 1132, 1135], "bernoulli": [1093, 1132, 1135], "get_x_data_format": 1093, "handle_pad": 1093, "incom": [1093, 1139, 1142], "666": [1093, 1139, 1142, 1159, 1203, 1206], "4269": [1093, 1139, 1142], "911": [1093, 1139, 1142], "157": [1093, 1139, 1142], "753": [1093, 1139, 1142], "101": [1093, 1139, 1142, 1159, 1193, 1196, 1388, 1394], "545": [1093, 1139, 1142, 1411, 1427, 1430], "547": [1093, 1139, 1142], "852": [1093, 1139, 1142], "963": [1093, 1139, 1142], "108": [1093, 1139, 1142, 1501, 1512, 1515], "196": [1093, 1139, 1142], "306": [1093, 1139, 1142], "num_queri": [1093, 1149, 1152, 1154, 1157], "query_dim": [1093, 1149, 1152], "measur": [1093, 1149, 1152], "num_kei": [1093, 1149, 1152, 1154, 1157], "cont_feat_dim": [1093, 1149, 1152], "numhead": [1093, 1149, 1152], "head_dim": [1093, 1149, 1152], "out_feat_dim": [1093, 1149, 1152], "feat_dim": [1093, 1154, 1157], "score": [1093, 1154, 1157], "axisa": [1159, 1165, 1168], "axisb": [1159, 1165, 1168], "axisc": [1159, 1165, 1168], "293": [1159, 1170, 1173], "46997": [1159, 1170, 1173], "padding_valu": [1159, 1175], "right_left": [1159, 1175], "num_row": [1159, 1175], "num_col": [1159, 1175], "uplo": [1159, 1181, 1184, 1185, 1187], "eigendecomposit": [1159, 1181, 1184], "qlq\u1d40": [1159, 1181, 1184], "orthogon": [1159, 1181, 1184], "eig": [1159, 1181, 1184, 1185, 1187], "hermitian": [1159, 1181, 1184, 1185, 1187, 1247, 1251], "eigenvalu": [1159, 1181, 1184, 1185, 1187], "eigenvector": [1159, 1181, 1184], "array_lik": [1159, 1188, 1191, 1222, 1225], "0012": [1159, 1193, 1196], "00342": [1159, 1193, 1196], "000565": [1159, 1193, 1196], "0104": [1159, 1193, 1196], "0003": [1159, 1193, 1196], "000981": [1159, 1193, 1196], "00282": [1159, 1193, 1196], "000766": [1159, 1193, 1196], "0322": [1159, 1193, 1196], "00237": [1159, 1193, 1196], "000151": [1159, 1193, 1196], "00101": [1159, 1193, 1196], "00019": [1159, 1193, 1196], "0214": [1159, 1193, 1196], "00171": [1159, 1193, 1196], "0107": [1159, 1193, 1196], "0167": [1159, 1193, 1196], "0472": [1159, 1193, 1196], "0536": [1159, 1193, 1196], "0177": [1159, 1193, 1196], "000429": [1159, 1193, 1196], "00762": [1159, 1193, 1196], "transpose_a": [1159, 1198, 1201], "transpose_b": [1159, 1198, 1201], "prepend": [1159, 1198, 1201, 1303, 1319, 1322], "frobeniu": [1159, 1203, 1206], "nuclear": [1159, 1203, 1206], "induc": [1159, 1203, 1206], "47722558": [1159, 1203, 1206], "776": [1159, 1203, 1206], "6000004": [1159, 1203, 1206], "112": [1159, 1222, 1225, 1501, 1512, 1515], "104": [1159, 1222, 1225, 1501, 1512, 1515], "moor": [1159, 1227, 1230], "penros": [1159, 1227, 1230], "orthonorm": [1159, 1232, 1235, 1247, 1251], "coeffici": [1159, 1242, 1245], "usvh": [1159, 1247, 1251], "vh": [1159, 1247, 1251], "et": [1159, 1247, 1251], "cetera": [1159, 1247, 1251], "reconstructed_x": [1159, 1247, 1251], "ss": [1159, 1252, 1256], "615": [1159, 1252, 1256, 1464, 1465, 1469], "866": [1159, 1252, 1256], "864": [1159, 1252, 1256], "contract": [1159, 1257, 1261, 1501, 1512, 1515], "0x": [1159, 1267, 1271], "alexandr": [1159, 1267, 1271], "theophil": [1159, 1267, 1271], "skew": [1159, 1282, 1286], "discret": [1287, 1293, 1296], "35667497": [1287, 1293, 1296], "793291": [1287, 1298, 1301], "512926": [1287, 1298, 1301], "before_1": [1303, 1314, 1317, 1379, 1383], "after_1": [1303, 1314, 1317, 1379, 1383], "before_n": [1303, 1314, 1317, 1379, 1383], "after_n": [1303, 1314, 1317, 1379, 1383], "squeezabl": [1303, 1354, 1357], "famili": [1303, 1359, 1362], "intxx": [1303, 1359, 1362], "floatxx": [1303, 1359, 1362], "retwaitin": [1303, 1369, 1373], "fomaml_step": 1384, "inner_cost_fn": [1384, 1385, 1386], "outer_cost_fn": [1384, 1385, 1386], "inner_grad_step": [1384, 1385, 1386, 1387], "inner_learning_r": [1384, 1385, 1386, 1387], "inner_optimization_step": [1384, 1385, 1386, 1387], "inner_batch_fn": [1384, 1385, 1386], "outer_batch_fn": [1384, 1385, 1386], "average_across_step": [1384, 1385, 1386], "inner_v": [1384, 1385, 1386], "keep_inner_v": [1384, 1385, 1386], "outer_v": [1384, 1385, 1386], "keep_outer_v": [1384, 1385, 1386], "return_inner_v": [1384, 1385, 1386, 1387], "num_task": [1384, 1385, 1386, 1387], "maml": [1384, 1385, 1386], "recev": [1384, 1385, 1386], "0x7f24df041040": [1384, 1385, 1386, 1387], "maml_step": 1384, "rece": [1384, 1386], "reptile_step": 1384, "cost_fn": [1384, 1387], "reptil": [1384, 1387], "receivng": [1384, 1387], "all_nested_indic": 1388, "include_nest": [1388, 1389], "_index": [1388, 1389, 1399], "_base": [1388, 1389, 1398, 1399], "copy_nest": 1388, "to_mut": [1388, 1390, 1400], "mutabl": [1388, 1390, 1400], "copied_nest": [1388, 1390], "1337": [1388, 1390], "insert_into_nest_at_index": 1388, "insert_into_nest_at_indic": 1388, "special_squar": [1388, 1394], "6666666666666667": [1388, 1394], "special_pow": [1388, 1394], "linear_model": [1388, 1394], "map_nest_at_index": 1388, "map_nest_at_indic": 1388, "ub": [1388, 1396], "tb": [1388, 1396], "multi_index_nest": 1388, "nested_ani": 1388, "check_nest": [1388, 1398, 1399], "conditon": [1388, 1398, 1399], "nested_argwher": 1388, "stop_after_n_found": [1388, 1399], "nested_indic": [1388, 1399], "_depth": [1388, 1400], "_tuple_check_fn": [1388, 1400], "_list_check_fn": [1388, 1400], "_dict_check_fn": [1388, 1400], "nested_multi_map": 1388, "nest0": [1388, 1401], "ivy_arrai": [1388, 1401], "funciton": [1388, 1401], "prune_nest_at_index": 1388, "prune_nest_at_indic": 1388, "set_nest_at_index": 1388, "set_nest_at_indic": 1388, "111": [1388, 1405], "xyz": [1388, 1405], "pqr": [1388, 1405], "mini": [1406, 1407, 1410], "217": [1406, 1407, 1410], "uniformli": [1411, 1417, 1420, 1427, 1430], "22346112": [1411, 1422, 1425], "0922": [1411, 1422, 1425], "515": [1411, 1422, 1425], "596": [1411, 1422, 1425], "247": [1411, 1422, 1425], "627": [1411, 1422, 1425], "9213753": [1411, 1422, 1425], "12818667": [1411, 1422, 1425], "799": [1411, 1422, 1425], "469": [1411, 1422, 1425], "287": [1411, 1422, 1425], "0366": [1411, 1422, 1425], "26431865": [1411, 1427, 1430], "475": [1411, 1427, 1430], "878": [1411, 1427, 1430], "861": [1411, 1427, 1430], "929": [1411, 1427, 1430], "789": [1411, 1427, 1430], "519": [1411, 1427, 1430], "0435": [1411, 1427, 1430], "381": [1411, 1427, 1430, 1464, 1465, 1469], "4608004": [1411, 1427, 1430], "8458502": [1411, 1427, 1430], "x_j": [1464, 1465, 1469, 1470, 1474, 1475, 1479, 1480, 1484], "aggreg": [1464, 1465, 1469], "fourth": [1464, 1465, 1469], "607": [1464, 1465, 1469], "735": [1464, 1465, 1469], "0396": [1464, 1465, 1469], "828": [1464, 1465, 1469], "144": [1464, 1465, 1469], "40501155": [1464, 1465, 1469], "77361575": [1464, 1465, 1469], "97776199": [1464, 1465, 1469], "36831157": [1464, 1465, 1469], "89148434": [1464, 1465, 1469], "9512272": [1464, 1465, 1469], "67542176": [1464, 1465, 1469], "41985657": [1464, 1465, 1469], "23478023": [1464, 1465, 1469], "1141": [1464, 1465, 1469], "8101": [1464, 1465, 1469], "9298": [1464, 1465, 1469], "8460": [1464, 1465, 1469], "2119": [1464, 1465, 1469], "3519": [1464, 1465, 1469], "6252": [1464, 1465, 1469], "4033": [1464, 1465, 1469], "7443": [1464, 1465, 1469], "2577": [1464, 1465, 1469], "3707": [1464, 1465, 1469], "0545": [1464, 1465, 1469], "3238": [1464, 1465, 1469], "5944": [1464, 1465, 1469], "0775": [1464, 1465, 1469], "4327": [1464, 1465, 1469], "889": [1464, 1465, 1469], "175": [1464, 1465, 1469], "763": [1464, 1465, 1469], "071": [1464, 1465, 1469], "262": [1464, 1465, 1469], "114": [1464, 1465, 1469], "349": [1464, 1465, 1469], "594": [1464, 1465, 1469], "335": [1464, 1465, 1469], "457": [1464, 1465, 1469], "827": [1464, 1465, 1469], "209": [1464, 1465, 1469], "einstein": [1501, 1512, 1515], "summat": [1501, 1512, 1515], "seq": [1501, 1512, 1515], "jk": [1501, 1512, 1515], "ik": [1501, 1512, 1515], "510": [1501, 1512, 1515], "117": [1501, 1512, 1515], "sentinel": [1501, 1516, 1519, 1524, 1527], "90000004": [1501, 1520, 1523], "statistical_funct": [1501, 1532, 1535], "8164966": [1501, 1532, 1535], "07472222": [1501, 1541, 1545], "simplicit": [1546, 1547, 1550, 1552, 1555], "nail": 1557, "funtion": 1557, "asset": 1557, "functiona": 1557, "scientist": 1557, "deploi": 1557, "correl": 1557, "analyz": 1557, "ai": 1558, "colab": 1558, "sharp": 1558, "favorit": 1558, "jax_concat": 1558, "tf_concat": 1558, "np_concat": 1558, "torch_concat": 1558, "get_devic": 1558, "reduce_prod": 1558, "reduce_sum": 1558, "gradient_imag": 1558, "indices_wher": 1558, "bilinear_resampl": 1558, "stack_imag": 1558, "neural_net": 1558, "floormod": 1558, "ecosystem": [1558, 1564], "articl": 1558, "lenton2021ivi": 1558, "inter": 1558, "lenton": 1558, "daniel": 1558, "pardo": 1558, "fabio": 1558, "falck": 1558, "fabian": 1558, "jame": 1558, "stephen": 1558, "clark": 1558, "ronald": 1558, "journal": 1558, "arxiv": 1558, "preprint": 1558, "2102": 1558, "02886": 1558, "2021": 1558}, "objects": {"ivy.array": [[39, 0, 0, "-", "activations"], [41, 0, 0, "-", "array"], [43, 0, 0, "-", "conversions"], [48, 0, 0, "-", "creation"], [50, 0, 0, "-", "data_type"], [52, 0, 0, "-", "device"], [54, 0, 0, "-", "elementwise"], [56, 0, 0, "-", "extensions"], [58, 0, 0, "-", "general"], [60, 0, 0, "-", "gradients"], [62, 0, 0, "-", "image"], [64, 0, 0, "-", "layers"], [66, 0, 0, "-", "linear_algebra"], [68, 0, 0, "-", "losses"], [70, 0, 0, "-", "manipulation"], [72, 0, 0, "-", "norms"], [74, 0, 0, "-", "random"], [76, 0, 0, "-", "searching"], [78, 0, 0, "-", "set"], [80, 0, 0, "-", "sorting"], [82, 0, 0, "-", "statistical"], [84, 0, 0, "-", "utility"], [86, 0, 0, "-", "wrapping"]], "ivy.array.activations": [[40, 1, 1, "", "ArrayWithActivations"]], "ivy.array.activations.ArrayWithActivations": [[40, 2, 1, "", "gelu"], [40, 2, 1, "", "leaky_relu"], [40, 2, 1, "", "log_softmax"], [40, 2, 1, "", "relu"], [40, 2, 1, "", "sigmoid"], [40, 2, 1, "", "softmax"], [40, 2, 1, "", "softplus"]], "ivy.array.array": [[42, 1, 1, "", "Array"]], "ivy.array.array.Array": [[42, 3, 1, "", "T"], [42, 2, 1, "", "__add__"], [42, 2, 1, "", "__init__"], [42, 2, 1, "", "__le__"], [42, 2, 1, "", "__radd__"], [42, 2, 1, "", "__rrshift__"], [42, 2, 1, "", "__rshift__"], [42, 2, 1, "", "__rsub__"], [42, 2, 1, "", "__sub__"], [42, 3, 1, "", "data"], [42, 3, 1, "", "device"], [42, 3, 1, "", "dtype"], [42, 3, 1, "", "is_variable"], [42, 3, 1, "", "mT"], [42, 3, 1, "", "ndim"], [42, 3, 1, "", "shape"], [42, 3, 1, "", "size"]], "ivy.array.conversions": [[44, 4, 1, "", "args_to_ivy"], [45, 4, 1, "", "args_to_native"], [46, 4, 1, "", "to_ivy"], [47, 4, 1, "", "to_native"]], "ivy.array.creation": [[49, 1, 1, "", "ArrayWithCreation"]], "ivy.array.creation.ArrayWithCreation": [[49, 2, 1, "", "asarray"], [49, 2, 1, "", "copy_array"], [49, 2, 1, "", "empty_like"], [49, 2, 1, "", "from_dlpack"], [49, 2, 1, "", "full_like"], [49, 2, 1, "", "meshgrid"], [49, 2, 1, "", "native_array"], [49, 2, 1, "", "one_hot"], [49, 2, 1, "", "ones_like"], [49, 2, 1, "", "tril"], [49, 2, 1, "", "triu"], [49, 2, 1, "", "zeros_like"]], "ivy.array.data_type": [[51, 1, 1, "", "ArrayWithDataTypes"]], "ivy.array.data_type.ArrayWithDataTypes": [[51, 2, 1, "", "astype"], [51, 2, 1, "", "broadcast_arrays"], [51, 2, 1, "", "broadcast_to"], [51, 2, 1, "", "can_cast"], [51, 2, 1, "", "dtype"], [51, 2, 1, "", "finfo"], [51, 2, 1, "", "iinfo"], [51, 2, 1, "", "is_bool_dtype"], [51, 2, 1, "", "is_float_dtype"], [51, 2, 1, "", "is_int_dtype"], [51, 2, 1, "", "is_uint_dtype"], [51, 2, 1, "", "result_type"]], "ivy.array.device": [[53, 1, 1, "", "ArrayWithDevice"]], "ivy.array.device.ArrayWithDevice": [[53, 2, 1, "", "dev"], [53, 2, 1, "", "to_device"]], "ivy.array.elementwise": [[55, 1, 1, "", "ArrayWithElementwise"]], "ivy.array.elementwise.ArrayWithElementwise": [[55, 2, 1, "", "abs"], [55, 2, 1, "", "acos"], [55, 2, 1, "", "acosh"], [55, 2, 1, "", "add"], [55, 2, 1, "", "asin"], [55, 2, 1, "", "asinh"], [55, 2, 1, "", "atan"], [55, 2, 1, "", "atan2"], [55, 2, 1, "", "atanh"], [55, 2, 1, "", "bitwise_and"], [55, 2, 1, "", "bitwise_invert"], [55, 2, 1, "", "bitwise_left_shift"], [55, 2, 1, "", "bitwise_or"], [55, 2, 1, "", "bitwise_right_shift"], [55, 2, 1, "", "bitwise_xor"], [55, 2, 1, "", "ceil"], [55, 2, 1, "", "cos"], [55, 2, 1, "", "cosh"], [55, 2, 1, "", "deg2rad"], [55, 2, 1, "", "divide"], [55, 2, 1, "", "equal"], [55, 2, 1, "", "erf"], [55, 2, 1, "", "exp"], [55, 2, 1, "", "expm1"], [55, 2, 1, "", "floor"], [55, 2, 1, "", "floor_divide"], [55, 2, 1, "", "greater"], [55, 2, 1, "", "greater_equal"], [55, 2, 1, "", "isfinite"], [55, 2, 1, "", "isinf"], [55, 2, 1, "", "isnan"], [55, 2, 1, "", "isreal"], [55, 2, 1, "", "less"], [55, 2, 1, "", "less_equal"], [55, 2, 1, "", "log"], [55, 2, 1, "", "log10"], [55, 2, 1, "", "log1p"], [55, 2, 1, "", "log2"], [55, 2, 1, "", "logaddexp"], [55, 2, 1, "", "logical_and"], [55, 2, 1, "", "logical_not"], [55, 2, 1, "", "logical_or"], [55, 2, 1, "", "logical_xor"], [55, 2, 1, "", "maximum"], [55, 2, 1, "", "minimum"], [55, 2, 1, "", "multiply"], [55, 2, 1, "", "negative"], [55, 2, 1, "", "not_equal"], [55, 2, 1, "", "positive"], [55, 2, 1, "", "pow"], [55, 2, 1, "", "rad2deg"], [55, 2, 1, "", "reciprocal"], [55, 2, 1, "", "remainder"], [55, 2, 1, "", "round"], [55, 2, 1, "", "sign"], [55, 2, 1, "", "sin"], [55, 2, 1, "", "sinh"], [55, 2, 1, "", "sqrt"], [55, 2, 1, "", "square"], [55, 2, 1, "", "subtract"], [55, 2, 1, "", "tan"], [55, 2, 1, "", "tanh"], [55, 2, 1, "", "trunc"], [55, 2, 1, "", "trunc_divide"]], "ivy.array.extensions": [[57, 1, 1, "", "ArrayWithExtensions"]], "ivy.array.extensions.ArrayWithExtensions": [[57, 2, 1, "", "flatten"], [57, 2, 1, "", "flipud"], [57, 2, 1, "", "fmax"], [57, 2, 1, "", "fmod"], [57, 2, 1, "", "heaviside"], [57, 2, 1, "", "lcm"], [57, 2, 1, "", "max_pool2d"], [57, 2, 1, "", "median"], [57, 2, 1, "", "moveaxis"], [57, 2, 1, "", "pad"], [57, 2, 1, "", "sinc"]], "ivy.array.general": [[59, 1, 1, "", "ArrayWithGeneral"]], "ivy.array.general.ArrayWithGeneral": [[59, 2, 1, "", "all_equal"], [59, 2, 1, "", "array_equal"], [59, 2, 1, "", "assert_supports_inplace"], [59, 2, 1, "", "clip_matrix_norm"], [59, 2, 1, "", "clip_vector_norm"], [59, 2, 1, "", "default"], [59, 2, 1, "", "einops_rearrange"], [59, 2, 1, "", "einops_reduce"], [59, 2, 1, "", "einops_repeat"], [59, 2, 1, "", "exists"], [59, 2, 1, "", "fourier_encode"], [59, 2, 1, "", "gather"], [59, 2, 1, "", "gather_nd"], [59, 2, 1, "", "get_num_dims"], [59, 2, 1, "", "has_nans"], [59, 2, 1, "", "inplace_decrement"], [59, 2, 1, "", "inplace_increment"], [59, 2, 1, "", "inplace_update"], [59, 2, 1, "", "is_array"], [59, 2, 1, "", "is_ivy_array"], [59, 2, 1, "", "is_ivy_container"], [59, 2, 1, "", "is_native_array"], [59, 2, 1, "", "scatter_flat"], [59, 2, 1, "", "scatter_nd"], [59, 2, 1, "", "stable_divide"], [59, 2, 1, "", "stable_pow"], [59, 2, 1, "", "supports_inplace_updates"], [59, 2, 1, "", "to_list"], [59, 2, 1, "", "to_numpy"], [59, 2, 1, "", "to_scalar"], [59, 2, 1, "", "value_is_nan"]], "ivy.array.gradients": [[61, 1, 1, "", "ArrayWithGradients"]], "ivy.array.gradients.ArrayWithGradients": [[61, 2, 1, "", "adam_step"], [61, 2, 1, "", "adam_update"], [61, 2, 1, "", "gradient_descent_update"], [61, 2, 1, "", "is_variable"], [61, 2, 1, "", "lamb_update"], [61, 2, 1, "", "lars_update"], [61, 2, 1, "", "optimizer_update"], [61, 2, 1, "", "stop_gradient"], [61, 2, 1, "", "variable"], [61, 2, 1, "", "variable_data"]], "ivy.array.image": [[63, 1, 1, "", "ArrayWithImage"]], "ivy.array.layers": [[65, 1, 1, "", "ArrayWithLayers"]], "ivy.array.layers.ArrayWithLayers": [[65, 2, 1, "", "conv1d"], [65, 2, 1, "", "conv1d_transpose"], [65, 2, 1, "", "conv2d"], [65, 2, 1, "", "conv3d"], [65, 2, 1, "", "conv3d_transpose"], [65, 2, 1, "", "depthwise_conv2d"], [65, 2, 1, "", "dropout"], [65, 2, 1, "", "linear"], [65, 2, 1, "", "lstm_update"], [65, 2, 1, "", "multi_head_attention"], [65, 2, 1, "", "scaled_dot_product_attention"]], "ivy.array.linear_algebra": [[67, 1, 1, "", "ArrayWithLinearAlgebra"]], "ivy.array.linear_algebra.ArrayWithLinearAlgebra": [[67, 2, 1, "", "cholesky"], [67, 2, 1, "", "cross"], [67, 2, 1, "", "det"], [67, 2, 1, "", "diagonal"], [67, 2, 1, "", "eigh"], [67, 2, 1, "", "eigvalsh"], [67, 2, 1, "", "inner"], [67, 2, 1, "", "inv"], [67, 2, 1, "", "matmul"], [67, 2, 1, "", "matrix_norm"], [67, 2, 1, "", "matrix_rank"], [67, 2, 1, "", "matrix_transpose"], [67, 2, 1, "", "outer"], [67, 2, 1, "", "pinv"], [67, 2, 1, "", "qr"], [67, 2, 1, "", "slogdet"], [67, 2, 1, "", "solve"], [67, 2, 1, "", "svd"], [67, 2, 1, "", "svdvals"], [67, 2, 1, "", "tensordot"], [67, 2, 1, "", "trace"], [67, 2, 1, "", "vander"], [67, 2, 1, "", "vecdot"], [67, 2, 1, "", "vector_norm"], [67, 2, 1, "", "vector_to_skew_symmetric_matrix"]], "ivy.array.losses": [[69, 1, 1, "", "ArrayWithLosses"]], "ivy.array.losses.ArrayWithLosses": [[69, 2, 1, "", "binary_cross_entropy"], [69, 2, 1, "", "cross_entropy"], [69, 2, 1, "", "sparse_cross_entropy"]], "ivy.array.manipulation": [[71, 1, 1, "", "ArrayWithManipulation"]], "ivy.array.manipulation.ArrayWithManipulation": [[71, 2, 1, "", "clip"], [71, 2, 1, "", "concat"], [71, 2, 1, "", "constant_pad"], [71, 2, 1, "", "expand_dims"], [71, 2, 1, "", "flip"], [71, 2, 1, "", "permute_dims"], [71, 2, 1, "", "repeat"], [71, 2, 1, "", "reshape"], [71, 2, 1, "", "roll"], [71, 2, 1, "", "split"], [71, 2, 1, "", "squeeze"], [71, 2, 1, "", "stack"], [71, 2, 1, "", "swapaxes"], [71, 2, 1, "", "tile"], [71, 2, 1, "", "unstack"], [71, 2, 1, "", "zero_pad"]], "ivy.array.norms": [[73, 1, 1, "", "ArrayWithNorms"]], "ivy.array.norms.ArrayWithNorms": [[73, 2, 1, "", "layer_norm"]], "ivy.array.random": [[75, 1, 1, "", "ArrayWithRandom"]], "ivy.array.random.ArrayWithRandom": [[75, 2, 1, "", "multinomial"], [75, 2, 1, "", "randint"], [75, 2, 1, "", "random_normal"], [75, 2, 1, "", "random_uniform"], [75, 2, 1, "", "shuffle"]], "ivy.array.searching": [[77, 1, 1, "", "ArrayWithSearching"]], "ivy.array.searching.ArrayWithSearching": [[77, 2, 1, "", "argmax"], [77, 2, 1, "", "argmin"], [77, 2, 1, "", "argwhere"], [77, 2, 1, "", "nonzero"], [77, 2, 1, "", "where"]], "ivy.array.set": [[79, 1, 1, "", "ArrayWithSet"]], "ivy.array.set.ArrayWithSet": [[79, 2, 1, "", "unique_all"], [79, 2, 1, "", "unique_counts"], [79, 2, 1, "", "unique_inverse"], [79, 2, 1, "", "unique_values"]], "ivy.array.sorting": [[81, 1, 1, "", "ArrayWithSorting"]], "ivy.array.sorting.ArrayWithSorting": [[81, 2, 1, "", "argsort"], [81, 2, 1, "", "searchsorted"], [81, 2, 1, "", "sort"]], "ivy.array.statistical": [[83, 1, 1, "", "ArrayWithStatistical"]], "ivy.array.statistical.ArrayWithStatistical": [[83, 2, 1, "", "cumprod"], [83, 2, 1, "", "cumsum"], [83, 2, 1, "", "einsum"], [83, 2, 1, "", "max"], [83, 2, 1, "", "mean"], [83, 2, 1, "", "min"], [83, 2, 1, "", "prod"], [83, 2, 1, "", "std"], [83, 2, 1, "", "sum"], [83, 2, 1, "", "var"]], "ivy.array.utility": [[85, 1, 1, "", "ArrayWithUtility"]], "ivy.array.utility.ArrayWithUtility": [[85, 2, 1, "", "all"], [85, 2, 1, "", "any"]], "ivy.array.wrapping": [[87, 4, 1, "", "add_ivy_array_instance_methods"]], "ivy": [[1, 0, 0, "-", "assertions"], [17, 0, 0, "-", "backend_handler"], [177, 0, 0, "-", "func_wrapper"], [1606, 0, 0, "-", "verbosity"]], "ivy.assertions": [[2, 4, 1, "", "check_all"], [3, 4, 1, "", "check_all_or_any_fn"], [4, 4, 1, "", "check_any"], [5, 4, 1, "", "check_elem_in_list"], [6, 4, 1, "", "check_equal"], [7, 4, 1, "", "check_exists"], [8, 4, 1, "", "check_false"], [9, 4, 1, "", "check_fill_value_and_dtype_are_compatible"], [10, 4, 1, "", "check_gather_input_valid"], [11, 4, 1, "", "check_gather_nd_input_valid"], [12, 4, 1, "", "check_greater"], [13, 4, 1, "", "check_isinstance"], [14, 4, 1, "", "check_less"], [15, 4, 1, "", "check_shape"], [16, 4, 1, "", "check_true"]], "ivy.backend_handler": [[17, 1, 1, "", "ContextManager"], [18, 4, 1, "", "choose_random_backend"], [19, 4, 1, "", "clear_backend_stack"], [20, 4, 1, "", "current_backend"], [21, 4, 1, "", "fn_name_from_version_specific_fn_name"], [22, 4, 1, "", "get_backend"], [23, 4, 1, "", "set_backend"], [24, 4, 1, "", "set_backend_to_specific_version"], [25, 4, 1, "", "unset_backend"]], "ivy.backend_handler.ContextManager": [[17, 2, 1, "", "__init__"]], "ivy.container": [[89, 0, 0, "-", "activations"], [91, 0, 0, "-", "base"], [93, 0, 0, "-", "container"], [95, 0, 0, "-", "conversions"], [97, 0, 0, "-", "creation"], [99, 0, 0, "-", "data_type"], [101, 0, 0, "-", "device"], [103, 0, 0, "-", "elementwise"], [105, 0, 0, "-", "extensions"], [107, 0, 0, "-", "general"], [109, 0, 0, "-", "gradients"], [111, 0, 0, "-", "image"], [113, 0, 0, "-", "layers"], [115, 0, 0, "-", "linear_algebra"], [117, 0, 0, "-", "losses"], [119, 0, 0, "-", "manipulation"], [121, 0, 0, "-", "norms"], [123, 0, 0, "-", "random"], [125, 0, 0, "-", "searching"], [127, 0, 0, "-", "set"], [129, 0, 0, "-", "sorting"], [131, 0, 0, "-", "statistical"], [133, 0, 0, "-", "utility"], [135, 0, 0, "-", "wrapping"]], "ivy.container.activations": [[90, 1, 1, "", "ContainerWithActivations"]], "ivy.container.activations.ContainerWithActivations": [[90, 2, 1, "", "gelu"], [90, 2, 1, "", "leaky_relu"], [90, 2, 1, "", "log_softmax"], [90, 2, 1, "", "relu"], [90, 2, 1, "", "sigmoid"], [90, 2, 1, "", "softmax"], [90, 2, 1, "", "softplus"], [90, 2, 1, "", "static_gelu"], [90, 2, 1, "", "static_leaky_relu"], [90, 2, 1, "", "static_log_softmax"], [90, 2, 1, "", "static_relu"], [90, 2, 1, "", "static_sigmoid"], [90, 2, 1, "", "static_softmax"], [90, 2, 1, "", "static_softplus"]], "ivy.container.base": [[92, 1, 1, "", "ContainerBase"]], "ivy.container.base.ContainerBase": [[92, 2, 1, "", "__getitem__"], [92, 2, 1, "", "__init__"], [92, 2, 1, "", "__setitem__"], [92, 2, 1, "", "all_false"], [92, 2, 1, "", "all_key_chains"], [92, 2, 1, "", "all_true"], [92, 2, 1, "", "as_bools"], [92, 2, 1, "", "assert_contains_sub_container"], [92, 2, 1, "", "assert_contains_sub_structure"], [92, 2, 1, "", "assert_identical"], [92, 2, 1, "", "assert_identical_structure"], [92, 2, 1, "", "at_key_chain"], [92, 2, 1, "", "at_key_chains"], [92, 2, 1, "", "at_keys"], [92, 2, 1, "", "combine"], [92, 2, 1, "", "common_key_chains"], [92, 3, 1, "", "config"], [92, 2, 1, "", "cont_inplace_update"], [92, 2, 1, "", "contains_sub_container"], [92, 2, 1, "", "contains_sub_structure"], [92, 2, 1, "", "copy"], [92, 2, 1, "", "create_if_absent"], [92, 2, 1, "", "cutoff_at_depth"], [92, 2, 1, "", "cutoff_at_height"], [92, 2, 1, "", "deep_copy"], [92, 3, 1, "", "dev"], [92, 3, 1, "", "dev_str"], [92, 2, 1, "", "diff"], [92, 2, 1, "", "duplicate_array_keychains"], [92, 2, 1, "", "find_sub_container"], [92, 2, 1, "", "find_sub_structure"], [92, 2, 1, "", "flatten_key_chain"], [92, 2, 1, "", "flatten_key_chains"], [92, 2, 1, "", "format_key_chains"], [92, 2, 1, "", "from_disk_as_hdf5"], [92, 2, 1, "", "from_disk_as_json"], [92, 2, 1, "", "from_disk_as_pickled"], [92, 2, 1, "", "from_flat_list"], [92, 2, 1, "", "h5_file_size"], [92, 2, 1, "", "handle_inplace"], [92, 2, 1, "", "has_key"], [92, 2, 1, "", "has_key_chain"], [92, 2, 1, "", "identical"], [92, 2, 1, "", "identical_array_shapes"], [92, 2, 1, "", "identical_configs"], [92, 2, 1, "", "identical_structure"], [92, 2, 1, "", "if_exists"], [92, 3, 1, "", "ivy"], [92, 2, 1, "", "key_chains_containing"], [92, 2, 1, "", "list_join"], [92, 2, 1, "", "list_stack"], [92, 2, 1, "", "map"], [92, 2, 1, "", "map_conts"], [92, 3, 1, "", "max_depth"], [92, 2, 1, "", "multi_map"], [92, 2, 1, "", "multi_map_in_static_method"], [92, 2, 1, "", "num_arrays"], [92, 2, 1, "", "overwrite_at_key_chain"], [92, 2, 1, "", "overwrite_at_key_chains"], [92, 2, 1, "", "prune_empty"], [92, 2, 1, "", "prune_key_chain"], [92, 2, 1, "", "prune_key_chains"], [92, 2, 1, "", "prune_key_from_key_chains"], [92, 2, 1, "", "prune_keys"], [92, 2, 1, "", "prune_keys_from_key_chains"], [92, 2, 1, "", "reduce"], [92, 2, 1, "", "remove_key_length_limit"], [92, 2, 1, "", "remove_print_limit"], [92, 2, 1, "", "reshape_like"], [92, 2, 1, "", "restructure"], [92, 2, 1, "", "restructure_key_chains"], [92, 2, 1, "", "set_at_key_chain"], [92, 2, 1, "", "set_at_key_chains"], [92, 2, 1, "", "set_at_keys"], [92, 3, 1, "", "shape"], [92, 3, 1, "", "shapes"], [92, 2, 1, "", "show"], [92, 2, 1, "", "show_sub_container"], [92, 2, 1, "", "shuffle_h5_file"], [92, 2, 1, "", "size_ordered_arrays"], [92, 2, 1, "", "slice_keys"], [92, 2, 1, "", "slice_via_key"], [92, 2, 1, "", "sort_by_key"], [92, 2, 1, "", "split_conts"], [92, 2, 1, "", "structural_diff"], [92, 2, 1, "", "to_dict"], [92, 2, 1, "", "to_disk_as_hdf5"], [92, 2, 1, "", "to_disk_as_json"], [92, 2, 1, "", "to_disk_as_pickled"], [92, 2, 1, "", "to_flat_list"], [92, 2, 1, "", "to_iterator"], [92, 2, 1, "", "to_iterator_keys"], [92, 2, 1, "", "to_iterator_values"], [92, 2, 1, "", "to_jsonable"], [92, 2, 1, "", "to_nested_list"], [92, 2, 1, "", "to_raw"], [92, 2, 1, "", "trim_key"], [92, 2, 1, "", "try_kc"], [92, 2, 1, "", "unify"], [92, 2, 1, "", "unstack_conts"], [92, 2, 1, "", "update_config"], [92, 2, 1, "", "with_default_key_color"], [92, 2, 1, "", "with_entries_as_lists"], [92, 2, 1, "", "with_ivy_backend"], [92, 2, 1, "", "with_key_length_limit"], [92, 2, 1, "", "with_print_indent"], [92, 2, 1, "", "with_print_limit"], [92, 2, 1, "", "with_print_line_spacing"]], "ivy.container.container": [[94, 1, 1, "", "Container"]], "ivy.container.container.Container": [[94, 2, 1, "", "__add__"], [94, 2, 1, "", "__init__"], [94, 2, 1, "", "__radd__"], [94, 2, 1, "", "__rrshift__"], [94, 2, 1, "", "__rshift__"], [94, 2, 1, "", "__rsub__"], [94, 2, 1, "", "__sub__"]], "ivy.container.conversions": [[96, 1, 1, "", "ContainerWithConversions"]], "ivy.container.conversions.ContainerWithConversions": [[96, 2, 1, "", "static_to_ivy"], [96, 2, 1, "", "static_to_native"], [96, 2, 1, "", "to_ivy"], [96, 2, 1, "", "to_native"]], "ivy.container.creation": [[98, 1, 1, "", "ContainerWithCreation"]], "ivy.container.creation.ContainerWithCreation": [[98, 2, 1, "", "empty_like"], [98, 2, 1, "", "from_dlpack"], [98, 2, 1, "", "full_like"], [98, 2, 1, "", "meshgrid"], [98, 2, 1, "", "native_array"], [98, 2, 1, "", "one_hot"], [98, 2, 1, "", "ones_like"], [98, 2, 1, "", "static_arange"], [98, 2, 1, "", "static_asarray"], [98, 2, 1, "", "static_empty_like"], [98, 2, 1, "", "static_eye"], [98, 2, 1, "", "static_from_dlpack"], [98, 2, 1, "", "static_full_like"], [98, 2, 1, "", "static_linspace"], [98, 2, 1, "", "static_logspace"], [98, 2, 1, "", "static_meshgrid"], [98, 2, 1, "", "static_native_array"], [98, 2, 1, "", "static_one_hot"], [98, 2, 1, "", "static_ones"], [98, 2, 1, "", "static_ones_like"], [98, 2, 1, "", "static_tril"], [98, 2, 1, "", "static_triu"], [98, 2, 1, "", "static_zeros"], [98, 2, 1, "", "static_zeros_like"], [98, 2, 1, "", "tril"], [98, 2, 1, "", "triu"], [98, 2, 1, "", "zeros_like"]], "ivy.container.data_type": [[100, 1, 1, "", "ContainerWithDataTypes"]], "ivy.container.data_type.ContainerWithDataTypes": [[100, 2, 1, "", "astype"], [100, 2, 1, "", "broadcast_arrays"], [100, 2, 1, "", "broadcast_to"], [100, 2, 1, "", "can_cast"], [100, 2, 1, "", "dtype"], [100, 2, 1, "", "finfo"], [100, 2, 1, "", "iinfo"], [100, 2, 1, "", "is_bool_dtype"], [100, 2, 1, "", "is_float_dtype"], [100, 2, 1, "", "is_int_dtype"], [100, 2, 1, "", "is_uint_dtype"], [100, 2, 1, "", "result_type"], [100, 2, 1, "", "static_astype"], [100, 2, 1, "", "static_broadcast_arrays"], [100, 2, 1, "", "static_broadcast_to"], [100, 2, 1, "", "static_can_cast"], [100, 2, 1, "", "static_default_float_dtype"], [100, 2, 1, "", "static_dtype"], [100, 2, 1, "", "static_finfo"], [100, 2, 1, "", "static_function_supported_dtypes"], [100, 2, 1, "", "static_function_unsupported_dtypes"], [100, 2, 1, "", "static_iinfo"], [100, 2, 1, "", "static_is_bool_dtype"], [100, 2, 1, "", "static_is_float_dtype"], [100, 2, 1, "", "static_is_int_dtype"], [100, 2, 1, "", "static_is_uint_dtype"], [100, 2, 1, "", "static_result_type"]], "ivy.container.device": [[102, 1, 1, "", "ContainerWithDevice"]], "ivy.container.device.ContainerWithDevice": [[102, 2, 1, "", "dev"], [102, 2, 1, "", "static_dev"], [102, 2, 1, "", "static_to_device"], [102, 2, 1, "", "to_device"]], "ivy.container.elementwise": [[104, 1, 1, "", "ContainerWithElementwise"]], "ivy.container.elementwise.ContainerWithElementwise": [[104, 2, 1, "", "abs"], [104, 2, 1, "", "acos"], [104, 2, 1, "", "acosh"], [104, 2, 1, "", "add"], [104, 2, 1, "", "asin"], [104, 2, 1, "", "asinh"], [104, 2, 1, "", "atan"], [104, 2, 1, "", "atan2"], [104, 2, 1, "", "atanh"], [104, 2, 1, "", "bitwise_and"], [104, 2, 1, "", "bitwise_invert"], [104, 2, 1, "", "bitwise_left_shift"], [104, 2, 1, "", "bitwise_or"], [104, 2, 1, "", "bitwise_right_shift"], [104, 2, 1, "", "bitwise_xor"], [104, 2, 1, "", "ceil"], [104, 2, 1, "", "cos"], [104, 2, 1, "", "cosh"], [104, 2, 1, "", "deg2rad"], [104, 2, 1, "", "divide"], [104, 2, 1, "", "equal"], [104, 2, 1, "", "erf"], [104, 2, 1, "", "exp"], [104, 2, 1, "", "expm1"], [104, 2, 1, "", "floor"], [104, 2, 1, "", "floor_divide"], [104, 2, 1, "", "greater"], [104, 2, 1, "", "greater_equal"], [104, 2, 1, "", "isfinite"], [104, 2, 1, "", "isinf"], [104, 2, 1, "", "isnan"], [104, 2, 1, "", "isreal"], [104, 2, 1, "", "less"], [104, 2, 1, "", "less_equal"], [104, 2, 1, "", "log"], [104, 2, 1, "", "log10"], [104, 2, 1, "", "log1p"], [104, 2, 1, "", "log2"], [104, 2, 1, "", "logaddexp"], [104, 2, 1, "", "logical_and"], [104, 2, 1, "", "logical_not"], [104, 2, 1, "", "logical_or"], [104, 2, 1, "", "logical_xor"], [104, 2, 1, "", "maximum"], [104, 2, 1, "", "minimum"], [104, 2, 1, "", "multiply"], [104, 2, 1, "", "negative"], [104, 2, 1, "", "not_equal"], [104, 2, 1, "", "positive"], [104, 2, 1, "", "pow"], [104, 2, 1, "", "rad2deg"], [104, 2, 1, "", "reciprocal"], [104, 2, 1, "", "remainder"], [104, 2, 1, "", "round"], [104, 2, 1, "", "sign"], [104, 2, 1, "", "sin"], [104, 2, 1, "", "sinh"], [104, 2, 1, "", "sqrt"], [104, 2, 1, "", "square"], [104, 2, 1, "", "static_abs"], [104, 2, 1, "", "static_acos"], [104, 2, 1, "", "static_acosh"], [104, 2, 1, "", "static_add"], [104, 2, 1, "", "static_asin"], [104, 2, 1, "", "static_asinh"], [104, 2, 1, "", "static_atan"], [104, 2, 1, "", "static_atan2"], [104, 2, 1, "", "static_atanh"], [104, 2, 1, "", "static_bitwise_and"], [104, 2, 1, "", "static_bitwise_invert"], [104, 2, 1, "", "static_bitwise_left_shift"], [104, 2, 1, "", "static_bitwise_or"], [104, 2, 1, "", "static_bitwise_right_shift"], [104, 2, 1, "", "static_bitwise_xor"], [104, 2, 1, "", "static_ceil"], [104, 2, 1, "", "static_cos"], [104, 2, 1, "", "static_cosh"], [104, 2, 1, "", "static_deg2rad"], [104, 2, 1, "", "static_divide"], [104, 2, 1, "", "static_equal"], [104, 2, 1, "", "static_erf"], [104, 2, 1, "", "static_exp"], [104, 2, 1, "", "static_expm1"], [104, 2, 1, "", "static_floor"], [104, 2, 1, "", "static_floor_divide"], [104, 2, 1, "", "static_greater"], [104, 2, 1, "", "static_greater_equal"], [104, 2, 1, "", "static_isfinite"], [104, 2, 1, "", "static_isinf"], [104, 2, 1, "", "static_isnan"], [104, 2, 1, "", "static_isreal"], [104, 2, 1, "", "static_less"], [104, 2, 1, "", "static_less_equal"], [104, 2, 1, "", "static_log"], [104, 2, 1, "", "static_log10"], [104, 2, 1, "", "static_log1p"], [104, 2, 1, "", "static_log2"], [104, 2, 1, "", "static_logaddexp"], [104, 2, 1, "", "static_logical_and"], [104, 2, 1, "", "static_logical_not"], [104, 2, 1, "", "static_logical_or"], [104, 2, 1, "", "static_logical_xor"], [104, 2, 1, "", "static_maximum"], [104, 2, 1, "", "static_minimum"], [104, 2, 1, "", "static_multiply"], [104, 2, 1, "", "static_negative"], [104, 2, 1, "", "static_not_equal"], [104, 2, 1, "", "static_positive"], [104, 2, 1, "", "static_pow"], [104, 2, 1, "", "static_rad2deg"], [104, 2, 1, "", "static_reciprocal"], [104, 2, 1, "", "static_remainder"], [104, 2, 1, "", "static_round"], [104, 2, 1, "", "static_sign"], [104, 2, 1, "", "static_sin"], [104, 2, 1, "", "static_sinh"], [104, 2, 1, "", "static_sqrt"], [104, 2, 1, "", "static_square"], [104, 2, 1, "", "static_subtract"], [104, 2, 1, "", "static_tan"], [104, 2, 1, "", "static_tanh"], [104, 2, 1, "", "static_trunc"], [104, 2, 1, "", "static_trunc_divide"], [104, 2, 1, "", "subtract"], [104, 2, 1, "", "tan"], [104, 2, 1, "", "tanh"], [104, 2, 1, "", "trunc"], [104, 2, 1, "", "trunc_divide"]], "ivy.container.extensions": [[106, 1, 1, "", "ContainerWithExtensions"]], "ivy.container.extensions.ContainerWithExtensions": [[106, 2, 1, "", "flatten"], [106, 2, 1, "", "flipud"], [106, 2, 1, "", "fmax"], [106, 2, 1, "", "fmod"], [106, 2, 1, "", "hann_window"], [106, 2, 1, "", "heaviside"], [106, 2, 1, "", "kaiser_window"], [106, 2, 1, "", "lcm"], [106, 2, 1, "", "max_pool2d"], [106, 2, 1, "", "median"], [106, 2, 1, "", "moveaxis"], [106, 2, 1, "", "pad"], [106, 2, 1, "", "sinc"], [106, 2, 1, "", "static_flatten"], [106, 2, 1, "", "static_flipud"], [106, 2, 1, "", "static_fmax"], [106, 2, 1, "", "static_fmod"], [106, 2, 1, "", "static_hann_window"], [106, 2, 1, "", "static_heaviside"], [106, 2, 1, "", "static_kaiser_window"], [106, 2, 1, "", "static_lcm"], [106, 2, 1, "", "static_max_pool2d"], [106, 2, 1, "", "static_median"], [106, 2, 1, "", "static_moveaxis"], [106, 2, 1, "", "static_pad"], [106, 2, 1, "", "static_sinc"]], "ivy.container.general": [[108, 1, 1, "", "ContainerWithGeneral"]], "ivy.container.general.ContainerWithGeneral": [[108, 2, 1, "", "all_equal"], [108, 2, 1, "", "assert_supports_inplace"], [108, 2, 1, "", "clip_matrix_norm"], [108, 2, 1, "", "clip_vector_norm"], [108, 2, 1, "", "einops_rearrange"], [108, 2, 1, "", "einops_reduce"], [108, 2, 1, "", "einops_repeat"], [108, 2, 1, "", "fourier_encode"], [108, 2, 1, "", "gather"], [108, 2, 1, "", "gather_nd"], [108, 2, 1, "", "get_num_dims"], [108, 2, 1, "", "has_nans"], [108, 2, 1, "", "inplace_decrement"], [108, 2, 1, "", "inplace_increment"], [108, 2, 1, "", "inplace_update"], [108, 2, 1, "", "is_array"], [108, 2, 1, "", "is_ivy_array"], [108, 2, 1, "", "is_ivy_container"], [108, 2, 1, "", "is_native_array"], [108, 2, 1, "", "scatter_flat"], [108, 2, 1, "", "scatter_nd"], [108, 2, 1, "", "stable_divide"], [108, 2, 1, "", "stable_pow"], [108, 2, 1, "", "static_all_equal"], [108, 2, 1, "", "static_assert_supports_inplace"], [108, 2, 1, "", "static_clip_matrix_norm"], [108, 2, 1, "", "static_clip_vector_norm"], [108, 2, 1, "", "static_einops_rearrange"], [108, 2, 1, "", "static_einops_reduce"], [108, 2, 1, "", "static_einops_repeat"], [108, 2, 1, "", "static_fourier_encode"], [108, 2, 1, "", "static_gather"], [108, 2, 1, "", "static_gather_nd"], [108, 2, 1, "", "static_get_num_dims"], [108, 2, 1, "", "static_has_nans"], [108, 2, 1, "", "static_inplace_decrement"], [108, 2, 1, "", "static_inplace_increment"], [108, 2, 1, "", "static_inplace_update"], [108, 2, 1, "", "static_is_array"], [108, 2, 1, "", "static_is_ivy_array"], [108, 2, 1, "", "static_is_ivy_container"], [108, 2, 1, "", "static_is_native_array"], [108, 2, 1, "", "static_scatter_flat"], [108, 2, 1, "", "static_scatter_nd"], [108, 2, 1, "", "static_stable_divide"], [108, 2, 1, "", "static_stable_pow"], [108, 2, 1, "", "static_supports_inplace_updates"], [108, 2, 1, "", "static_to_list"], [108, 2, 1, "", "static_to_numpy"], [108, 2, 1, "", "static_to_scalar"], [108, 2, 1, "", "static_value_is_nan"], [108, 2, 1, "", "supports_inplace_updates"], [108, 2, 1, "", "to_list"], [108, 2, 1, "", "to_numpy"], [108, 2, 1, "", "to_scalar"], [108, 2, 1, "", "value_is_nan"]], "ivy.container.gradients": [[110, 1, 1, "", "ContainerWithGradients"]], "ivy.container.gradients.ContainerWithGradients": [[110, 2, 1, "", "adam_step"], [110, 2, 1, "", "adam_update"], [110, 2, 1, "", "gradient_descent_update"], [110, 2, 1, "", "is_variable"], [110, 2, 1, "", "lamb_update"], [110, 2, 1, "", "lars_update"], [110, 2, 1, "", "optimizer_update"], [110, 2, 1, "", "static_is_variable"], [110, 2, 1, "", "static_stop_gradient"], [110, 2, 1, "", "static_variable"], [110, 2, 1, "", "static_variable_data"], [110, 2, 1, "", "stop_gradient"], [110, 2, 1, "", "variable"], [110, 2, 1, "", "variable_data"]], "ivy.container.image": [[112, 1, 1, "", "ContainerWithImage"]], "ivy.container.layers": [[114, 1, 1, "", "ContainerWithLayers"]], "ivy.container.layers.ContainerWithLayers": [[114, 2, 1, "", "conv1d"], [114, 2, 1, "", "conv1d_transpose"], [114, 2, 1, "", "conv2d"], [114, 2, 1, "", "conv2d_transpose"], [114, 2, 1, "", "conv3d"], [114, 2, 1, "", "conv3d_transpose"], [114, 2, 1, "", "depthwise_conv2d"], [114, 2, 1, "", "dropout"], [114, 2, 1, "", "linear"], [114, 2, 1, "", "lstm_update"], [114, 2, 1, "", "multi_head_attention"], [114, 2, 1, "", "scaled_dot_product_attention"], [114, 2, 1, "", "static_conv1d"], [114, 2, 1, "", "static_conv1d_transpose"], [114, 2, 1, "", "static_conv2d"], [114, 2, 1, "", "static_conv2d_transpose"], [114, 2, 1, "", "static_conv3d"], [114, 2, 1, "", "static_conv3d_transpose"], [114, 2, 1, "", "static_depthwise_conv2d"], [114, 2, 1, "", "static_dropout"], [114, 2, 1, "", "static_linear"], [114, 2, 1, "", "static_lstm_update"], [114, 2, 1, "", "static_multi_head_attention"], [114, 2, 1, "", "static_scaled_dot_product_attention"]], "ivy.container.linear_algebra": [[116, 1, 1, "", "ContainerWithLinearAlgebra"]], "ivy.container.linear_algebra.ContainerWithLinearAlgebra": [[116, 2, 1, "", "cholesky"], [116, 2, 1, "", "cross"], [116, 2, 1, "", "det"], [116, 2, 1, "", "diagonal"], [116, 2, 1, "", "eigh"], [116, 2, 1, "", "inner"], [116, 2, 1, "", "inv"], [116, 2, 1, "", "matmul"], [116, 2, 1, "", "matrix_norm"], [116, 2, 1, "", "matrix_power"], [116, 2, 1, "", "matrix_rank"], [116, 2, 1, "", "matrix_transpose"], [116, 2, 1, "", "outer"], [116, 2, 1, "", "pinv"], [116, 2, 1, "", "qr"], [116, 2, 1, "", "slogdet"], [116, 2, 1, "", "solve"], [116, 2, 1, "", "static_cholesky"], [116, 2, 1, "", "static_cross"], [116, 2, 1, "", "static_det"], [116, 2, 1, "", "static_diagonal"], [116, 2, 1, "", "static_inner"], [116, 2, 1, "", "static_inv"], [116, 2, 1, "", "static_matmul"], [116, 2, 1, "", "static_matrix_norm"], [116, 2, 1, "", "static_matrix_power"], [116, 2, 1, "", "static_matrix_rank"], [116, 2, 1, "", "static_matrix_transpose"], [116, 2, 1, "", "static_outer"], [116, 2, 1, "", "static_pinv"], [116, 2, 1, "", "static_qr"], [116, 2, 1, "", "static_slogdet"], [116, 2, 1, "", "static_solve"], [116, 2, 1, "", "static_svd"], [116, 2, 1, "", "static_svdvals"], [116, 2, 1, "", "static_tensordot"], [116, 2, 1, "", "static_trace"], [116, 2, 1, "", "static_vander"], [116, 2, 1, "", "static_vecdot"], [116, 2, 1, "", "static_vector_norm"], [116, 2, 1, "", "static_vector_to_skew_symmetric_matrix"], [116, 2, 1, "", "svd"], [116, 2, 1, "", "svdvals"], [116, 2, 1, "", "tensordot"], [116, 2, 1, "", "trace"], [116, 2, 1, "", "vander"], [116, 2, 1, "", "vecdot"], [116, 2, 1, "", "vector_norm"], [116, 2, 1, "", "vector_to_skew_symmetric_matrix"]], "ivy.container.losses": [[118, 1, 1, "", "ContainerWithLosses"]], "ivy.container.losses.ContainerWithLosses": [[118, 2, 1, "", "binary_cross_entropy"], [118, 2, 1, "", "cross_entropy"], [118, 2, 1, "", "sparse_cross_entropy"], [118, 2, 1, "", "static_binary_cross_entropy"], [118, 2, 1, "", "static_cross_entropy"], [118, 2, 1, "", "static_sparse_cross_entropy"]], "ivy.container.manipulation": [[120, 1, 1, "", "ContainerWithManipulation"]], "ivy.container.manipulation.ContainerWithManipulation": [[120, 2, 1, "", "clip"], [120, 2, 1, "", "concat"], [120, 2, 1, "", "constant_pad"], [120, 2, 1, "", "expand_dims"], [120, 2, 1, "", "flip"], [120, 2, 1, "", "permute_dims"], [120, 2, 1, "", "repeat"], [120, 2, 1, "", "reshape"], [120, 2, 1, "", "roll"], [120, 2, 1, "", "split"], [120, 2, 1, "", "squeeze"], [120, 2, 1, "", "stack"], [120, 2, 1, "", "static_clip"], [120, 2, 1, "", "static_concat"], [120, 2, 1, "", "static_constant_pad"], [120, 2, 1, "", "static_expand_dims"], [120, 2, 1, "", "static_flip"], [120, 2, 1, "", "static_permute_dims"], [120, 2, 1, "", "static_repeat"], [120, 2, 1, "", "static_reshape"], [120, 2, 1, "", "static_roll"], [120, 2, 1, "", "static_split"], [120, 2, 1, "", "static_squeeze"], [120, 2, 1, "", "static_stack"], [120, 2, 1, "", "static_swapaxes"], [120, 2, 1, "", "static_tile"], [120, 2, 1, "", "static_unstack"], [120, 2, 1, "", "static_zero_pad"], [120, 2, 1, "", "swapaxes"], [120, 2, 1, "", "tile"], [120, 2, 1, "", "unstack"], [120, 2, 1, "", "zero_pad"]], "ivy.container.norms": [[122, 1, 1, "", "ContainerWithNorms"]], "ivy.container.norms.ContainerWithNorms": [[122, 2, 1, "", "layer_norm"]], "ivy.container.random": [[124, 1, 1, "", "ContainerWithRandom"]], "ivy.container.random.ContainerWithRandom": [[124, 2, 1, "", "multinomial"], [124, 2, 1, "", "randint"], [124, 2, 1, "", "random_normal"], [124, 2, 1, "", "random_uniform"], [124, 2, 1, "", "shuffle"], [124, 2, 1, "", "static_multinomial"], [124, 2, 1, "", "static_randint"], [124, 2, 1, "", "static_random_normal"], [124, 2, 1, "", "static_random_uniform"], [124, 2, 1, "", "static_shuffle"]], "ivy.container.searching": [[126, 1, 1, "", "ContainerWithSearching"]], "ivy.container.searching.ContainerWithSearching": [[126, 2, 1, "", "argmax"], [126, 2, 1, "", "argmin"], [126, 2, 1, "", "argwhere"], [126, 2, 1, "", "nonzero"], [126, 2, 1, "", "static_argmax"], [126, 2, 1, "", "static_argmin"], [126, 2, 1, "", "static_argwhere"], [126, 2, 1, "", "static_nonzero"], [126, 2, 1, "", "static_where"], [126, 2, 1, "", "where"]], "ivy.container.set": [[128, 1, 1, "", "ContainerWithSet"]], "ivy.container.set.ContainerWithSet": [[128, 2, 1, "", "static_unique_all"], [128, 2, 1, "", "static_unique_counts"], [128, 2, 1, "", "static_unique_inverse"], [128, 2, 1, "", "static_unique_values"], [128, 2, 1, "", "unique_all"], [128, 2, 1, "", "unique_counts"], [128, 2, 1, "", "unique_inverse"], [128, 2, 1, "", "unique_values"]], "ivy.container.sorting": [[130, 1, 1, "", "ContainerWithSorting"]], "ivy.container.sorting.ContainerWithSorting": [[130, 2, 1, "", "argsort"], [130, 2, 1, "", "searchsorted"], [130, 2, 1, "", "sort"], [130, 2, 1, "", "static_argsort"], [130, 2, 1, "", "static_searchsorted"], [130, 2, 1, "", "static_sort"]], "ivy.container.statistical": [[132, 1, 1, "", "ContainerWithStatistical"]], "ivy.container.statistical.ContainerWithStatistical": [[132, 2, 1, "", "cumprod"], [132, 2, 1, "", "cumsum"], [132, 2, 1, "", "einsum"], [132, 2, 1, "", "max"], [132, 2, 1, "", "mean"], [132, 2, 1, "", "min"], [132, 2, 1, "", "prod"], [132, 2, 1, "", "static_cumprod"], [132, 2, 1, "", "static_cumsum"], [132, 2, 1, "", "static_sum"], [132, 2, 1, "", "static_var"], [132, 2, 1, "", "std"], [132, 2, 1, "", "sum"], [132, 2, 1, "", "var"]], "ivy.container.utility": [[134, 1, 1, "", "ContainerWithUtility"]], "ivy.container.utility.ContainerWithUtility": [[134, 2, 1, "", "all"], [134, 2, 1, "", "any"], [134, 2, 1, "", "static_all"], [134, 2, 1, "", "static_any"]], "ivy.container.wrapping": [[136, 4, 1, "", "add_ivy_container_instance_methods"]], "ivy.func_wrapper": [[178, 4, 1, "", "from_zero_dim_arrays_to_float"], [179, 4, 1, "", "handle_nestable"], [180, 4, 1, "", "handle_out_argument"], [181, 4, 1, "", "infer_device"], [182, 4, 1, "", "infer_dtype"], [183, 4, 1, "", "inputs_to_ivy_arrays"], [184, 4, 1, "", "inputs_to_native_arrays"], [185, 4, 1, "", "integer_arrays_to_float"], [186, 4, 1, "", "outputs_to_ivy_arrays"], [187, 4, 1, "", "to_native_arrays_and_back"], [177, 4, 1, "", "with_supported_device_and_dtypes"], [177, 4, 1, "", "with_supported_devices"], [177, 4, 1, "", "with_supported_dtypes"], [177, 4, 1, "", "with_unsupported_device_and_dtypes"], [177, 4, 1, "", "with_unsupported_devices"], [177, 4, 1, "", "with_unsupported_dtypes"]], "ivy.functional.ivy": [[189, 0, 0, "-", "activations"], [225, 0, 0, "-", "compilation"], [227, 0, 0, "-", "constants"], [228, 0, 0, "-", "creation"], [310, 0, 0, "-", "data_type"], [401, 0, 0, "-", "device"], [435, 0, 0, "-", "elementwise"], [756, 0, 0, "-", "extensions"], [849, 0, 0, "-", "general"], [1042, 0, 0, "-", "gradients"], [1093, 0, 0, "-", "layers"], [1159, 0, 0, "-", "linear_algebra"], [1287, 0, 0, "-", "losses"], [1303, 0, 0, "-", "manipulation"], [1384, 0, 0, "-", "meta"], [1388, 0, 0, "-", "nest"], [1406, 0, 0, "-", "norms"], [1411, 0, 0, "-", "random"], [1438, 0, 0, "-", "searching"], [1464, 0, 0, "-", "set"], [1485, 0, 0, "-", "sorting"], [1501, 0, 0, "-", "statistical"], [1546, 0, 0, "-", "utility"]], "ivy.functional.ivy.activations": [[193, 4, 1, "", "gelu"], [198, 4, 1, "", "leaky_relu"], [203, 4, 1, "", "log_softmax"], [208, 4, 1, "", "relu"], [213, 4, 1, "", "sigmoid"], [218, 4, 1, "", "softmax"], [223, 4, 1, "", "softplus"]], "ivy.functional.ivy.compilation": [[226, 4, 1, "", "compile"]], "ivy.functional.ivy.constants": [[227, 5, 1, "", "e"], [227, 5, 1, "", "inf"], [227, 5, 1, "", "nan"], [227, 5, 1, "", "newaxis"], [227, 5, 1, "", "pi"]], "ivy.functional.ivy.creation": [[229, 1, 1, "", "NestedSequence"], [231, 4, 1, "", "arange"], [228, 4, 1, "", "array"], [235, 4, 1, "", "asarray"], [237, 4, 1, "", "asarray_handle_nestable"], [238, 4, 1, "", "asarray_infer_device"], [239, 4, 1, "", "asarray_to_native_arrays_and_back"], [242, 4, 1, "", "copy_array"], [243, 4, 1, "", "empty"], [247, 4, 1, "", "empty_like"], [250, 4, 1, "", "eye"], [255, 4, 1, "", "from_dlpack"], [257, 4, 1, "", "full"], [261, 4, 1, "", "full_like"], [264, 4, 1, "", "linspace"], [267, 4, 1, "", "logspace"], [272, 4, 1, "", "meshgrid"], [277, 4, 1, "", "native_array"], [282, 4, 1, "", "one_hot"], [285, 4, 1, "", "ones"], [290, 4, 1, "", "ones_like"], [296, 4, 1, "", "tril"], [301, 4, 1, "", "triu"], [304, 4, 1, "", "zeros"], [309, 4, 1, "", "zeros_like"]], "ivy.functional.ivy.creation.NestedSequence": [[229, 2, 1, "", "__init__"]], "ivy.functional.ivy.data_type": [[310, 1, 1, "", "DefaultDtype"], [310, 1, 1, "", "DefaultFloatDtype"], [310, 1, 1, "", "DefaultIntDtype"], [310, 1, 1, "", "DefaultUintDtype"], [311, 4, 1, "", "as_ivy_dtype"], [312, 4, 1, "", "as_native_dtype"], [316, 4, 1, "", "astype"], [321, 4, 1, "", "broadcast_arrays"], [326, 4, 1, "", "broadcast_to"], [331, 4, 1, "", "can_cast"], [333, 4, 1, "", "check_float"], [334, 4, 1, "", "closest_valid_dtype"], [335, 4, 1, "", "default_dtype"], [337, 4, 1, "", "default_float_dtype"], [339, 4, 1, "", "default_int_dtype"], [340, 4, 1, "", "default_uint_dtype"], [343, 4, 1, "", "dtype"], [345, 4, 1, "", "dtype_bits"], [349, 4, 1, "", "finfo"], [352, 4, 1, "", "function_supported_dtypes"], [355, 4, 1, "", "function_unsupported_dtypes"], [360, 4, 1, "", "iinfo"], [362, 4, 1, "", "infer_default_dtype"], [363, 4, 1, "", "invalid_dtype"], [367, 4, 1, "", "is_bool_dtype"], [372, 4, 1, "", "is_float_dtype"], [377, 4, 1, "", "is_int_dtype"], [382, 4, 1, "", "is_uint_dtype"], [384, 4, 1, "", "promote_types"], [385, 4, 1, "", "promote_types_of_inputs"], [389, 4, 1, "", "result_type"], [391, 4, 1, "", "set_default_dtype"], [392, 4, 1, "", "set_default_float_dtype"], [393, 4, 1, "", "set_default_int_dtype"], [394, 4, 1, "", "set_default_uint_dtype"], [395, 4, 1, "", "type_promote_arrays"], [396, 4, 1, "", "unset_default_dtype"], [397, 4, 1, "", "unset_default_float_dtype"], [398, 4, 1, "", "unset_default_int_dtype"], [399, 4, 1, "", "unset_default_uint_dtype"], [400, 4, 1, "", "valid_dtype"]], "ivy.functional.ivy.data_type.DefaultDtype": [[310, 2, 1, "", "__init__"]], "ivy.functional.ivy.data_type.DefaultFloatDtype": [[310, 2, 1, "", "__init__"]], "ivy.functional.ivy.data_type.DefaultIntDtype": [[310, 2, 1, "", "__init__"]], "ivy.functional.ivy.data_type.DefaultUintDtype": [[310, 2, 1, "", "__init__"]], "ivy.functional.ivy.device": [[401, 1, 1, "", "DefaultDevice"], [402, 1, 1, "", "Profiler"], [403, 4, 1, "", "as_ivy_dev"], [404, 4, 1, "", "as_native_dev"], [405, 4, 1, "", "clear_mem_on_dev"], [406, 4, 1, "", "default_device"], [410, 4, 1, "", "dev"], [412, 4, 1, "", "dev_util"], [413, 4, 1, "", "function_supported_devices"], [414, 4, 1, "", "function_unsupported_devices"], [415, 4, 1, "", "get_all_ivy_arrays_on_dev"], [416, 4, 1, "", "gpu_is_available"], [417, 4, 1, "", "num_cpu_cores"], [418, 4, 1, "", "num_gpus"], [419, 4, 1, "", "num_ivy_arrays_on_dev"], [420, 4, 1, "", "percent_used_mem_on_dev"], [421, 4, 1, "", "print_all_ivy_arrays_on_dev"], [422, 4, 1, "", "set_default_device"], [423, 4, 1, "", "set_split_factor"], [424, 4, 1, "", "split_factor"], [425, 4, 1, "", "split_func_call"], [430, 4, 1, "", "to_device"], [431, 4, 1, "", "total_mem_on_dev"], [432, 4, 1, "", "tpu_is_available"], [433, 4, 1, "", "unset_default_device"], [434, 4, 1, "", "used_mem_on_dev"]], "ivy.functional.ivy.device.DefaultDevice": [[401, 2, 1, "", "__enter__"], [401, 2, 1, "", "__exit__"], [401, 2, 1, "", "__init__"]], "ivy.functional.ivy.device.Profiler": [[402, 2, 1, "", "__init__"], [402, 2, 1, "", "start"], [402, 2, 1, "", "stop"]], "ivy.functional.ivy.elementwise": [[439, 4, 1, "", "abs"], [444, 4, 1, "", "acos"], [449, 4, 1, "", "acosh"], [454, 4, 1, "", "add"], [459, 4, 1, "", "asin"], [464, 4, 1, "", "asinh"], [469, 4, 1, "", "atan"], [474, 4, 1, "", "atan2"], [479, 4, 1, "", "atanh"], [484, 4, 1, "", "bitwise_and"], [489, 4, 1, "", "bitwise_invert"], [494, 4, 1, "", "bitwise_left_shift"], [499, 4, 1, "", "bitwise_or"], [504, 4, 1, "", "bitwise_right_shift"], [509, 4, 1, "", "bitwise_xor"], [514, 4, 1, "", "ceil"], [519, 4, 1, "", "cos"], [524, 4, 1, "", "cosh"], [529, 4, 1, "", "deg2rad"], [534, 4, 1, "", "divide"], [539, 4, 1, "", "equal"], [544, 4, 1, "", "erf"], [549, 4, 1, "", "exp"], [554, 4, 1, "", "expm1"], [559, 4, 1, "", "floor"], [564, 4, 1, "", "floor_divide"], [569, 4, 1, "", "greater"], [574, 4, 1, "", "greater_equal"], [579, 4, 1, "", "isfinite"], [584, 4, 1, "", "isinf"], [589, 4, 1, "", "isnan"], [594, 4, 1, "", "isreal"], [599, 4, 1, "", "less"], [604, 4, 1, "", "less_equal"], [609, 4, 1, "", "log"], [614, 4, 1, "", "log10"], [619, 4, 1, "", "log1p"], [624, 4, 1, "", "log2"], [629, 4, 1, "", "logaddexp"], [634, 4, 1, "", "logical_and"], [639, 4, 1, "", "logical_not"], [644, 4, 1, "", "logical_or"], [649, 4, 1, "", "logical_xor"], [654, 4, 1, "", "maximum"], [659, 4, 1, "", "minimum"], [664, 4, 1, "", "multiply"], [669, 4, 1, "", "negative"], [674, 4, 1, "", "not_equal"], [679, 4, 1, "", "positive"], [684, 4, 1, "", "pow"], [689, 4, 1, "", "rad2deg"], [694, 4, 1, "", "reciprocal"], [699, 4, 1, "", "remainder"], [704, 4, 1, "", "round"], [709, 4, 1, "", "sign"], [714, 4, 1, "", "sin"], [719, 4, 1, "", "sinh"], [724, 4, 1, "", "sqrt"], [729, 4, 1, "", "square"], [735, 4, 1, "", "subtract"], [740, 4, 1, "", "tan"], [745, 4, 1, "", "tanh"], [750, 4, 1, "", "trunc"], [755, 4, 1, "", "trunc_divide"]], "ivy.functional.ivy.extensions": [[757, 0, 0, "-", "activations"], [758, 0, 0, "-", "compilation"], [759, 0, 0, "-", "constants"], [760, 0, 0, "-", "creation"], [761, 0, 0, "-", "data_type"], [762, 0, 0, "-", "device"], [763, 0, 0, "-", "elementwise"], [784, 0, 0, "-", "general"], [785, 0, 0, "-", "gradients"], [801, 0, 0, "-", "layers"], [807, 0, 0, "-", "linear_algebra"], [808, 0, 0, "-", "losses"], [809, 0, 0, "-", "manipulation"], [820, 0, 0, "-", "meta"], [830, 0, 0, "-", "nest"], [831, 0, 0, "-", "norms"], [837, 0, 0, "-", "random"], [838, 0, 0, "-", "searching"], [839, 0, 0, "-", "set"], [845, 0, 0, "-", "sorting"], [846, 0, 0, "-", "statistical"], [847, 0, 0, "-", "utility"]], "ivy.functional.ivy.general": [[853, 4, 1, "", "all_equal"], [855, 4, 1, "", "arg_info"], [856, 4, 1, "", "arg_names"], [859, 4, 1, "", "array_equal"], [863, 4, 1, "", "assert_supports_inplace"], [865, 4, 1, "", "cache_fn"], [869, 4, 1, "", "clip_matrix_norm"], [874, 4, 1, "", "clip_vector_norm"], [876, 4, 1, "", "container_types"], [877, 4, 1, "", "current_backend_str"], [880, 4, 1, "", "default"], [884, 4, 1, "", "einops_rearrange"], [889, 4, 1, "", "einops_reduce"], [894, 4, 1, "", "einops_repeat"], [898, 4, 1, "", "exists"], [902, 4, 1, "", "fourier_encode"], [904, 4, 1, "", "function_supported_devices_and_dtypes"], [905, 4, 1, "", "function_unsupported_devices_and_dtypes"], [909, 4, 1, "", "gather"], [914, 4, 1, "", "gather_nd"], [916, 4, 1, "", "get_all_arrays_in_memory"], [917, 4, 1, "", "get_array_mode"], [918, 4, 1, "", "get_exception_trace_mode"], [919, 4, 1, "", "get_item"], [920, 4, 1, "", "get_min_base"], [921, 4, 1, "", "get_min_denominator"], [922, 4, 1, "", "get_nestable_mode"], [926, 4, 1, "", "get_num_dims"], [928, 4, 1, "", "get_queue_timeout"], [929, 4, 1, "", "get_referrers_recursive"], [930, 4, 1, "", "get_tmp_dir"], [934, 4, 1, "", "has_nans"], [936, 4, 1, "", "inplace_arrays_supported"], [940, 4, 1, "", "inplace_decrement"], [945, 4, 1, "", "inplace_increment"], [950, 4, 1, "", "inplace_update"], [952, 4, 1, "", "inplace_variables_supported"], [956, 4, 1, "", "is_array"], [961, 4, 1, "", "is_ivy_array"], [966, 4, 1, "", "is_ivy_container"], [971, 4, 1, "", "is_native_array"], [973, 4, 1, "", "isscalar"], [974, 4, 1, "", "match_kwargs"], [975, 4, 1, "", "multiprocessing"], [976, 4, 1, "", "num_arrays_in_memory"], [977, 4, 1, "", "print_all_arrays_in_memory"], [981, 4, 1, "", "scatter_flat"], [986, 4, 1, "", "scatter_nd"], [988, 4, 1, "", "set_array_mode"], [989, 4, 1, "", "set_exception_trace_mode"], [990, 4, 1, "", "set_min_base"], [991, 4, 1, "", "set_min_denominator"], [992, 4, 1, "", "set_nestable_mode"], [993, 4, 1, "", "set_queue_timeout"], [994, 4, 1, "", "set_shape_array_mode"], [995, 4, 1, "", "set_tmp_dir"], [996, 4, 1, "", "shape"], [997, 4, 1, "", "shape_array_mode"], [1001, 4, 1, "", "stable_divide"], [1006, 4, 1, "", "stable_pow"], [1012, 4, 1, "", "supports_inplace_updates"], [1013, 4, 1, "", "to_ivy_shape"], [1018, 4, 1, "", "to_list"], [1019, 4, 1, "", "to_native_shape"], [1024, 4, 1, "", "to_numpy"], [1029, 4, 1, "", "to_scalar"], [1030, 4, 1, "", "try_else_none"], [1031, 4, 1, "", "unset_array_mode"], [1032, 4, 1, "", "unset_exception_trace_mode"], [1033, 4, 1, "", "unset_nestable_mode"], [1034, 4, 1, "", "unset_queue_timeout"], [1035, 4, 1, "", "unset_shape_array_mode"], [1040, 4, 1, "", "value_is_nan"], [1041, 4, 1, "", "vmap"]], "ivy.functional.ivy.gradients": [[1042, 1, 1, "", "GradientTracking"], [1046, 4, 1, "", "adam_step"], [1050, 4, 1, "", "adam_update"], [1051, 4, 1, "", "execute_with_gradients"], [1052, 4, 1, "", "grad"], [1056, 4, 1, "", "gradient_descent_update"], [1059, 4, 1, "", "is_variable"], [1061, 4, 1, "", "jac"], [1065, 4, 1, "", "lamb_update"], [1069, 4, 1, "", "lars_update"], [1073, 4, 1, "", "optimizer_update"], [1074, 4, 1, "", "set_with_grads"], [1079, 4, 1, "", "stop_gradient"], [1080, 4, 1, "", "unset_with_grads"], [1081, 4, 1, "", "value_and_grad"], [1086, 4, 1, "", "variable"], [1091, 4, 1, "", "variable_data"], [1092, 4, 1, "", "with_grads"]], "ivy.functional.ivy.gradients.GradientTracking": [[1042, 2, 1, "", "__init__"]], "ivy.functional.ivy.layers": [[1094, 4, 1, "", "conv"], [1098, 4, 1, "", "conv1d"], [1103, 4, 1, "", "conv1d_transpose"], [1108, 4, 1, "", "conv2d"], [1112, 4, 1, "", "conv2d_transpose"], [1117, 4, 1, "", "conv3d"], [1122, 4, 1, "", "conv3d_transpose"], [1124, 4, 1, "", "conv_general_dilated"], [1125, 4, 1, "", "conv_general_transpose"], [1126, 4, 1, "", "deconv_length"], [1130, 4, 1, "", "depthwise_conv2d"], [1135, 4, 1, "", "dropout"], [1137, 4, 1, "", "get_x_data_format"], [1138, 4, 1, "", "handle_padding"], [1142, 4, 1, "", "linear"], [1147, 4, 1, "", "lstm_update"], [1152, 4, 1, "", "multi_head_attention"], [1157, 4, 1, "", "scaled_dot_product_attention"]], "ivy.functional.ivy.linear_algebra": [[1163, 4, 1, "", "cholesky"], [1168, 4, 1, "", "cross"], [1173, 4, 1, "", "det"], [1175, 4, 1, "", "diag"], [1179, 4, 1, "", "diagonal"], [1184, 4, 1, "", "eigh"], [1187, 4, 1, "", "eigvalsh"], [1191, 4, 1, "", "inner"], [1196, 4, 1, "", "inv"], [1201, 4, 1, "", "matmul"], [1206, 4, 1, "", "matrix_norm"], [1210, 4, 1, "", "matrix_power"], [1215, 4, 1, "", "matrix_rank"], [1220, 4, 1, "", "matrix_transpose"], [1225, 4, 1, "", "outer"], [1230, 4, 1, "", "pinv"], [1235, 4, 1, "", "qr"], [1240, 4, 1, "", "slogdet"], [1245, 4, 1, "", "solve"], [1251, 4, 1, "", "svd"], [1256, 4, 1, "", "svdvals"], [1261, 4, 1, "", "tensordot"], [1266, 4, 1, "", "trace"], [1271, 4, 1, "", "vander"], [1276, 4, 1, "", "vecdot"], [1281, 4, 1, "", "vector_norm"], [1286, 4, 1, "", "vector_to_skew_symmetric_matrix"]], "ivy.functional.ivy.losses": [[1291, 4, 1, "", "binary_cross_entropy"], [1296, 4, 1, "", "cross_entropy"], [1301, 4, 1, "", "sparse_cross_entropy"]], "ivy.functional.ivy.manipulation": [[1307, 4, 1, "", "clip"], [1312, 4, 1, "", "concat"], [1317, 4, 1, "", "constant_pad"], [1322, 4, 1, "", "expand_dims"], [1327, 4, 1, "", "flip"], [1332, 4, 1, "", "permute_dims"], [1337, 4, 1, "", "repeat"], [1342, 4, 1, "", "reshape"], [1347, 4, 1, "", "roll"], [1352, 4, 1, "", "split"], [1357, 4, 1, "", "squeeze"], [1362, 4, 1, "", "stack"], [1368, 4, 1, "", "swapaxes"], [1373, 4, 1, "", "tile"], [1378, 4, 1, "", "unstack"], [1383, 4, 1, "", "zero_pad"]], "ivy.functional.ivy.meta": [[1385, 4, 1, "", "fomaml_step"], [1386, 4, 1, "", "maml_step"], [1387, 4, 1, "", "reptile_step"]], "ivy.functional.ivy.nest": [[1389, 4, 1, "", "all_nested_indices"], [1390, 4, 1, "", "copy_nest"], [1391, 4, 1, "", "index_nest"], [1392, 4, 1, "", "insert_into_nest_at_index"], [1393, 4, 1, "", "insert_into_nest_at_indices"], [1394, 4, 1, "", "map"], [1395, 4, 1, "", "map_nest_at_index"], [1396, 4, 1, "", "map_nest_at_indices"], [1397, 4, 1, "", "multi_index_nest"], [1398, 4, 1, "", "nested_any"], [1399, 4, 1, "", "nested_argwhere"], [1400, 4, 1, "", "nested_map"], [1401, 4, 1, "", "nested_multi_map"], [1402, 4, 1, "", "prune_nest_at_index"], [1403, 4, 1, "", "prune_nest_at_indices"], [1404, 4, 1, "", "set_nest_at_index"], [1405, 4, 1, "", "set_nest_at_indices"]], "ivy.functional.ivy.norms": [[1410, 4, 1, "", "layer_norm"]], "ivy.functional.ivy.random": [[1415, 4, 1, "", "multinomial"], [1420, 4, 1, "", "randint"], [1425, 4, 1, "", "random_normal"], [1430, 4, 1, "", "random_uniform"], [1432, 4, 1, "", "seed"], [1436, 4, 1, "", "shuffle"]], "ivy.functional.ivy.searching": [[1442, 4, 1, "", "argmax"], [1447, 4, 1, "", "argmin"], [1452, 4, 1, "", "argwhere"], [1457, 4, 1, "", "nonzero"], [1463, 4, 1, "", "where"]], "ivy.functional.ivy.set": [[1469, 4, 1, "", "unique_all"], [1474, 4, 1, "", "unique_counts"], [1479, 4, 1, "", "unique_inverse"], [1484, 4, 1, "", "unique_values"]], "ivy.functional.ivy.sorting": [[1489, 4, 1, "", "argsort"], [1494, 4, 1, "", "searchsorted"], [1499, 4, 1, "", "sort"]], "ivy.functional.ivy.statistical": [[1505, 4, 1, "", "cumprod"], [1510, 4, 1, "", "cumsum"], [1515, 4, 1, "", "einsum"], [1519, 4, 1, "", "max"], [1523, 4, 1, "", "mean"], [1527, 4, 1, "", "min"], [1531, 4, 1, "", "prod"], [1535, 4, 1, "", "std"], [1540, 4, 1, "", "sum"], [1545, 4, 1, "", "var"]], "ivy.functional.ivy.utility": [[1550, 4, 1, "", "all"], [1555, 4, 1, "", "any"]], "ivy.verbosity": [[1607, 4, 1, "", "cprint"]]}, "objtypes": {"0": "py:module", "1": "py:class", "2": "py:method", "3": "py:property", "4": "py:function", "5": "py:data"}, "objnames": {"0": ["py", "module", "Python module"], "1": ["py", "class", "Python class"], "2": ["py", "method", "Python method"], "3": ["py", "property", "Python property"], "4": ["py", "function", "Python function"], "5": ["py", "data", "Python data"]}, "titleterms": {"assert": [1, 147], "check_al": 2, "check_all_or_any_fn": 3, "check_ani": 4, "check_elem_in_list": 5, "check_equ": 6, "check_exist": 7, "check_fals": 8, "check_fill_value_and_dtype_are_compat": 9, "check_gather_input_valid": 10, "check_gather_nd_input_valid": 11, "check_great": 12, "check_isinst": 13, "check_less": 14, "check_shap": 15, "check_tru": 16, "backend": [17, 140, 143, 156, 159, 176], "handler": [17, 159], "choose_random_backend": 18, "clear_backend_stack": 19, "current_backend": 20, "fn_name_from_version_specific_fn_nam": 21, "get_backend": 22, "set_backend": 23, "set_backend_to_specific_vers": 24, "unset_backend": 25, "background": [26, 1558], "ml": 27, "explos": 27, "standard": [28, 157], "skeptic": 28, "complimentari": 28, "v": [28, 176], "competit": 28, "do": [28, 155], "work": [28, 32], "The": [28, 36, 153, 161, 176], "arrai": [28, 38, 41, 138, 139, 142, 149, 161, 191, 196, 201, 206, 211, 216, 221, 234, 241, 245, 253, 259, 270, 275, 280, 288, 294, 299, 307, 314, 319, 324, 329, 347, 358, 365, 370, 375, 380, 387, 408, 428, 437, 442, 447, 452, 457, 462, 467, 472, 477, 482, 487, 492, 497, 502, 507, 512, 517, 522, 527, 532, 537, 542, 547, 552, 557, 562, 567, 572, 577, 582, 587, 592, 597, 602, 607, 612, 617, 622, 627, 632, 637, 642, 647, 652, 657, 662, 667, 672, 677, 682, 687, 692, 697, 702, 707, 712, 717, 722, 727, 733, 738, 743, 748, 753, 765, 770, 775, 780, 791, 803, 811, 816, 822, 833, 841, 851, 858, 861, 867, 872, 879, 882, 887, 892, 897, 900, 907, 912, 924, 932, 938, 943, 948, 954, 959, 964, 969, 979, 984, 999, 1004, 1010, 1016, 1022, 1027, 1038, 1044, 1048, 1054, 1063, 1067, 1071, 1077, 1084, 1089, 1096, 1101, 1106, 1115, 1120, 1128, 1133, 1140, 1145, 1150, 1155, 1161, 1166, 1171, 1177, 1182, 1186, 1189, 1194, 1199, 1204, 1213, 1218, 1223, 1228, 1233, 1238, 1243, 1249, 1254, 1259, 1264, 1269, 1274, 1279, 1284, 1289, 1294, 1299, 1305, 1310, 1315, 1320, 1325, 1330, 1335, 1340, 1345, 1350, 1355, 1360, 1366, 1371, 1376, 1381, 1408, 1413, 1418, 1423, 1428, 1434, 1440, 1445, 1450, 1455, 1461, 1467, 1472, 1477, 1482, 1487, 1492, 1497, 1503, 1508, 1513, 1517, 1521, 1525, 1529, 1533, 1538, 1543, 1548, 1553], "api": [28, 34, 138, 141, 142, 156, 159, 161, 163, 164], "why": [29, 155], "unifi": [29, 161], "No": [29, 35], "more": [29, 35, 157], "re": [29, 155], "implement": 29, "infinit": 29, "shelf": 29, "life": 29, "contribut": [30, 1558], "appli": [31, 175], "librari": [31, 175], "introduct": [31, 153, 154], "exampl": [31, 145, 149, 154, 157], "ivi": [31, 34, 35, 36, 139, 142, 145, 147, 153, 154, 155, 156, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 175, 191, 192, 193, 194, 196, 197, 198, 199, 201, 202, 203, 204, 206, 207, 208, 209, 211, 212, 213, 214, 216, 217, 218, 219, 221, 222, 223, 224, 231, 232, 234, 235, 236, 241, 242, 245, 246, 247, 248, 250, 251, 253, 254, 255, 256, 259, 260, 261, 262, 264, 265, 267, 268, 270, 271, 272, 273, 275, 276, 277, 278, 280, 281, 282, 283, 285, 286, 288, 289, 290, 291, 293, 294, 295, 296, 298, 299, 300, 301, 303, 304, 306, 307, 308, 309, 314, 315, 316, 317, 319, 320, 321, 322, 324, 325, 326, 327, 329, 330, 331, 332, 337, 338, 342, 343, 344, 347, 348, 349, 350, 352, 353, 355, 356, 358, 359, 360, 361, 365, 366, 367, 368, 370, 371, 372, 373, 375, 376, 377, 378, 380, 381, 382, 383, 387, 388, 389, 390, 408, 409, 410, 411, 427, 428, 429, 430, 437, 438, 439, 440, 442, 443, 444, 445, 447, 448, 449, 450, 452, 453, 454, 455, 457, 458, 459, 460, 462, 463, 464, 465, 467, 468, 469, 470, 472, 473, 474, 475, 477, 478, 479, 480, 482, 483, 484, 485, 487, 488, 489, 490, 492, 493, 494, 495, 497, 498, 499, 500, 502, 503, 504, 505, 507, 508, 509, 510, 512, 513, 514, 515, 517, 518, 519, 520, 522, 523, 524, 525, 527, 528, 529, 530, 532, 533, 534, 535, 537, 538, 539, 540, 542, 543, 544, 545, 547, 548, 549, 550, 552, 553, 554, 555, 557, 558, 559, 560, 562, 563, 564, 565, 567, 568, 569, 570, 572, 573, 574, 575, 577, 578, 579, 580, 582, 583, 584, 585, 587, 588, 589, 590, 592, 593, 594, 595, 597, 598, 599, 600, 602, 603, 604, 605, 607, 608, 609, 610, 612, 613, 614, 615, 617, 618, 619, 620, 622, 623, 624, 625, 627, 628, 629, 630, 632, 633, 634, 635, 637, 638, 639, 640, 642, 643, 644, 645, 647, 648, 649, 650, 652, 653, 654, 655, 657, 658, 659, 660, 662, 663, 664, 665, 667, 668, 669, 670, 672, 673, 674, 675, 677, 678, 679, 680, 682, 683, 684, 685, 687, 688, 689, 690, 692, 693, 694, 695, 697, 698, 699, 700, 702, 703, 704, 705, 707, 708, 709, 710, 712, 713, 714, 715, 717, 718, 719, 720, 722, 723, 724, 725, 727, 728, 729, 730, 732, 733, 734, 735, 737, 738, 739, 740, 742, 743, 744, 745, 747, 748, 749, 750, 752, 753, 754, 755, 765, 766, 767, 768, 770, 771, 772, 773, 775, 776, 777, 778, 780, 781, 782, 783, 787, 788, 789, 791, 792, 793, 794, 798, 799, 800, 803, 804, 805, 806, 811, 812, 813, 814, 816, 817, 818, 819, 822, 823, 824, 825, 833, 834, 835, 836, 841, 842, 843, 844, 851, 852, 853, 854, 858, 859, 861, 862, 863, 864, 867, 868, 869, 870, 872, 873, 874, 875, 879, 880, 882, 883, 884, 885, 887, 888, 889, 890, 892, 893, 894, 895, 897, 898, 900, 901, 902, 903, 907, 908, 909, 910, 912, 913, 914, 915, 924, 925, 926, 927, 932, 933, 934, 935, 938, 939, 940, 941, 943, 944, 945, 946, 948, 949, 950, 951, 954, 955, 956, 957, 959, 960, 961, 962, 964, 965, 966, 967, 969, 970, 971, 972, 979, 980, 981, 982, 984, 985, 986, 987, 999, 1000, 1001, 1002, 1004, 1005, 1006, 1007, 1009, 1010, 1011, 1012, 1015, 1016, 1017, 1018, 1021, 1022, 1023, 1024, 1026, 1027, 1028, 1029, 1037, 1038, 1039, 1040, 1044, 1045, 1046, 1048, 1049, 1050, 1054, 1055, 1056, 1058, 1059, 1060, 1063, 1064, 1065, 1067, 1068, 1069, 1071, 1072, 1073, 1076, 1077, 1078, 1079, 1083, 1084, 1085, 1086, 1088, 1089, 1090, 1091, 1096, 1097, 1098, 1099, 1101, 1102, 1103, 1104, 1106, 1107, 1108, 1109, 1111, 1112, 1113, 1115, 1116, 1117, 1118, 1120, 1121, 1122, 1123, 1128, 1129, 1130, 1131, 1133, 1134, 1135, 1136, 1140, 1141, 1142, 1143, 1145, 1146, 1147, 1148, 1150, 1151, 1152, 1153, 1155, 1156, 1157, 1158, 1161, 1162, 1163, 1164, 1166, 1167, 1168, 1169, 1171, 1172, 1173, 1174, 1177, 1178, 1179, 1180, 1182, 1183, 1184, 1186, 1187, 1189, 1190, 1191, 1192, 1194, 1195, 1196, 1197, 1199, 1200, 1201, 1202, 1204, 1205, 1206, 1207, 1209, 1210, 1211, 1213, 1214, 1215, 1216, 1218, 1219, 1220, 1221, 1223, 1224, 1225, 1226, 1228, 1229, 1230, 1231, 1233, 1234, 1235, 1236, 1238, 1239, 1240, 1241, 1243, 1244, 1245, 1246, 1248, 1249, 1250, 1251, 1253, 1254, 1255, 1256, 1258, 1259, 1260, 1261, 1263, 1264, 1265, 1266, 1268, 1269, 1270, 1271, 1273, 1274, 1275, 1276, 1278, 1279, 1280, 1281, 1283, 1284, 1285, 1286, 1289, 1290, 1291, 1292, 1294, 1295, 1296, 1297, 1299, 1300, 1301, 1302, 1305, 1306, 1307, 1308, 1310, 1311, 1312, 1313, 1315, 1316, 1317, 1318, 1320, 1321, 1322, 1323, 1325, 1326, 1327, 1328, 1330, 1331, 1332, 1333, 1335, 1336, 1337, 1338, 1340, 1341, 1342, 1343, 1345, 1346, 1347, 1348, 1350, 1351, 1352, 1353, 1355, 1356, 1357, 1358, 1360, 1361, 1362, 1363, 1365, 1366, 1367, 1368, 1370, 1371, 1372, 1373, 1375, 1376, 1377, 1378, 1380, 1381, 1382, 1383, 1408, 1409, 1410, 1413, 1414, 1415, 1416, 1418, 1419, 1420, 1421, 1423, 1424, 1425, 1426, 1428, 1429, 1430, 1431, 1434, 1435, 1436, 1437, 1440, 1441, 1442, 1443, 1445, 1446, 1447, 1448, 1450, 1451, 1452, 1453, 1455, 1456, 1457, 1458, 1460, 1461, 1462, 1463, 1466, 1467, 1468, 1469, 1471, 1472, 1473, 1474, 1476, 1477, 1478, 1479, 1481, 1482, 1483, 1484, 1487, 1488, 1489, 1490, 1492, 1493, 1494, 1495, 1497, 1498, 1499, 1500, 1503, 1504, 1505, 1506, 1508, 1509, 1510, 1511, 1513, 1514, 1515, 1517, 1518, 1519, 1521, 1522, 1523, 1525, 1526, 1527, 1529, 1530, 1531, 1533, 1534, 1535, 1537, 1538, 1539, 1540, 1542, 1543, 1544, 1545, 1548, 1549, 1550, 1551, 1553, 1554, 1555, 1556], "robot": [31, 172, 175], "build": [32, 159], "doc": 32, "docker": [32, 35, 36], "dockerless": 32, "us": [32, 35, 138, 162], "miniconda": [32, 35], "venv": [32, 35], "document": 32, "pipelin": [32, 142, 155, 176], "make_doc": 32, "sh": 32, "entrypoint": 32, "_make_doc": 32, "generate_src_rst_fil": 32, "py": 32, "sphinx": 32, "correct_built_html_fil": 32, "remove_fil": 32, "help": [33, 36], "resourc": 33, "open": 34, "task": 34, "function": [34, 141, 143, 144, 147, 149, 150, 151, 153, 155, 156, 159, 164, 176], "format": [34, 148], "checklist": 34, "frontend": [34, 140, 142, 153, 154, 164], "where": [34, 1459, 1461, 1462, 1463], "place": 34, "extens": [34, 36, 56, 105, 174, 756, 1558], "set": [35, 78, 127, 140, 839, 1464], "up": 35, "clone": 35, "pycharm": [35, 36], "virtual": 35, "environ": 35, "interpret": 35, "window": 35, "maco": 35, "ubuntu": 35, "test": [35, 36, 138, 142, 154, 155], "detail": 35, "hypothesi": [35, 154, 155], "log": [35, 606, 607, 608, 609], "github": [35, 142], "codespac": 35, "pre": [35, 148], "commit": [35, 36, 148], "basic": [36, 153], "get": 36, "todo": 36, "list": 36, "issu": 36, "manag": 36, "your": 36, "fork": 36, "who": 36, "To": 36, "ask": 36, "With": 36, "command": 36, "line": 36, "browser": 36, "pull": [36, 142], "request": [36, 142], "small": 36, "often": 36, "interact": 36, "contain": [36, 88, 93, 141, 162, 192, 194, 197, 199, 202, 204, 207, 209, 212, 214, 217, 219, 222, 224, 232, 236, 246, 248, 251, 254, 256, 260, 262, 265, 268, 271, 273, 276, 278, 281, 283, 286, 289, 291, 293, 295, 298, 300, 303, 306, 308, 315, 317, 320, 322, 325, 327, 330, 332, 338, 342, 344, 348, 350, 353, 356, 359, 361, 366, 368, 371, 373, 376, 378, 381, 383, 388, 390, 409, 411, 427, 429, 438, 440, 443, 445, 448, 450, 453, 455, 458, 460, 463, 465, 468, 470, 473, 475, 478, 480, 483, 485, 488, 490, 493, 495, 498, 500, 503, 505, 508, 510, 513, 515, 518, 520, 523, 525, 528, 530, 533, 535, 538, 540, 543, 545, 548, 550, 553, 555, 558, 560, 563, 565, 568, 570, 573, 575, 578, 580, 583, 585, 588, 590, 593, 595, 598, 600, 603, 605, 608, 610, 613, 615, 618, 620, 623, 625, 628, 630, 633, 635, 638, 640, 643, 645, 648, 650, 653, 655, 658, 660, 663, 665, 668, 670, 673, 675, 678, 680, 683, 685, 688, 690, 693, 695, 698, 700, 703, 705, 708, 710, 713, 715, 718, 720, 723, 725, 728, 730, 732, 734, 737, 739, 742, 744, 747, 749, 752, 754, 766, 768, 771, 773, 776, 778, 781, 783, 787, 789, 792, 794, 798, 800, 804, 806, 812, 814, 817, 819, 823, 825, 834, 836, 842, 844, 852, 854, 862, 864, 868, 870, 873, 875, 883, 885, 888, 890, 893, 895, 901, 903, 908, 910, 913, 915, 925, 927, 933, 935, 939, 941, 944, 946, 949, 951, 955, 957, 960, 962, 965, 967, 970, 972, 980, 982, 985, 987, 1000, 1002, 1005, 1007, 1009, 1011, 1015, 1017, 1021, 1023, 1026, 1028, 1037, 1039, 1045, 1049, 1055, 1058, 1060, 1064, 1068, 1072, 1076, 1078, 1083, 1085, 1088, 1090, 1097, 1099, 1102, 1104, 1107, 1109, 1111, 1113, 1116, 1118, 1121, 1123, 1129, 1131, 1134, 1136, 1141, 1143, 1146, 1148, 1151, 1153, 1156, 1158, 1162, 1164, 1167, 1169, 1172, 1174, 1178, 1180, 1183, 1190, 1192, 1195, 1197, 1200, 1202, 1205, 1207, 1209, 1211, 1214, 1216, 1219, 1221, 1224, 1226, 1229, 1231, 1234, 1236, 1239, 1241, 1244, 1246, 1248, 1250, 1253, 1255, 1258, 1260, 1263, 1265, 1268, 1270, 1273, 1275, 1278, 1280, 1283, 1285, 1290, 1292, 1295, 1297, 1300, 1302, 1306, 1308, 1311, 1313, 1316, 1318, 1321, 1323, 1326, 1328, 1331, 1333, 1336, 1338, 1341, 1343, 1346, 1348, 1351, 1353, 1356, 1358, 1361, 1363, 1365, 1367, 1370, 1372, 1375, 1377, 1380, 1382, 1409, 1414, 1416, 1419, 1421, 1424, 1426, 1429, 1431, 1435, 1437, 1441, 1443, 1446, 1448, 1451, 1453, 1456, 1458, 1460, 1462, 1466, 1468, 1471, 1473, 1476, 1478, 1481, 1483, 1488, 1490, 1493, 1495, 1498, 1500, 1504, 1506, 1509, 1511, 1514, 1518, 1522, 1526, 1530, 1534, 1537, 1539, 1542, 1544, 1549, 1551, 1554, 1556], "run": [36, 138, 155], "local": 36, "most": 36, "out": [36, 149, 152], "id": [36, 138], "data": [37, 50, 99, 143, 153, 155, 162, 176, 310, 761, 1464, 1465, 1469, 1470, 1474, 1475, 1479, 1480, 1484], "class": [37, 147, 153, 161, 1565], "activ": [39, 89, 189, 757, 1566], "arraywithactiv": 40, "convers": [43, 95], "args_to_ivi": 44, "args_to_n": 45, "to_ivi": 46, "to_n": 47, "creation": [48, 97, 228, 760], "arraywithcr": 49, "type": [50, 99, 143, 150, 153, 176, 310, 761], "arraywithdatatyp": 51, "devic": [52, 101, 144, 149, 153, 401, 762], "arraywithdevic": 53, "elementwis": [54, 103, 435, 763], "arraywithelementwis": 55, "arraywithextens": 57, "gener": [58, 107, 155, 157, 784, 849], "arraywithgener": 59, "gradient": [60, 109, 785, 1042], "arraywithgradi": 61, "imag": [62, 111], "arraywithimag": 63, "layer": [64, 113, 801, 1093, 1581], "arraywithlay": 65, "linear": [66, 115, 807, 1139, 1140, 1141, 1142, 1159, 1591], "algebra": [66, 115, 807, 1159], "arraywithlinearalgebra": 67, "loss": [68, 117, 808, 1287], "arraywithloss": 69, "manipul": [70, 119, 809, 1303], "arraywithmanipul": 71, "norm": [72, 121, 831, 1406, 1595], "arraywithnorm": 73, "random": [74, 123, 837, 1411], "arraywithrandom": 75, "search": [76, 125, 838, 1438], "arraywithsearch": 77, "arraywithset": 79, "sort": [80, 129, 845, 1485, 1496, 1497, 1498, 1499], "arraywithsort": 81, "statist": [82, 131, 846, 1501], "arraywithstatist": 83, "util": [84, 133, 847, 1546], "arraywithutil": 85, "wrap": [86, 135, 151], "add_ivy_array_instance_method": 87, "containerwithactiv": 90, "base": 91, "containerbas": 92, "containerwithconvers": 96, "containerwithcr": 98, "containerwithdatatyp": 100, "containerwithdevic": 102, "containerwithelementwis": 104, "containerwithextens": 106, "containerwithgener": 108, "containerwithgradi": 110, "containerwithimag": 112, "containerwithlay": 114, "containerwithlinearalgebra": 116, "containerwithloss": 118, "containerwithmanipul": 120, "containerwithnorm": 122, "containerwithrandom": 124, "containerwithsearch": 126, "containerwithset": 128, "containerwithsort": 130, "containerwithstatist": 132, "containerwithutil": 134, "add_ivy_container_instance_method": 136, "deep": 137, "dive": 137, "termin": 138, "skip": 138, "nativ": 139, "handl": [139, 147, 176], "version": [140, 156, 176], "support": [140, 143, 153, 176], "instanc": [141, 153, 154, 161], "method": [141, 153, 154, 161, 162], "static": 141, "special": [141, 153, 154], "nestabl": [141, 149, 150], "continu": 142, "integr": [142, 155], "action": 142, "core": 142, "nn": 142, "state": [142, 163, 176], "ci": 142, "push": 142, "schedul": 142, "cron": 142, "job": 142, "dashboard": 142, "modul": [143, 144, 163, 1593, 1594], "promot": [143, 153], "argument": [143, 144, 149, 152, 153], "other": [143, 144], "unsupport": 143, "bug": 143, "superset": [143, 157], "docstr": [145, 146], "tan": [145, 154, 736, 738, 739, 740], "roll": [145, 1344, 1345, 1346, 1347], "add": [145, 154, 451, 452, 453, 454], "except": 147, "handle_except": 147, "decor": 147, "lint": 148, "check": [148, 176], "hook": 148, "posit": [149, 676, 677, 678, 679], "keyword": 149, "dtype": [149, 341, 342, 343], "number": 149, "oper": [149, 161, 176], "integ": 149, "sequenc": 149, "primari": 150, "composit": [150, 153], "mix": 150, "standalon": 150, "conveni": 150, "inplac": 152, "updat": 152, "copi": 152, "unus": 153, "miss": 153, "temporari": 153, "rule": 153, "numpi": 153, "cast": 153, "full": [154, 257], "helper": [154, 155, 156], "import": 155, "strategi": 155, "we": 155, "need": 155, "how": 155, "write": 155, "effect": 155, "bonu": 155, "extend": [155, 157], "featur": 155, "self": 155, "consist": 155, "explicit": 155, "test_array_funct": 155, "fail": 155, "navig": 156, "code": 156, "categor": 156, "submodul": 156, "design": [156, 158, 1558], "pin": 156, "behaviour": 157, "what": 157, "i": 157, "A": 157, "non": 157, "duplic": 157, "when": 157, "too": 157, "much": 157, "balanc": 157, "effici": 157, "block": 159, "graph": [159, 164], "compil": [159, 164, 225, 226, 758], "framework": [160, 1565], "monkei": 161, "patch": 161, "construct": 162, "represent": 162, "recurs": 162, "built": 162, "ins": 162, "access": 162, "save": 162, "load": 162, "comparison": 162, "custom": [162, 176], "case": 162, "compartment": 162, "configur": 162, "network": [162, 164], "weight": 162, "initi": [163, 1571, 1575], "optim": [163, 1597, 1601], "transpil": 164, "role": 164, "convert": [164, 1569], "model": [164, 171, 176], "builder": 166, "ecosystem": 167, "gym": [168, 175], "mech": 169, "memori": [170, 175], "vision": [173, 175], "mechan": 175, "faq": 176, "maintain": 176, "dynam": 176, "size": 176, "shape": [176, 996, 1464, 1465, 1469, 1470, 1474, 1475, 1479, 1480, 1484], "gpu": 176, "deploy": 176, "control": 176, "flow": 176, "auto": 176, "differenti": 176, "replica": 176, "parallel": 176, "altern": 176, "structur": 176, "func": 177, "wrapper": 177, "from_zero_dim_arrays_to_float": 178, "handle_nest": 179, "handle_out_argu": 180, "infer_devic": 181, "infer_dtyp": 182, "inputs_to_ivy_arrai": 183, "inputs_to_native_arrai": 184, "integer_arrays_to_float": 185, "outputs_to_ivy_arrai": 186, "to_native_arrays_and_back": 187, "gelu": [190, 191, 192, 193, 1568], "static_gelu": 194, "leaky_relu": [195, 196, 197, 198], "static_leaky_relu": 199, "log_softmax": [200, 201, 202, 203], "static_log_softmax": 204, "relu": [205, 206, 207, 208], "static_relu": 209, "sigmoid": [210, 211, 212, 213], "static_sigmoid": 214, "softmax": [215, 216, 217, 218], "static_softmax": 219, "softplu": [220, 221, 222, 223], "static_softplu": 224, "constant": [227, 759, 1572], "note": [228, 252, 255], "nestedsequ": 229, "arang": [230, 231], "static_arang": 232, "asarrai": [233, 234, 235], "static_asarrai": 236, "asarray_handle_nest": 237, "asarray_infer_devic": 238, "asarray_to_native_arrays_and_back": 239, "copy_arrai": [240, 241, 242], "empti": 243, "empty_lik": [244, 245, 246, 247], "static_empty_lik": 248, "ey": [249, 250], "static_ey": 251, "from_dlpack": [252, 253, 254, 255], "static_from_dlpack": 256, "full_lik": [258, 259, 260, 261], "static_full_lik": 262, "linspac": [263, 264], "static_linspac": 265, "logspac": [266, 267], "static_logspac": 268, "meshgrid": [269, 270, 271, 272], "static_meshgrid": 273, "native_arrai": [274, 275, 276, 277], "static_native_arrai": 278, "one_hot": [279, 280, 281, 282], "static_one_hot": 283, "ones": [284, 285], "static_on": 286, "ones_lik": [287, 288, 289, 290], "static_ones_lik": 291, "tril": [292, 294, 295, 296], "static_tril": 293, "triu": [297, 299, 300, 301], "static_triu": 298, "zero": [302, 304, 1580], "static_zero": 303, "zeros_lik": [305, 307, 308, 309], "static_zeros_lik": 306, "as_ivy_dtyp": 311, "as_native_dtyp": 312, "astyp": [313, 314, 315, 316], "static_astyp": 317, "broadcast_arrai": [318, 319, 320, 321], "static_broadcast_arrai": 322, "broadcast_to": [323, 324, 325, 326], "static_broadcast_to": 327, "can_cast": [328, 329, 330, 331], "static_can_cast": 332, "check_float": 333, "closest_valid_dtyp": 334, "default_dtyp": 335, "default_float_dtyp": [336, 337], "static_default_float_dtyp": 338, "default_int_dtyp": 339, "default_uint_dtyp": 340, "static_dtyp": 344, "dtype_bit": 345, "finfo": [346, 347, 348, 349], "static_finfo": 350, "function_supported_dtyp": [351, 352], "static_function_supported_dtyp": 353, "function_unsupported_dtyp": [354, 355], "static_function_unsupported_dtyp": 356, "iinfo": [357, 358, 359, 360], "static_iinfo": 361, "infer_default_dtyp": 362, "invalid_dtyp": 363, "is_bool_dtyp": [364, 365, 366, 367], "static_is_bool_dtyp": 368, "is_float_dtyp": [369, 370, 371, 372], "static_is_float_dtyp": 373, "is_int_dtyp": [374, 375, 376, 377], "static_is_int_dtyp": 378, "is_uint_dtyp": [379, 380, 381, 382], "static_is_uint_dtyp": 383, "promote_typ": 384, "promote_types_of_input": 385, "result_typ": [386, 387, 388, 389], "static_result_typ": 390, "set_default_dtyp": 391, "set_default_float_dtyp": 392, "set_default_int_dtyp": 393, "set_default_uint_dtyp": 394, "type_promote_arrai": 395, "unset_default_dtyp": 396, "unset_default_float_dtyp": 397, "unset_default_int_dtyp": 398, "unset_default_uint_dtyp": 399, "valid_dtyp": 400, "profil": 402, "as_ivy_dev": 403, "as_native_dev": 404, "clear_mem_on_dev": 405, "default_devic": 406, "dev": [407, 408, 409, 410], "static_dev": 411, "dev_util": 412, "function_supported_devic": 413, "function_unsupported_devic": 414, "get_all_ivy_arrays_on_dev": 415, "gpu_is_avail": 416, "num_cpu_cor": 417, "num_gpu": 418, "num_ivy_arrays_on_dev": 419, "percent_used_mem_on_dev": 420, "print_all_ivy_arrays_on_dev": 421, "set_default_devic": 422, "set_split_factor": 423, "split_factor": 424, "split_func_cal": 425, "to_devic": [426, 428, 429, 430], "static_to_devic": 427, "total_mem_on_dev": 431, "tpu_is_avail": 432, "unset_default_devic": 433, "used_mem_on_dev": 434, "ab": [436, 437, 438, 439], "static_ab": 440, "aco": [441, 442, 443, 444], "static_aco": 445, "acosh": [446, 447, 448, 449], "static_acosh": 450, "static_add": 455, "asin": [456, 457, 458, 459], "static_asin": 460, "asinh": [461, 462, 463, 464], "static_asinh": 465, "atan": [466, 467, 468, 469], "static_atan": 470, "atan2": [471, 472, 473, 474], "static_atan2": 475, "atanh": [476, 477, 478, 479], "static_atanh": 480, "bitwise_and": [481, 482, 483, 484], "static_bitwise_and": 485, "bitwise_invert": [486, 487, 488, 489], "static_bitwise_invert": 490, "bitwise_left_shift": [491, 492, 493, 494], "static_bitwise_left_shift": 495, "bitwise_or": [496, 497, 498, 499], "static_bitwise_or": 500, "bitwise_right_shift": [501, 502, 503, 504], "static_bitwise_right_shift": 505, "bitwise_xor": [506, 507, 508, 509], "static_bitwise_xor": 510, "ceil": [511, 512, 513, 514], "static_ceil": 515, "co": [516, 517, 518, 519], "static_co": 520, "cosh": [521, 522, 523, 524], "static_cosh": 525, "deg2rad": [526, 527, 528, 529], "static_deg2rad": 530, "divid": [531, 532, 533, 534], "static_divid": 535, "equal": [536, 537, 538, 539], "static_equ": 540, "erf": [541, 542, 543, 544], "static_erf": 545, "exp": [546, 547, 548, 549], "static_exp": 550, "expm1": [551, 552, 553, 554], "static_expm1": 555, "floor": [556, 557, 558, 559], "static_floor": 560, "floor_divid": [561, 562, 563, 564], "static_floor_divid": 565, "greater": [566, 567, 568, 569], "static_great": 570, "greater_equ": [571, 572, 573, 574], "static_greater_equ": 575, "isfinit": [576, 577, 578, 579], "static_isfinit": 580, "isinf": [581, 582, 583, 584], "static_isinf": 585, "isnan": [586, 587, 588, 589], "static_isnan": 590, "isreal": [591, 592, 593, 594], "static_isr": 595, "less": [596, 597, 598, 599], "static_less": 600, "less_equ": [601, 602, 603, 604], "static_less_equ": 605, "static_log": 610, "log10": [611, 612, 613, 614], "static_log10": 615, "log1p": [616, 617, 618, 619], "static_log1p": 620, "log2": [621, 622, 623, 624], "static_log2": 625, "logaddexp": [626, 627, 628, 629], "static_logaddexp": 630, "logical_and": [631, 632, 633, 634], "static_logical_and": 635, "logical_not": [636, 637, 638, 639], "static_logical_not": 640, "logical_or": [641, 642, 643, 644], "static_logical_or": 645, "logical_xor": [646, 647, 648, 649], "static_logical_xor": 650, "maximum": [651, 652, 653, 654], "static_maximum": 655, "minimum": [656, 657, 658, 659], "static_minimum": 660, "multipli": [661, 662, 663, 664], "static_multipli": 665, "neg": [666, 667, 668, 669], "static_neg": 670, "not_equ": [671, 672, 673, 674], "static_not_equ": 675, "static_posit": 680, "pow": [681, 682, 683, 684], "static_pow": 685, "rad2deg": [686, 687, 688, 689], "static_rad2deg": 690, "reciproc": [691, 692, 693, 694], "static_reciproc": 695, "remaind": [696, 697, 698, 699], "static_remaind": 700, "round": [701, 702, 703, 704], "static_round": 705, "sign": [706, 707, 708, 709], "static_sign": 710, "sin": [711, 712, 713, 714], "static_sin": 715, "sinh": [716, 717, 718, 719], "static_sinh": 720, "sqrt": [721, 722, 723, 724], "static_sqrt": 725, "squar": [726, 727, 728, 729], "static_squar": 730, "subtract": [731, 733, 734, 735], "static_subtract": 732, "static_tan": 737, "tanh": [741, 743, 744, 745], "static_tanh": 742, "trunc": [746, 748, 749, 750], "static_trunc": 747, "trunc_divid": [751, 753, 754, 755], "static_trunc_divid": 752, "flatten": [764, 765, 766, 767], "static_flatten": 768, "flipud": [769, 770, 771, 772], "static_flipud": 773, "fmax": [774, 775, 776, 777], "static_fmax": 778, "fmod": [779, 780, 781, 782], "static_fmod": 783, "hann_window": [786, 787, 788], "static_hann_window": 789, "heavisid": [790, 791, 792, 793], "static_heavisid": 794, "is_ivy_sparse_arrai": 795, "is_native_sparse_arrai": 796, "kaiser_window": [797, 798, 799], "static_kaiser_window": 800, "lcm": [802, 803, 804, 805], "static_lcm": 806, "max_pool2d": [810, 811, 812, 813], "static_max_pool2d": 814, "median": [815, 816, 817, 818], "static_median": 819, "meta": [820, 1384], "moveaxi": [821, 822, 823, 824], "static_moveaxi": 825, "native_sparse_arrai": 826, "native_sparse_array_to_indices_values_and_shap": 827, "ndenumer": 828, "ndindex": 829, "nest": [830, 1388], "pad": [832, 833, 834, 835], "static_pad": 836, "sinc": [840, 841, 842, 843], "static_sinc": 844, "vorbis_window": 848, "all_equ": [850, 851, 852, 853], "static_all_equ": 854, "arg_info": 855, "arg_nam": 856, "array_equ": [857, 858, 859], "assert_supports_inplac": [860, 861, 862, 863], "static_assert_supports_inplac": 864, "cache_fn": 865, "clip_matrix_norm": [866, 867, 868, 869], "static_clip_matrix_norm": 870, "clip_vector_norm": [871, 872, 873, 874], "static_clip_vector_norm": 875, "container_typ": 876, "current_backend_str": 877, "default": [878, 879, 880], "einops_rearrang": [881, 882, 883, 884], "static_einops_rearrang": 885, "einops_reduc": [886, 887, 888, 889], "static_einops_reduc": 890, "einops_repeat": [891, 892, 893, 894], "static_einops_repeat": 895, "exist": [896, 897, 898], "fourier_encod": [899, 900, 901, 902], "static_fourier_encod": 903, "function_supported_devices_and_dtyp": 904, "function_unsupported_devices_and_dtyp": 905, "gather": [906, 907, 908, 909], "static_gath": 910, "gather_nd": [911, 912, 913, 914], "static_gather_nd": 915, "get_all_arrays_in_memori": 916, "get_array_mod": 917, "get_exception_trace_mod": 918, "get_item": 919, "get_min_bas": 920, "get_min_denomin": 921, "get_nestable_mod": 922, "get_num_dim": [923, 924, 925, 926], "static_get_num_dim": 927, "get_queue_timeout": 928, "get_referrers_recurs": 929, "get_tmp_dir": 930, "has_nan": [931, 932, 933, 934], "static_has_nan": 935, "inplace_arrays_support": 936, "inplace_decr": [937, 938, 939, 940], "static_inplace_decr": 941, "inplace_incr": [942, 943, 944, 945], "static_inplace_incr": 946, "inplace_upd": [947, 948, 949, 950], "static_inplace_upd": 951, "inplace_variables_support": 952, "is_arrai": [953, 954, 955, 956], "static_is_arrai": 957, "is_ivy_arrai": [958, 959, 960, 961], "static_is_ivy_arrai": 962, "is_ivy_contain": [963, 964, 965, 966], "static_is_ivy_contain": 967, "is_native_arrai": [968, 969, 970, 971], "static_is_native_arrai": 972, "isscalar": 973, "match_kwarg": 974, "multiprocess": 975, "num_arrays_in_memori": 976, "print_all_arrays_in_memori": 977, "scatter_flat": [978, 979, 980, 981], "static_scatter_flat": 982, "scatter_nd": [983, 984, 985, 986], "static_scatter_nd": 987, "set_array_mod": 988, "set_exception_trace_mod": 989, "set_min_bas": 990, "set_min_denomin": 991, "set_nestable_mod": 992, "set_queue_timeout": 993, "set_shape_array_mod": 994, "set_tmp_dir": 995, "shape_array_mod": 997, "stable_divid": [998, 999, 1000, 1001], "static_stable_divid": 1002, "stable_pow": [1003, 1004, 1005, 1006], "static_stable_pow": 1007, "supports_inplace_upd": [1008, 1010, 1011, 1012], "static_supports_inplace_upd": 1009, "to_ivy_shap": 1013, "to_list": [1014, 1016, 1017, 1018], "static_to_list": 1015, "to_native_shap": 1019, "to_numpi": [1020, 1022, 1023, 1024], "static_to_numpi": 1021, "to_scalar": [1025, 1027, 1028, 1029], "static_to_scalar": 1026, "try_else_non": 1030, "unset_array_mod": 1031, "unset_exception_trace_mod": 1032, "unset_nestable_mod": 1033, "unset_queue_timeout": 1034, "unset_shape_array_mod": 1035, "value_is_nan": [1036, 1038, 1039, 1040], "static_value_is_nan": 1037, "vmap": 1041, "adam_step": [1043, 1044, 1045, 1046], "adam_upd": [1047, 1048, 1049, 1050], "execute_with_gradi": 1051, "grad": 1052, "gradient_descent_upd": [1053, 1054, 1055, 1056], "is_vari": [1057, 1058, 1059], "static_is_vari": 1060, "jac": 1061, "lamb_upd": [1062, 1063, 1064, 1065], "lars_upd": [1066, 1067, 1068, 1069], "optimizer_upd": [1070, 1071, 1072, 1073], "set_with_grad": 1074, "stop_gradi": [1075, 1077, 1078, 1079], "static_stop_gradi": 1076, "unset_with_grad": 1080, "value_and_grad": 1081, "variabl": [1082, 1084, 1085, 1086], "static_vari": 1083, "variable_data": [1087, 1089, 1090, 1091], "static_variable_data": 1088, "with_grad": 1092, "conv": 1094, "conv1d": [1095, 1096, 1097, 1098, 1582], "static_conv1d": 1099, "conv1d_transpos": [1100, 1101, 1102, 1103], "static_conv1d_transpos": 1104, "conv2d": [1105, 1106, 1107, 1108, 1584], "static_conv2d": 1109, "conv2d_transpos": [1110, 1111, 1112], "static_conv2d_transpos": 1113, "conv3d": [1114, 1115, 1116, 1117, 1586], "static_conv3d": 1118, "conv3d_transpos": [1119, 1120, 1121, 1122], "static_conv3d_transpos": 1123, "conv_general_dil": 1124, "conv_general_transpos": 1125, "deconv_length": 1126, "depthwise_conv2d": [1127, 1128, 1129, 1130], "static_depthwise_conv2d": 1131, "dropout": [1132, 1133, 1134, 1135, 1589], "static_dropout": 1136, "get_x_data_format": 1137, "handle_pad": 1138, "static_linear": 1143, "lstm_updat": [1144, 1145, 1146, 1147], "static_lstm_upd": 1148, "multi_head_attent": [1149, 1150, 1151, 1152], "static_multi_head_attent": 1153, "scaled_dot_product_attent": [1154, 1155, 1156, 1157], "static_scaled_dot_product_attent": 1158, "choleski": [1160, 1161, 1162, 1163], "static_choleski": 1164, "cross": [1165, 1166, 1167, 1168], "static_cross": 1169, "det": [1170, 1171, 1172, 1173], "static_det": 1174, "diag": 1175, "diagon": [1176, 1177, 1178, 1179], "static_diagon": 1180, "eigh": [1181, 1182, 1183, 1184], "eigvalsh": [1185, 1186, 1187], "inner": [1188, 1189, 1190, 1191], "static_inn": 1192, "inv": [1193, 1194, 1195, 1196], "static_inv": 1197, "matmul": [1198, 1199, 1200, 1201], "static_matmul": 1202, "matrix_norm": [1203, 1204, 1205, 1206], "static_matrix_norm": 1207, "matrix_pow": [1208, 1209, 1210], "static_matrix_pow": 1211, "matrix_rank": [1212, 1213, 1214, 1215], "static_matrix_rank": 1216, "matrix_transpos": [1217, 1218, 1219, 1220], "static_matrix_transpos": 1221, "outer": [1222, 1223, 1224, 1225], "static_out": 1226, "pinv": [1227, 1228, 1229, 1230], "static_pinv": 1231, "qr": [1232, 1233, 1234, 1235], "static_qr": 1236, "slogdet": [1237, 1238, 1239, 1240], "static_slogdet": 1241, "solv": [1242, 1243, 1244, 1245], "static_solv": 1246, "svd": [1247, 1249, 1250, 1251], "static_svd": 1248, "svdval": [1252, 1254, 1255, 1256], "static_svdv": 1253, "tensordot": [1257, 1259, 1260, 1261], "static_tensordot": 1258, "trace": [1262, 1264, 1265, 1266], "static_trac": 1263, "vander": [1267, 1269, 1270, 1271], "static_vand": 1268, "vecdot": [1272, 1274, 1275, 1276], "static_vecdot": 1273, "vector_norm": [1277, 1279, 1280, 1281], "static_vector_norm": 1278, "vector_to_skew_symmetric_matrix": [1282, 1284, 1285, 1286], "static_vector_to_skew_symmetric_matrix": 1283, "binary_cross_entropi": [1288, 1289, 1290, 1291], "static_binary_cross_entropi": 1292, "cross_entropi": [1293, 1294, 1295, 1296], "static_cross_entropi": 1297, "sparse_cross_entropi": [1298, 1299, 1300, 1301], "static_sparse_cross_entropi": 1302, "clip": [1304, 1305, 1306, 1307], "static_clip": 1308, "concat": [1309, 1310, 1311, 1312], "static_concat": 1313, "constant_pad": [1314, 1315, 1316, 1317], "static_constant_pad": 1318, "expand_dim": [1319, 1320, 1321, 1322], "static_expand_dim": 1323, "flip": [1324, 1325, 1326, 1327], "static_flip": 1328, "permute_dim": [1329, 1330, 1331, 1332], "static_permute_dim": 1333, "repeat": [1334, 1335, 1336, 1337], "static_repeat": 1338, "reshap": [1339, 1340, 1341, 1342], "static_reshap": 1343, "static_rol": 1348, "split": [1349, 1350, 1351, 1352], "static_split": 1353, "squeez": [1354, 1355, 1356, 1357], "static_squeez": 1358, "stack": [1359, 1360, 1361, 1362], "static_stack": 1363, "swapax": [1364, 1366, 1367, 1368], "static_swapax": 1365, "tile": [1369, 1371, 1372, 1373], "static_til": 1370, "unstack": [1374, 1376, 1377, 1378], "static_unstack": 1375, "zero_pad": [1379, 1381, 1382, 1383], "static_zero_pad": 1380, "fomaml_step": 1385, "maml_step": 1386, "reptile_step": 1387, "all_nested_indic": 1389, "copy_nest": 1390, "index_nest": 1391, "insert_into_nest_at_index": 1392, "insert_into_nest_at_indic": 1393, "map": 1394, "map_nest_at_index": 1395, "map_nest_at_indic": 1396, "multi_index_nest": 1397, "nested_ani": 1398, "nested_argwher": 1399, "nested_map": 1400, "nested_multi_map": 1401, "prune_nest_at_index": 1402, "prune_nest_at_indic": 1403, "set_nest_at_index": 1404, "set_nest_at_indic": 1405, "layer_norm": [1407, 1408, 1409, 1410], "multinomi": [1412, 1413, 1414, 1415], "static_multinomi": 1416, "randint": [1417, 1418, 1419, 1420], "static_randint": 1421, "random_norm": [1422, 1423, 1424, 1425], "static_random_norm": 1426, "random_uniform": [1427, 1428, 1429, 1430], "static_random_uniform": 1431, "seed": 1432, "shuffl": [1433, 1434, 1435, 1436], "static_shuffl": 1437, "argmax": [1439, 1440, 1441, 1442], "static_argmax": 1443, "argmin": [1444, 1445, 1446, 1447], "static_argmin": 1448, "argwher": [1449, 1450, 1451, 1452], "static_argwher": 1453, "nonzero": [1454, 1455, 1456, 1457], "static_nonzero": 1458, "static_wher": 1460, "depend": [1464, 1465, 1469, 1470, 1474, 1475, 1479, 1480, 1484], "output": [1464, 1465, 1469, 1470, 1474, 1475, 1479, 1480, 1484], "unique_al": [1465, 1467, 1468, 1469], "static_unique_al": 1466, "unique_count": [1470, 1472, 1473, 1474], "static_unique_count": 1471, "unique_invers": [1475, 1477, 1478, 1479], "static_unique_invers": 1476, "unique_valu": [1480, 1482, 1483, 1484], "static_unique_valu": 1481, "argsort": [1486, 1487, 1488, 1489], "static_argsort": 1490, "searchsort": [1491, 1492, 1493, 1494], "static_searchsort": 1495, "static_sort": 1500, "cumprod": [1502, 1503, 1504, 1505], "static_cumprod": 1506, "cumsum": [1507, 1508, 1509, 1510], "static_cumsum": 1511, "einsum": [1512, 1513, 1514, 1515], "max": [1516, 1517, 1518, 1519], "mean": [1520, 1521, 1522, 1523], "min": [1524, 1525, 1526, 1527], "prod": [1528, 1529, 1530, 1531], "std": [1532, 1533, 1534, 1535], "sum": [1536, 1538, 1539, 1540], "static_sum": 1537, "var": [1541, 1543, 1544, 1545], "static_var": 1542, "all": [1547, 1548, 1549, 1550], "static_al": 1551, "ani": [1552, 1553, 1554, 1555], "static_ani": 1556, "glossari": 1557, "content": 1558, "overview": 1558, "quick": 1558, "start": 1558, "roadmap": [1558, 1564], "citat": 1558, "inspect": 1561, "add_array_spec": 1562, "fn_array_spec": 1563, "geglu": 1567, "to_ivy_modul": 1570, "firstlayersiren": 1573, "glorotuniform": 1574, "kaimingnorm": 1576, "Ones": 1577, "siren": 1578, "uniform": 1579, "conv1dtranspos": 1583, "conv2dtranspos": 1585, "conv3dtranspos": 1587, "depthwiseconv2d": 1588, "lstm": 1590, "multiheadattent": 1592, "layernorm": 1596, "adam": 1598, "lamb": 1599, "lar": 1600, "sgd": 1602, "sequenti": [1603, 1604], "verbos": 1606, "cprint": 1607}, "envversion": {"sphinx.domains.c": 2, "sphinx.domains.changeset": 1, "sphinx.domains.citation": 1, "sphinx.domains.cpp": 6, "sphinx.domains.index": 1, "sphinx.domains.javascript": 2, "sphinx.domains.math": 2, "sphinx.domains.python": 3, "sphinx.domains.rst": 2, "sphinx.domains.std": 2, "sphinx.ext.viewcode": 1, "sphinx": 56}})